{"ast":null,"code":"/*! codem-isoboxer v0.3.6 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */\nvar ISOBoxer = {};\n\nISOBoxer.parseBuffer = function (arrayBuffer) {\n  return new ISOFile(arrayBuffer).parse();\n};\n\nISOBoxer.addBoxProcessor = function (type, parser) {\n  if (typeof type !== 'string' || typeof parser !== 'function') {\n    return;\n  }\n\n  ISOBox.prototype._boxProcessors[type] = parser;\n};\n\nISOBoxer.createFile = function () {\n  return new ISOFile();\n}; // See ISOBoxer.append() for 'pos' parameter syntax\n\n\nISOBoxer.createBox = function (type, parent, pos) {\n  var newBox = ISOBox.create(type);\n\n  if (parent) {\n    parent.append(newBox, pos);\n  }\n\n  return newBox;\n}; // See ISOBoxer.append() for 'pos' parameter syntax\n\n\nISOBoxer.createFullBox = function (type, parent, pos) {\n  var newBox = ISOBoxer.createBox(type, parent, pos);\n  newBox.version = 0;\n  newBox.flags = 0;\n  return newBox;\n};\n\nISOBoxer.Utils = {};\n\nISOBoxer.Utils.dataViewToString = function (dataView, encoding) {\n  var impliedEncoding = encoding || 'utf-8';\n\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder(impliedEncoding).decode(dataView);\n  }\n\n  var a = [];\n  var i = 0;\n\n  if (impliedEncoding === 'utf-8') {\n    /* The following algorithm is essentially a rewrite of the UTF8.decode at\n    http://bannister.us/weblog/2007/simple-base64-encodedecode-javascript/\n    */\n    while (i < dataView.byteLength) {\n      var c = dataView.getUint8(i++);\n\n      if (c < 0x80) {// 1-byte character (7 bits)\n      } else if (c < 0xe0) {\n        // 2-byte character (11 bits)\n        c = (c & 0x1f) << 6;\n        c |= dataView.getUint8(i++) & 0x3f;\n      } else if (c < 0xf0) {\n        // 3-byte character (16 bits)\n        c = (c & 0xf) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= dataView.getUint8(i++) & 0x3f;\n      } else {\n        // 4-byte character (21 bits)\n        c = (c & 0x7) << 18;\n        c |= (dataView.getUint8(i++) & 0x3f) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= dataView.getUint8(i++) & 0x3f;\n      }\n\n      a.push(String.fromCharCode(c));\n    }\n  } else {\n    // Just map byte-by-byte (probably wrong)\n    while (i < dataView.byteLength) {\n      a.push(String.fromCharCode(dataView.getUint8(i++)));\n    }\n  }\n\n  return a.join('');\n};\n\nISOBoxer.Utils.utf8ToByteArray = function (string) {\n  // Only UTF-8 encoding is supported by TextEncoder\n  var u, i;\n\n  if (typeof TextEncoder !== 'undefined') {\n    u = new TextEncoder().encode(string);\n  } else {\n    u = [];\n\n    for (i = 0; i < string.length; ++i) {\n      var c = string.charCodeAt(i);\n\n      if (c < 0x80) {\n        u.push(c);\n      } else if (c < 0x800) {\n        u.push(0xC0 | c >> 6);\n        u.push(0x80 | 63 & c);\n      } else if (c < 0x10000) {\n        u.push(0xE0 | c >> 12);\n        u.push(0x80 | 63 & c >> 6);\n        u.push(0x80 | 63 & c);\n      } else {\n        u.push(0xF0 | c >> 18);\n        u.push(0x80 | 63 & c >> 12);\n        u.push(0x80 | 63 & c >> 6);\n        u.push(0x80 | 63 & c);\n      }\n    }\n  }\n\n  return u;\n}; // Method to append a box in the list of child boxes\n// The 'pos' parameter can be either:\n//   - (number) a position index at which to insert the new box\n//   - (string) the type of the box after which to insert the new box\n//   - (object) the box after which to insert the new box\n\n\nISOBoxer.Utils.appendBox = function (parent, box, pos) {\n  box._offset = parent._cursor.offset;\n  box._root = parent._root ? parent._root : parent;\n  box._raw = parent._raw;\n  box._parent = parent;\n\n  if (pos === -1) {\n    // The new box is a sub-box of the parent but not added in boxes array,\n    // for example when the new box is set as an entry (see dref and stsd for example)\n    return;\n  }\n\n  if (pos === undefined || pos === null) {\n    parent.boxes.push(box);\n    return;\n  }\n\n  var index = -1,\n      type;\n\n  if (typeof pos === \"number\") {\n    index = pos;\n  } else {\n    if (typeof pos === \"string\") {\n      type = pos;\n    } else if (typeof pos === \"object\" && pos.type) {\n      type = pos.type;\n    } else {\n      parent.boxes.push(box);\n      return;\n    }\n\n    for (var i = 0; i < parent.boxes.length; i++) {\n      if (type === parent.boxes[i].type) {\n        index = i + 1;\n        break;\n      }\n    }\n  }\n\n  parent.boxes.splice(index, 0, box);\n};\n\nif (typeof exports !== 'undefined') {\n  exports.parseBuffer = ISOBoxer.parseBuffer;\n  exports.addBoxProcessor = ISOBoxer.addBoxProcessor;\n  exports.createFile = ISOBoxer.createFile;\n  exports.createBox = ISOBoxer.createBox;\n  exports.createFullBox = ISOBoxer.createFullBox;\n  exports.Utils = ISOBoxer.Utils;\n}\n\nISOBoxer.Cursor = function (initialOffset) {\n  this.offset = typeof initialOffset == 'undefined' ? 0 : initialOffset;\n};\n\nvar ISOFile = function (arrayBuffer) {\n  this._cursor = new ISOBoxer.Cursor();\n  this.boxes = [];\n\n  if (arrayBuffer) {\n    this._raw = new DataView(arrayBuffer);\n  }\n};\n\nISOFile.prototype.fetch = function (type) {\n  var result = this.fetchAll(type, true);\n  return result.length ? result[0] : null;\n};\n\nISOFile.prototype.fetchAll = function (type, returnEarly) {\n  var result = [];\n\n  ISOFile._sweep.call(this, type, result, returnEarly);\n\n  return result;\n};\n\nISOFile.prototype.parse = function () {\n  this._cursor.offset = 0;\n  this.boxes = [];\n\n  while (this._cursor.offset < this._raw.byteLength) {\n    var box = ISOBox.parse(this); // Box could not be parsed\n\n    if (typeof box.type === 'undefined') break;\n    this.boxes.push(box);\n  }\n\n  return this;\n};\n\nISOFile._sweep = function (type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n};\n\nISOFile.prototype.write = function () {\n  var length = 0,\n      i;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    length += this.boxes[i].getLength(false);\n  }\n\n  var bytes = new Uint8Array(length);\n  this._rawo = new DataView(bytes.buffer);\n  this.bytes = bytes;\n  this._cursor.offset = 0;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    this.boxes[i].write();\n  }\n\n  return bytes.buffer;\n};\n\nISOFile.prototype.append = function (box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\n\nvar ISOBox = function () {\n  this._cursor = new ISOBoxer.Cursor();\n};\n\nISOBox.parse = function (parent) {\n  var newBox = new ISOBox();\n  newBox._offset = parent._cursor.offset;\n  newBox._root = parent._root ? parent._root : parent;\n  newBox._raw = parent._raw;\n  newBox._parent = parent;\n\n  newBox._parseBox();\n\n  parent._cursor.offset = newBox._raw.byteOffset + newBox._raw.byteLength;\n  return newBox;\n};\n\nISOBox.create = function (type) {\n  var newBox = new ISOBox();\n  newBox.type = type;\n  newBox.boxes = [];\n  return newBox;\n};\n\nISOBox.prototype._boxContainers = ['dinf', 'edts', 'mdia', 'meco', 'mfra', 'minf', 'moof', 'moov', 'mvex', 'stbl', 'strk', 'traf', 'trak', 'tref', 'udta', 'vttc', 'sinf', 'schi', 'encv', 'enca'];\nISOBox.prototype._boxProcessors = {}; ///////////////////////////////////////////////////////////////////////////////////////////////////\n// Generic read/write functions\n\nISOBox.prototype._procField = function (name, type, size) {\n  if (this._parsing) {\n    this[name] = this._readField(type, size);\n  } else {\n    this._writeField(type, size, this[name]);\n  }\n};\n\nISOBox.prototype._procFieldArray = function (name, length, type, size) {\n  var i;\n\n  if (this._parsing) {\n    this[name] = [];\n\n    for (i = 0; i < length; i++) {\n      this[name][i] = this._readField(type, size);\n    }\n  } else {\n    for (i = 0; i < this[name].length; i++) {\n      this._writeField(type, size, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procFullBox = function () {\n  this._procField('version', 'uint', 8);\n\n  this._procField('flags', 'uint', 24);\n};\n\nISOBox.prototype._procEntries = function (name, length, fn) {\n  var i;\n\n  if (this._parsing) {\n    this[name] = [];\n\n    for (i = 0; i < length; i++) {\n      this[name].push({});\n      fn.call(this, this[name][i]);\n    }\n  } else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procSubEntries = function (entry, name, length, fn) {\n  var i;\n\n  if (this._parsing) {\n    entry[name] = [];\n\n    for (i = 0; i < length; i++) {\n      entry[name].push({});\n      fn.call(this, entry[name][i]);\n    }\n  } else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, entry[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procEntryField = function (entry, name, type, size) {\n  if (this._parsing) {\n    entry[name] = this._readField(type, size);\n  } else {\n    this._writeField(type, size, entry[name]);\n  }\n};\n\nISOBox.prototype._procSubBoxes = function (name, length) {\n  var i;\n\n  if (this._parsing) {\n    this[name] = [];\n\n    for (i = 0; i < length; i++) {\n      this[name].push(ISOBox.parse(this));\n    }\n  } else {\n    for (i = 0; i < length; i++) {\n      if (this._rawo) {\n        this[name][i].write();\n      } else {\n        this.size += this[name][i].getLength();\n      }\n    }\n  }\n}; ///////////////////////////////////////////////////////////////////////////////////////////////////\n// Read/parse functions\n\n\nISOBox.prototype._readField = function (type, size) {\n  switch (type) {\n    case 'uint':\n      return this._readUint(size);\n\n    case 'int':\n      return this._readInt(size);\n\n    case 'template':\n      return this._readTemplate(size);\n\n    case 'string':\n      return size === -1 ? this._readTerminatedString() : this._readString(size);\n\n    case 'data':\n      return this._readData(size);\n\n    case 'utf8':\n      return this._readUTF8String();\n\n    default:\n      return -1;\n  }\n};\n\nISOBox.prototype._readInt = function (size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset;\n\n  switch (size) {\n    case 8:\n      result = this._raw.getInt8(offset);\n      break;\n\n    case 16:\n      result = this._raw.getInt16(offset);\n      break;\n\n    case 32:\n      result = this._raw.getInt32(offset);\n      break;\n\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      var s1 = this._raw.getInt32(offset);\n\n      var s2 = this._raw.getInt32(offset + 4);\n\n      result = s1 * Math.pow(2, 32) + s2;\n      break;\n  }\n\n  this._cursor.offset += size >> 3;\n  return result;\n};\n\nISOBox.prototype._readUint = function (size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset,\n      s1,\n      s2;\n\n  switch (size) {\n    case 8:\n      result = this._raw.getUint8(offset);\n      break;\n\n    case 16:\n      result = this._raw.getUint16(offset);\n      break;\n\n    case 24:\n      s1 = this._raw.getUint16(offset);\n      s2 = this._raw.getUint8(offset + 2);\n      result = (s1 << 8) + s2;\n      break;\n\n    case 32:\n      result = this._raw.getUint32(offset);\n      break;\n\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      s1 = this._raw.getUint32(offset);\n      s2 = this._raw.getUint32(offset + 4);\n      result = s1 * Math.pow(2, 32) + s2;\n      break;\n  }\n\n  this._cursor.offset += size >> 3;\n  return result;\n};\n\nISOBox.prototype._readString = function (length) {\n  var str = '';\n\n  for (var c = 0; c < length; c++) {\n    var char = this._readUint(8);\n\n    str += String.fromCharCode(char);\n  }\n\n  return str;\n};\n\nISOBox.prototype._readTemplate = function (size) {\n  var pre = this._readUint(size / 2);\n\n  var post = this._readUint(size / 2);\n\n  return pre + post / Math.pow(2, size / 2);\n};\n\nISOBox.prototype._readTerminatedString = function () {\n  var str = '';\n\n  while (this._cursor.offset - this._offset < this._raw.byteLength) {\n    var char = this._readUint(8);\n\n    if (char === 0) break;\n    str += String.fromCharCode(char);\n  }\n\n  return str;\n};\n\nISOBox.prototype._readData = function (size) {\n  var length = size > 0 ? size : this._raw.byteLength - (this._cursor.offset - this._offset);\n\n  if (length > 0) {\n    var data = new Uint8Array(this._raw.buffer, this._cursor.offset, length);\n    this._cursor.offset += length;\n    return data;\n  } else {\n    return null;\n  }\n};\n\nISOBox.prototype._readUTF8String = function () {\n  var length = this._raw.byteLength - (this._cursor.offset - this._offset);\n  var data = null;\n\n  if (length > 0) {\n    data = new DataView(this._raw.buffer, this._cursor.offset, length);\n    this._cursor.offset += length;\n  }\n\n  return data ? ISOBoxer.Utils.dataViewToString(data) : data;\n};\n\nISOBox.prototype._parseBox = function () {\n  this._parsing = true;\n  this._cursor.offset = this._offset; // return immediately if there are not enough bytes to read the header\n\n  if (this._offset + 8 > this._raw.buffer.byteLength) {\n    this._root._incomplete = true;\n    return;\n  }\n\n  this._procField('size', 'uint', 32);\n\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1) {\n    this._procField('largesize', 'uint', 64);\n  }\n\n  if (this.type === 'uuid') {\n    this._procFieldArray('usertype', 16, 'uint', 8);\n  }\n\n  switch (this.size) {\n    case 0:\n      this._raw = new DataView(this._raw.buffer, this._offset, this._raw.byteLength - this._cursor.offset + 8);\n      break;\n\n    case 1:\n      if (this._offset + this.size > this._raw.buffer.byteLength) {\n        this._incomplete = true;\n        this._root._incomplete = true;\n      } else {\n        this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);\n      }\n\n      break;\n\n    default:\n      if (this._offset + this.size > this._raw.buffer.byteLength) {\n        this._incomplete = true;\n        this._root._incomplete = true;\n      } else {\n        this._raw = new DataView(this._raw.buffer, this._offset, this.size);\n      }\n\n  } // additional parsing\n\n\n  if (!this._incomplete) {\n    if (this._boxProcessors[this.type]) {\n      this._boxProcessors[this.type].call(this);\n    }\n\n    if (this._boxContainers.indexOf(this.type) !== -1) {\n      this._parseContainerBox();\n    } else {\n      // Unknown box => read and store box content\n      this._data = this._readData();\n    }\n  }\n};\n\nISOBox.prototype._parseFullBox = function () {\n  this.version = this._readUint(8);\n  this.flags = this._readUint(24);\n};\n\nISOBox.prototype._parseContainerBox = function () {\n  this.boxes = [];\n\n  while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n    this.boxes.push(ISOBox.parse(this));\n  }\n}; ///////////////////////////////////////////////////////////////////////////////////////////////////\n// Write functions\n\n\nISOBox.prototype.append = function (box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\n\nISOBox.prototype.getLength = function () {\n  this._parsing = false;\n  this._rawo = null;\n  this.size = 0;\n\n  this._procField('size', 'uint', 32);\n\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1) {\n    this._procField('largesize', 'uint', 64);\n  }\n\n  if (this.type === 'uuid') {\n    this._procFieldArray('usertype', 16, 'uint', 8);\n  }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.size += this.boxes[i].getLength();\n    }\n  }\n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  return this.size;\n};\n\nISOBox.prototype.write = function () {\n  this._parsing = false;\n  this._cursor.offset = this._parent._cursor.offset;\n\n  switch (this.size) {\n    case 0:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.parent._rawo.byteLength - this._cursor.offset);\n      break;\n\n    case 1:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize);\n      break;\n\n    default:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size);\n  }\n\n  this._procField('size', 'uint', 32);\n\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1) {\n    this._procField('largesize', 'uint', 64);\n  }\n\n  if (this.type === 'uuid') {\n    this._procFieldArray('usertype', 16, 'uint', 8);\n  }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.boxes[i].write();\n    }\n  }\n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  this._parent._cursor.offset += this.size;\n  return this.size;\n};\n\nISOBox.prototype._writeInt = function (size, value) {\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset;\n\n    switch (size) {\n      case 8:\n        this._rawo.setInt8(offset, value);\n\n        break;\n\n      case 16:\n        this._rawo.setInt16(offset, value);\n\n        break;\n\n      case 32:\n        this._rawo.setInt32(offset, value);\n\n        break;\n\n      case 64:\n        // Warning: JavaScript cannot handle 64-bit integers natively.\n        // This will give unexpected results for integers >= 2^53\n        var s1 = Math.floor(value / Math.pow(2, 32));\n        var s2 = value - s1 * Math.pow(2, 32);\n\n        this._rawo.setUint32(offset, s1);\n\n        this._rawo.setUint32(offset + 4, s2);\n\n        break;\n    }\n\n    this._cursor.offset += size >> 3;\n  } else {\n    this.size += size >> 3;\n  }\n};\n\nISOBox.prototype._writeUint = function (size, value) {\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset,\n        s1,\n        s2;\n\n    switch (size) {\n      case 8:\n        this._rawo.setUint8(offset, value);\n\n        break;\n\n      case 16:\n        this._rawo.setUint16(offset, value);\n\n        break;\n\n      case 24:\n        s1 = (value & 0xFFFF00) >> 8;\n        s2 = value & 0x0000FF;\n\n        this._rawo.setUint16(offset, s1);\n\n        this._rawo.setUint8(offset + 2, s2);\n\n        break;\n\n      case 32:\n        this._rawo.setUint32(offset, value);\n\n        break;\n\n      case 64:\n        // Warning: JavaScript cannot handle 64-bit integers natively.\n        // This will give unexpected results for integers >= 2^53\n        s1 = Math.floor(value / Math.pow(2, 32));\n        s2 = value - s1 * Math.pow(2, 32);\n\n        this._rawo.setUint32(offset, s1);\n\n        this._rawo.setUint32(offset + 4, s2);\n\n        break;\n    }\n\n    this._cursor.offset += size >> 3;\n  } else {\n    this.size += size >> 3;\n  }\n};\n\nISOBox.prototype._writeString = function (size, str) {\n  for (var c = 0; c < size; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n};\n\nISOBox.prototype._writeTerminatedString = function (str) {\n  if (str.length === 0) {\n    return;\n  }\n\n  for (var c = 0; c < str.length; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n\n  this._writeUint(8, 0);\n};\n\nISOBox.prototype._writeTemplate = function (size, value) {\n  var pre = Math.floor(value);\n  var post = (value - pre) * Math.pow(2, size / 2);\n\n  this._writeUint(size / 2, pre);\n\n  this._writeUint(size / 2, post);\n};\n\nISOBox.prototype._writeData = function (data) {\n  var i; //data to copy\n\n  if (data) {\n    if (this._rawo) {\n      //Array and Uint8Array has also to be managed\n      if (data instanceof Array) {\n        var offset = this._cursor.offset - this._rawo.byteOffset;\n\n        for (var i = 0; i < data.length; i++) {\n          this._rawo.setInt8(offset + i, data[i]);\n        }\n\n        this._cursor.offset += data.length;\n      }\n\n      if (data instanceof Uint8Array) {\n        this._root.bytes.set(data, this._cursor.offset);\n\n        this._cursor.offset += data.length;\n      }\n    } else {\n      //nothing to copy only size to compute\n      this.size += data.length;\n    }\n  }\n};\n\nISOBox.prototype._writeUTF8String = function (string) {\n  var u = ISOBoxer.Utils.utf8ToByteArray(string);\n\n  if (this._rawo) {\n    var dataView = new DataView(this._rawo.buffer, this._cursor.offset, u.length);\n\n    for (var i = 0; i < u.length; i++) {\n      dataView.setUint8(i, u[i]);\n    }\n  } else {\n    this.size += u.length;\n  }\n};\n\nISOBox.prototype._writeField = function (type, size, value) {\n  switch (type) {\n    case 'uint':\n      this._writeUint(size, value);\n\n      break;\n\n    case 'int':\n      this._writeInt(size, value);\n\n      break;\n\n    case 'template':\n      this._writeTemplate(size, value);\n\n      break;\n\n    case 'string':\n      if (size == -1) {\n        this._writeTerminatedString(value);\n      } else {\n        this._writeString(size, value);\n      }\n\n      break;\n\n    case 'data':\n      this._writeData(value);\n\n      break;\n\n    case 'utf8':\n      this._writeUTF8String(value);\n\n      break;\n\n    default:\n      break;\n  }\n}; // ISO/IEC 14496-15:2014 - avc1 box\n\n\nISOBox.prototype._boxProcessors['avc1'] = ISOBox.prototype._boxProcessors['encv'] = function () {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6, 'uint', 8);\n\n  this._procField('data_reference_index', 'uint', 16); // VisualSampleEntry fields\n\n\n  this._procField('pre_defined1', 'uint', 16);\n\n  this._procField('reserved2', 'uint', 16);\n\n  this._procFieldArray('pre_defined2', 3, 'uint', 32);\n\n  this._procField('width', 'uint', 16);\n\n  this._procField('height', 'uint', 16);\n\n  this._procField('horizresolution', 'template', 32);\n\n  this._procField('vertresolution', 'template', 32);\n\n  this._procField('reserved3', 'uint', 32);\n\n  this._procField('frame_count', 'uint', 16);\n\n  this._procFieldArray('compressorname', 32, 'uint', 8);\n\n  this._procField('depth', 'uint', 16);\n\n  this._procField('pre_defined3', 'int', 16); // AVCSampleEntry fields\n\n\n  this._procField('config', 'data', -1);\n}; // ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\n\n\nISOBox.prototype._boxProcessors['dref'] = function () {\n  this._procFullBox();\n\n  this._procField('entry_count', 'uint', 32);\n\n  this._procSubBoxes('entries', this.entry_count);\n}; // ISO/IEC 14496-12:2012 - 8.6.6 Edit List Box\n\n\nISOBox.prototype._boxProcessors['elst'] = function () {\n  this._procFullBox();\n\n  this._procField('entry_count', 'uint', 32);\n\n  this._procEntries('entries', this.entry_count, function (entry) {\n    this._procEntryField(entry, 'segment_duration', 'uint', this.version === 1 ? 64 : 32);\n\n    this._procEntryField(entry, 'media_time', 'int', this.version === 1 ? 64 : 32);\n\n    this._procEntryField(entry, 'media_rate_integer', 'int', 16);\n\n    this._procEntryField(entry, 'media_rate_fraction', 'int', 16);\n  });\n}; // ISO/IEC 23009-1:2014 - 5.10.3.3 Event Message Box\n\n\nISOBox.prototype._boxProcessors['emsg'] = function () {\n  this._procFullBox();\n\n  if (this.version == 1) {\n    this._procField('timescale', 'uint', 32);\n\n    this._procField('presentation_time', 'uint', 64);\n\n    this._procField('event_duration', 'uint', 32);\n\n    this._procField('id', 'uint', 32);\n\n    this._procField('scheme_id_uri', 'string', -1);\n\n    this._procField('value', 'string', -1);\n  } else {\n    this._procField('scheme_id_uri', 'string', -1);\n\n    this._procField('value', 'string', -1);\n\n    this._procField('timescale', 'uint', 32);\n\n    this._procField('presentation_time_delta', 'uint', 32);\n\n    this._procField('event_duration', 'uint', 32);\n\n    this._procField('id', 'uint', 32);\n  }\n\n  this._procField('message_data', 'data', -1);\n}; // ISO/IEC 14496-12:2012 - 8.1.2 Free Space Box\n\n\nISOBox.prototype._boxProcessors['free'] = ISOBox.prototype._boxProcessors['skip'] = function () {\n  this._procField('data', 'data', -1);\n}; // ISO/IEC 14496-12:2012 - 8.12.2 Original Format Box\n\n\nISOBox.prototype._boxProcessors['frma'] = function () {\n  this._procField('data_format', 'uint', 32);\n}; // ISO/IEC 14496-12:2012 - 4.3 File Type Box / 8.16.2 Segment Type Box\n\n\nISOBox.prototype._boxProcessors['ftyp'] = ISOBox.prototype._boxProcessors['styp'] = function () {\n  this._procField('major_brand', 'string', 4);\n\n  this._procField('minor_version', 'uint', 32);\n\n  var nbCompatibleBrands = -1;\n\n  if (this._parsing) {\n    nbCompatibleBrands = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4;\n  }\n\n  this._procFieldArray('compatible_brands', nbCompatibleBrands, 'string', 4);\n}; // ISO/IEC 14496-12:2012 - 8.4.3 Handler Reference Box\n\n\nISOBox.prototype._boxProcessors['hdlr'] = function () {\n  this._procFullBox();\n\n  this._procField('pre_defined', 'uint', 32);\n\n  this._procField('handler_type', 'string', 4);\n\n  this._procFieldArray('reserved', 3, 'uint', 32);\n\n  this._procField('name', 'string', -1);\n}; // ISO/IEC 14496-12:2012 - 8.1.1 Media Data Box\n\n\nISOBox.prototype._boxProcessors['mdat'] = function () {\n  this._procField('data', 'data', -1);\n}; // ISO/IEC 14496-12:2012 - 8.4.2 Media Header Box\n\n\nISOBox.prototype._boxProcessors['mdhd'] = function () {\n  this._procFullBox();\n\n  this._procField('creation_time', 'uint', this.version == 1 ? 64 : 32);\n\n  this._procField('modification_time', 'uint', this.version == 1 ? 64 : 32);\n\n  this._procField('timescale', 'uint', 32);\n\n  this._procField('duration', 'uint', this.version == 1 ? 64 : 32);\n\n  if (!this._parsing && typeof this.language === 'string') {\n    // In case of writing and language has been set as a string, then convert it into char codes array\n    this.language = this.language.charCodeAt(0) - 0x60 << 10 | this.language.charCodeAt(1) - 0x60 << 5 | this.language.charCodeAt(2) - 0x60;\n  }\n\n  this._procField('language', 'uint', 16);\n\n  if (this._parsing) {\n    this.language = String.fromCharCode((this.language >> 10 & 0x1F) + 0x60, (this.language >> 5 & 0x1F) + 0x60, (this.language & 0x1F) + 0x60);\n  }\n\n  this._procField('pre_defined', 'uint', 16);\n}; // ISO/IEC 14496-12:2012 - 8.8.2 Movie Extends Header Box\n\n\nISOBox.prototype._boxProcessors['mehd'] = function () {\n  this._procFullBox();\n\n  this._procField('fragment_duration', 'uint', this.version == 1 ? 64 : 32);\n}; // ISO/IEC 14496-12:2012 - 8.8.5 Movie Fragment Header Box\n\n\nISOBox.prototype._boxProcessors['mfhd'] = function () {\n  this._procFullBox();\n\n  this._procField('sequence_number', 'uint', 32);\n}; // ISO/IEC 14496-12:2012 - 8.8.11 Movie Fragment Random Access Box\n\n\nISOBox.prototype._boxProcessors['mfro'] = function () {\n  this._procFullBox();\n\n  this._procField('mfra_size', 'uint', 32); // Called mfra_size to distinguish from the normal \"size\" attribute of a box\n\n}; // ISO/IEC 14496-12:2012 - 8.5.2.2 mp4a box (use AudioSampleEntry definition and naming)\n\n\nISOBox.prototype._boxProcessors['mp4a'] = ISOBox.prototype._boxProcessors['enca'] = function () {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6, 'uint', 8);\n\n  this._procField('data_reference_index', 'uint', 16); // AudioSampleEntry fields\n\n\n  this._procFieldArray('reserved2', 2, 'uint', 32);\n\n  this._procField('channelcount', 'uint', 16);\n\n  this._procField('samplesize', 'uint', 16);\n\n  this._procField('pre_defined', 'uint', 16);\n\n  this._procField('reserved3', 'uint', 16);\n\n  this._procField('samplerate', 'template', 32); // ESDescriptor fields\n\n\n  this._procField('esds', 'data', -1);\n}; // ISO/IEC 14496-12:2012 - 8.2.2 Movie Header Box\n\n\nISOBox.prototype._boxProcessors['mvhd'] = function () {\n  this._procFullBox();\n\n  this._procField('creation_time', 'uint', this.version == 1 ? 64 : 32);\n\n  this._procField('modification_time', 'uint', this.version == 1 ? 64 : 32);\n\n  this._procField('timescale', 'uint', 32);\n\n  this._procField('duration', 'uint', this.version == 1 ? 64 : 32);\n\n  this._procField('rate', 'template', 32);\n\n  this._procField('volume', 'template', 16);\n\n  this._procField('reserved1', 'uint', 16);\n\n  this._procFieldArray('reserved2', 2, 'uint', 32);\n\n  this._procFieldArray('matrix', 9, 'template', 32);\n\n  this._procFieldArray('pre_defined', 6, 'uint', 32);\n\n  this._procField('next_track_ID', 'uint', 32);\n}; // ISO/IEC 14496-30:2014 - WebVTT Cue Payload Box.\n\n\nISOBox.prototype._boxProcessors['payl'] = function () {\n  this._procField('cue_text', 'utf8');\n}; //ISO/IEC 23001-7:2011 - 8.1 Protection System Specific Header Box\n\n\nISOBox.prototype._boxProcessors['pssh'] = function () {\n  this._procFullBox();\n\n  this._procFieldArray('SystemID', 16, 'uint', 8);\n\n  this._procField('DataSize', 'uint', 32);\n\n  this._procFieldArray('Data', this.DataSize, 'uint', 8);\n}; // ISO/IEC 14496-12:2012 - 8.12.5 Scheme Type Box\n\n\nISOBox.prototype._boxProcessors['schm'] = function () {\n  this._procFullBox();\n\n  this._procField('scheme_type', 'uint', 32);\n\n  this._procField('scheme_version', 'uint', 32);\n\n  if (this.flags & 0x000001) {\n    this._procField('scheme_uri', 'string', -1);\n  }\n}; // ISO/IEC 14496-12:2012 - 8.6.4.1 sdtp box \n\n\nISOBox.prototype._boxProcessors['sdtp'] = function () {\n  this._procFullBox();\n\n  var sample_count = -1;\n\n  if (this._parsing) {\n    sample_count = this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset);\n  }\n\n  this._procFieldArray('sample_dependency_table', sample_count, 'uint', 8);\n}; // ISO/IEC 14496-12:2012 - 8.16.3 Segment Index Box\n\n\nISOBox.prototype._boxProcessors['sidx'] = function () {\n  this._procFullBox();\n\n  this._procField('reference_ID', 'uint', 32);\n\n  this._procField('timescale', 'uint', 32);\n\n  this._procField('earliest_presentation_time', 'uint', this.version == 1 ? 64 : 32);\n\n  this._procField('first_offset', 'uint', this.version == 1 ? 64 : 32);\n\n  this._procField('reserved', 'uint', 16);\n\n  this._procField('reference_count', 'uint', 16);\n\n  this._procEntries('references', this.reference_count, function (entry) {\n    if (!this._parsing) {\n      entry.reference = (entry.reference_type & 0x00000001) << 31;\n      entry.reference |= entry.referenced_size & 0x7FFFFFFF;\n      entry.sap = (entry.starts_with_SAP & 0x00000001) << 31;\n      entry.sap |= (entry.SAP_type & 0x00000003) << 28;\n      entry.sap |= entry.SAP_delta_time & 0x0FFFFFFF;\n    }\n\n    this._procEntryField(entry, 'reference', 'uint', 32);\n\n    this._procEntryField(entry, 'subsegment_duration', 'uint', 32);\n\n    this._procEntryField(entry, 'sap', 'uint', 32);\n\n    if (this._parsing) {\n      entry.reference_type = entry.reference >> 31 & 0x00000001;\n      entry.referenced_size = entry.reference & 0x7FFFFFFF;\n      entry.starts_with_SAP = entry.sap >> 31 & 0x00000001;\n      entry.SAP_type = entry.sap >> 28 & 0x00000007;\n      entry.SAP_delta_time = entry.sap & 0x0FFFFFFF;\n    }\n  });\n}; // ISO/IEC 14496-12:2012 - 8.4.5.3 Sound Media Header Box\n\n\nISOBox.prototype._boxProcessors['smhd'] = function () {\n  this._procFullBox();\n\n  this._procField('balance', 'uint', 16);\n\n  this._procField('reserved', 'uint', 16);\n}; // ISO/IEC 14496-12:2012 - 8.16.4 Subsegment Index Box\n\n\nISOBox.prototype._boxProcessors['ssix'] = function () {\n  this._procFullBox();\n\n  this._procField('subsegment_count', 'uint', 32);\n\n  this._procEntries('subsegments', this.subsegment_count, function (subsegment) {\n    this._procEntryField(subsegment, 'ranges_count', 'uint', 32);\n\n    this._procSubEntries(subsegment, 'ranges', subsegment.ranges_count, function (range) {\n      this._procEntryField(range, 'level', 'uint', 8);\n\n      this._procEntryField(range, 'range_size', 'uint', 24);\n    });\n  });\n}; // ISO/IEC 14496-12:2012 - 8.5.2 Sample Description Box\n\n\nISOBox.prototype._boxProcessors['stsd'] = function () {\n  this._procFullBox();\n\n  this._procField('entry_count', 'uint', 32);\n\n  this._procSubBoxes('entries', this.entry_count);\n}; // ISO/IEC 14496-12:2015 - 8.7.7 Sub-Sample Information Box\n\n\nISOBox.prototype._boxProcessors['subs'] = function () {\n  this._procFullBox();\n\n  this._procField('entry_count', 'uint', 32);\n\n  this._procEntries('entries', this.entry_count, function (entry) {\n    this._procEntryField(entry, 'sample_delta', 'uint', 32);\n\n    this._procEntryField(entry, 'subsample_count', 'uint', 16);\n\n    this._procSubEntries(entry, 'subsamples', entry.subsample_count, function (subsample) {\n      this._procEntryField(subsample, 'subsample_size', 'uint', this.version === 1 ? 32 : 16);\n\n      this._procEntryField(subsample, 'subsample_priority', 'uint', 8);\n\n      this._procEntryField(subsample, 'discardable', 'uint', 8);\n\n      this._procEntryField(subsample, 'codec_specific_parameters', 'uint', 32);\n    });\n  });\n}; //ISO/IEC 23001-7:2011 - 8.2 Track Encryption Box\n\n\nISOBox.prototype._boxProcessors['tenc'] = function () {\n  this._procFullBox();\n\n  this._procField('default_IsEncrypted', 'uint', 24);\n\n  this._procField('default_IV_size', 'uint', 8);\n\n  this._procFieldArray('default_KID', 16, 'uint', 8);\n}; // ISO/IEC 14496-12:2012 - 8.8.12 Track Fragmnent Decode Time\n\n\nISOBox.prototype._boxProcessors['tfdt'] = function () {\n  this._procFullBox();\n\n  this._procField('baseMediaDecodeTime', 'uint', this.version == 1 ? 64 : 32);\n}; // ISO/IEC 14496-12:2012 - 8.8.7 Track Fragment Header Box\n\n\nISOBox.prototype._boxProcessors['tfhd'] = function () {\n  this._procFullBox();\n\n  this._procField('track_ID', 'uint', 32);\n\n  if (this.flags & 0x01) this._procField('base_data_offset', 'uint', 64);\n  if (this.flags & 0x02) this._procField('sample_description_offset', 'uint', 32);\n  if (this.flags & 0x08) this._procField('default_sample_duration', 'uint', 32);\n  if (this.flags & 0x10) this._procField('default_sample_size', 'uint', 32);\n  if (this.flags & 0x20) this._procField('default_sample_flags', 'uint', 32);\n}; // ISO/IEC 14496-12:2012 - 8.8.10 Track Fragment Random Access Box\n\n\nISOBox.prototype._boxProcessors['tfra'] = function () {\n  this._procFullBox();\n\n  this._procField('track_ID', 'uint', 32);\n\n  if (!this._parsing) {\n    this.reserved = 0;\n    this.reserved |= (this.length_size_of_traf_num & 0x00000030) << 4;\n    this.reserved |= (this.length_size_of_trun_num & 0x0000000C) << 2;\n    this.reserved |= this.length_size_of_sample_num & 0x00000003;\n  }\n\n  this._procField('reserved', 'uint', 32);\n\n  if (this._parsing) {\n    this.length_size_of_traf_num = (this.reserved & 0x00000030) >> 4;\n    this.length_size_of_trun_num = (this.reserved & 0x0000000C) >> 2;\n    this.length_size_of_sample_num = this.reserved & 0x00000003;\n  }\n\n  this._procField('number_of_entry', 'uint', 32);\n\n  this._procEntries('entries', this.number_of_entry, function (entry) {\n    this._procEntryField(entry, 'time', 'uint', this.version === 1 ? 64 : 32);\n\n    this._procEntryField(entry, 'moof_offset', 'uint', this.version === 1 ? 64 : 32);\n\n    this._procEntryField(entry, 'traf_number', 'uint', (this.length_size_of_traf_num + 1) * 8);\n\n    this._procEntryField(entry, 'trun_number', 'uint', (this.length_size_of_trun_num + 1) * 8);\n\n    this._procEntryField(entry, 'sample_number', 'uint', (this.length_size_of_sample_num + 1) * 8);\n  });\n}; // ISO/IEC 14496-12:2012 - 8.3.2 Track Header Box\n\n\nISOBox.prototype._boxProcessors['tkhd'] = function () {\n  this._procFullBox();\n\n  this._procField('creation_time', 'uint', this.version == 1 ? 64 : 32);\n\n  this._procField('modification_time', 'uint', this.version == 1 ? 64 : 32);\n\n  this._procField('track_ID', 'uint', 32);\n\n  this._procField('reserved1', 'uint', 32);\n\n  this._procField('duration', 'uint', this.version == 1 ? 64 : 32);\n\n  this._procFieldArray('reserved2', 2, 'uint', 32);\n\n  this._procField('layer', 'uint', 16);\n\n  this._procField('alternate_group', 'uint', 16);\n\n  this._procField('volume', 'template', 16);\n\n  this._procField('reserved3', 'uint', 16);\n\n  this._procFieldArray('matrix', 9, 'template', 32);\n\n  this._procField('width', 'template', 32);\n\n  this._procField('height', 'template', 32);\n}; // ISO/IEC 14496-12:2012 - 8.8.3 Track Extends Box\n\n\nISOBox.prototype._boxProcessors['trex'] = function () {\n  this._procFullBox();\n\n  this._procField('track_ID', 'uint', 32);\n\n  this._procField('default_sample_description_index', 'uint', 32);\n\n  this._procField('default_sample_duration', 'uint', 32);\n\n  this._procField('default_sample_size', 'uint', 32);\n\n  this._procField('default_sample_flags', 'uint', 32);\n}; // ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box\n// Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.\n// These defaults are not set explicitly here, but are left to resolve for the user.\n\n\nISOBox.prototype._boxProcessors['trun'] = function () {\n  this._procFullBox();\n\n  this._procField('sample_count', 'uint', 32);\n\n  if (this.flags & 0x1) this._procField('data_offset', 'int', 32);\n  if (this.flags & 0x4) this._procField('first_sample_flags', 'uint', 32);\n\n  this._procEntries('samples', this.sample_count, function (sample) {\n    if (this.flags & 0x100) this._procEntryField(sample, 'sample_duration', 'uint', 32);\n    if (this.flags & 0x200) this._procEntryField(sample, 'sample_size', 'uint', 32);\n    if (this.flags & 0x400) this._procEntryField(sample, 'sample_flags', 'uint', 32);\n    if (this.flags & 0x800) this._procEntryField(sample, 'sample_composition_time_offset', this.version === 1 ? 'int' : 'uint', 32);\n  });\n}; // ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\n\n\nISOBox.prototype._boxProcessors['url '] = ISOBox.prototype._boxProcessors['urn '] = function () {\n  this._procFullBox();\n\n  if (this.type === 'urn ') {\n    this._procField('name', 'string', -1);\n  }\n\n  this._procField('location', 'string', -1);\n}; // ISO/IEC 14496-30:2014 - WebVTT Source Label Box\n\n\nISOBox.prototype._boxProcessors['vlab'] = function () {\n  this._procField('source_label', 'utf8');\n}; // ISO/IEC 14496-12:2012 - 8.4.5.2 Video Media Header Box\n\n\nISOBox.prototype._boxProcessors['vmhd'] = function () {\n  this._procFullBox();\n\n  this._procField('graphicsmode', 'uint', 16);\n\n  this._procFieldArray('opcolor', 3, 'uint', 16);\n}; // ISO/IEC 14496-30:2014 - WebVTT Configuration Box\n\n\nISOBox.prototype._boxProcessors['vttC'] = function () {\n  this._procField('config', 'utf8');\n}; // ISO/IEC 14496-30:2014 - WebVTT Empty Sample Box\n\n\nISOBox.prototype._boxProcessors['vtte'] = function () {// Nothing should happen here.\n};","map":{"version":3,"sources":["/Users/webwerks1/Documents/Project/React Js Training/streamvideo/node_modules/codem-isoboxer/dist/iso_boxer.js"],"names":["ISOBoxer","parseBuffer","arrayBuffer","ISOFile","parse","addBoxProcessor","type","parser","ISOBox","prototype","_boxProcessors","createFile","createBox","parent","pos","newBox","create","append","createFullBox","version","flags","Utils","dataViewToString","dataView","encoding","impliedEncoding","TextDecoder","decode","a","i","byteLength","c","getUint8","push","String","fromCharCode","join","utf8ToByteArray","string","u","TextEncoder","encode","length","charCodeAt","appendBox","box","_offset","_cursor","offset","_root","_raw","_parent","undefined","boxes","index","splice","exports","Cursor","initialOffset","DataView","fetch","result","fetchAll","returnEarly","_sweep","call","write","getLength","bytes","Uint8Array","_rawo","buffer","_parseBox","byteOffset","_boxContainers","_procField","name","size","_parsing","_readField","_writeField","_procFieldArray","_procFullBox","_procEntries","fn","_procSubEntries","entry","_procEntryField","_procSubBoxes","_readUint","_readInt","_readTemplate","_readTerminatedString","_readString","_readData","_readUTF8String","getInt8","getInt16","getInt32","s1","s2","Math","pow","getUint16","getUint32","str","char","pre","post","data","_incomplete","largesize","indexOf","_parseContainerBox","_data","_parseFullBox","_writeData","_writeInt","value","setInt8","setInt16","setInt32","floor","setUint32","_writeUint","setUint8","setUint16","_writeString","_writeTerminatedString","_writeTemplate","Array","set","_writeUTF8String","entry_count","nbCompatibleBrands","language","DataSize","sample_count","reference_count","reference","reference_type","referenced_size","sap","starts_with_SAP","SAP_type","SAP_delta_time","subsegment_count","subsegment","ranges_count","range","subsample_count","subsample","reserved","length_size_of_traf_num","length_size_of_trun_num","length_size_of_sample_num","number_of_entry","sample"],"mappings":"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","sourcesContent":["/*! codem-isoboxer v0.3.6 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */\nvar ISOBoxer = {};\n\nISOBoxer.parseBuffer = function(arrayBuffer) {\n  return new ISOFile(arrayBuffer).parse();\n};\n\nISOBoxer.addBoxProcessor = function(type, parser) {\n  if (typeof type !== 'string' || typeof parser !== 'function') {\n    return;\n  }\n  ISOBox.prototype._boxProcessors[type] = parser;\n};\n\nISOBoxer.createFile = function() {\n  return new ISOFile();\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createBox = function(type, parent, pos) {\n  var newBox = ISOBox.create(type);\n  if (parent) {\n    parent.append(newBox, pos);\n  }\n  return newBox;\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createFullBox = function(type, parent, pos) {\n  var newBox = ISOBoxer.createBox(type, parent, pos);\n  newBox.version = 0;\n  newBox.flags = 0;\n  return newBox;\n};\n\nISOBoxer.Utils = {};\nISOBoxer.Utils.dataViewToString = function(dataView, encoding) {\n  var impliedEncoding = encoding || 'utf-8';\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder(impliedEncoding).decode(dataView);\n  }\n  var a = [];\n  var i = 0;\n\n  if (impliedEncoding === 'utf-8') {\n    /* The following algorithm is essentially a rewrite of the UTF8.decode at\n    http://bannister.us/weblog/2007/simple-base64-encodedecode-javascript/\n    */\n\n    while (i < dataView.byteLength) {\n      var c = dataView.getUint8(i++);\n      if (c < 0x80) {\n        // 1-byte character (7 bits)\n      } else if (c < 0xe0) {\n        // 2-byte character (11 bits)\n        c = (c & 0x1f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else if (c < 0xf0) {\n        // 3-byte character (16 bits)\n        c = (c & 0xf) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else {\n        // 4-byte character (21 bits)\n        c = (c & 0x7) << 18;\n        c |= (dataView.getUint8(i++) & 0x3f) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      }\n      a.push(String.fromCharCode(c));\n    }\n  } else { // Just map byte-by-byte (probably wrong)\n    while (i < dataView.byteLength) {\n      a.push(String.fromCharCode(dataView.getUint8(i++)));\n    }\n  }\n  return a.join('');\n};\n\nISOBoxer.Utils.utf8ToByteArray = function(string) {\n  // Only UTF-8 encoding is supported by TextEncoder\n  var u, i;\n  if (typeof TextEncoder !== 'undefined') {\n    u = new TextEncoder().encode(string);\n  } else {\n    u = [];\n    for (i = 0; i < string.length; ++i) {\n      var c = string.charCodeAt(i);\n      if (c < 0x80) {\n        u.push(c);\n      } else if (c < 0x800) {\n        u.push(0xC0 | (c >> 6));\n        u.push(0x80 | (63 & c));\n      } else if (c < 0x10000) {\n        u.push(0xE0 | (c >> 12));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      } else {\n        u.push(0xF0 | (c >> 18));\n        u.push(0x80 | (63 & (c >> 12)));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      }\n    }\n  }\n  return u;\n};\n\n// Method to append a box in the list of child boxes\n// The 'pos' parameter can be either:\n//   - (number) a position index at which to insert the new box\n//   - (string) the type of the box after which to insert the new box\n//   - (object) the box after which to insert the new box\nISOBoxer.Utils.appendBox = function(parent, box, pos) {\n  box._offset = parent._cursor.offset;\n  box._root = (parent._root ? parent._root : parent);\n  box._raw = parent._raw;\n  box._parent = parent;\n\n  if (pos === -1) {\n    // The new box is a sub-box of the parent but not added in boxes array,\n    // for example when the new box is set as an entry (see dref and stsd for example)\n    return;\n  }\n\n  if (pos === undefined || pos === null) {\n    parent.boxes.push(box);\n    return;\n  }\n\n  var index = -1,\n      type;\n\n  if (typeof pos === \"number\") {\n    index = pos;\n  } else {\n    if (typeof pos === \"string\") {\n      type = pos;\n    } else if (typeof pos === \"object\" && pos.type) {\n      type = pos.type;\n    } else {\n      parent.boxes.push(box);\n      return;\n    }\n\n    for (var i = 0; i < parent.boxes.length; i++) {\n      if (type === parent.boxes[i].type) {\n        index = i + 1;\n        break;\n      }\n    }\n  }\n  parent.boxes.splice(index, 0, box);\n};\n\nif (typeof exports !== 'undefined') {\n  exports.parseBuffer     = ISOBoxer.parseBuffer;\n  exports.addBoxProcessor = ISOBoxer.addBoxProcessor;\n  exports.createFile      = ISOBoxer.createFile;\n  exports.createBox       = ISOBoxer.createBox;\n  exports.createFullBox   = ISOBoxer.createFullBox;\n  exports.Utils           = ISOBoxer.Utils;\n}\n\nISOBoxer.Cursor = function(initialOffset) {\n  this.offset = (typeof initialOffset == 'undefined' ? 0 : initialOffset);\n};\n\nvar ISOFile = function(arrayBuffer) {\n  this._cursor = new ISOBoxer.Cursor();\n  this.boxes = [];\n  if (arrayBuffer) {\n    this._raw = new DataView(arrayBuffer);\n  }\n};\n\nISOFile.prototype.fetch = function(type) {\n  var result = this.fetchAll(type, true);\n  return (result.length ? result[0] : null);\n};\n\nISOFile.prototype.fetchAll = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n};\n\nISOFile.prototype.parse = function() {\n  this._cursor.offset = 0;\n  this.boxes = [];\n  while (this._cursor.offset < this._raw.byteLength) {\n    var box = ISOBox.parse(this);\n\n    // Box could not be parsed\n    if (typeof box.type === 'undefined') break;\n\n    this.boxes.push(box);\n  }\n  return this;\n};\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n};\n\nISOFile.prototype.write = function() {\n\n  var length = 0,\n      i;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    length += this.boxes[i].getLength(false);\n  }\n\n  var bytes = new Uint8Array(length);\n  this._rawo = new DataView(bytes.buffer);\n  this.bytes = bytes;\n  this._cursor.offset = 0;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    this.boxes[i].write();\n  }\n\n  return bytes.buffer;\n};\n\nISOFile.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\nvar ISOBox = function() {\n  this._cursor = new ISOBoxer.Cursor();\n};\n\nISOBox.parse = function(parent) {\n  var newBox = new ISOBox();\n  newBox._offset = parent._cursor.offset;\n  newBox._root = (parent._root ? parent._root : parent);\n  newBox._raw = parent._raw;\n  newBox._parent = parent;\n  newBox._parseBox();\n  parent._cursor.offset = newBox._raw.byteOffset + newBox._raw.byteLength;\n  return newBox;\n};\n\nISOBox.create = function(type) {\n  var newBox = new ISOBox();\n  newBox.type = type;\n  newBox.boxes = [];\n  return newBox;\n};\n\nISOBox.prototype._boxContainers = ['dinf', 'edts', 'mdia', 'meco', 'mfra', 'minf', 'moof', 'moov', 'mvex', 'stbl', 'strk', 'traf', 'trak', 'tref', 'udta', 'vttc', 'sinf', 'schi', 'encv', 'enca'];\n\nISOBox.prototype._boxProcessors = {};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Generic read/write functions\n\nISOBox.prototype._procField = function (name, type, size) {\n  if (this._parsing) {\n    this[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, this[name]);\n  }\n};\n\nISOBox.prototype._procFieldArray = function (name, length, type, size) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name][i] = this._readField(type, size);\n    }\n  }\n  else {\n    for (i = 0; i < this[name].length; i++) {\n      this._writeField(type, size, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procFullBox = function() {\n  this._procField('version', 'uint', 8);\n  this._procField('flags', 'uint', 24);\n};\n\nISOBox.prototype._procEntries = function(name, length, fn) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push({});\n      fn.call(this, this[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procSubEntries = function(entry, name, length, fn) {\n  var i;\n  if (this._parsing) {\n    entry[name] = [];\n    for (i = 0; i < length; i++) {\n      entry[name].push({});\n      fn.call(this, entry[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, entry[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procEntryField = function (entry, name, type, size) {\n  if (this._parsing) {\n    entry[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, entry[name]);\n  }\n};\n\nISOBox.prototype._procSubBoxes = function(name, length) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push(ISOBox.parse(this));\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      if (this._rawo) {\n        this[name][i].write();\n      } else {\n        this.size += this[name][i].getLength();\n      }\n    }\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Read/parse functions\n\nISOBox.prototype._readField = function(type, size) {\n  switch (type) {\n    case 'uint':\n      return this._readUint(size);\n    case 'int':\n      return this._readInt(size);\n    case 'template':\n      return this._readTemplate(size);\n    case 'string':\n      return (size === -1) ? this._readTerminatedString() : this._readString(size);\n    case 'data':\n      return this._readData(size);\n    case 'utf8':\n      return this._readUTF8String();\n    default:\n      return -1;\n  }\n};\n\nISOBox.prototype._readInt = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset;\n  switch(size) {\n  case 8:\n    result = this._raw.getInt8(offset);\n    break;\n  case 16:\n    result = this._raw.getInt16(offset);\n    break;\n  case 32:\n    result = this._raw.getInt32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    var s1 = this._raw.getInt32(offset);\n    var s2 = this._raw.getInt32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readUint = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset,\n      s1, s2;\n  switch(size) {\n  case 8:\n    result = this._raw.getUint8(offset);\n    break;\n  case 16:\n    result = this._raw.getUint16(offset);\n    break;\n  case 24:\n    s1 = this._raw.getUint16(offset);\n    s2 = this._raw.getUint8(offset + 2);\n    result = (s1 << 8) + s2;\n    break;\n  case 32:\n    result = this._raw.getUint32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    s1 = this._raw.getUint32(offset);\n    s2 = this._raw.getUint32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readString = function(length) {\n  var str = '';\n  for (var c = 0; c < length; c++) {\n    var char = this._readUint(8);\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readTemplate = function(size) {\n  var pre = this._readUint(size / 2);\n  var post = this._readUint(size / 2);\n  return pre + (post / Math.pow(2, size / 2));\n};\n\nISOBox.prototype._readTerminatedString = function() {\n  var str = '';\n  while (this._cursor.offset - this._offset < this._raw.byteLength) {\n    var char = this._readUint(8);\n    if (char === 0) break;\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readData = function(size) {\n  var length = (size > 0) ? size : (this._raw.byteLength - (this._cursor.offset - this._offset));\n  if (length > 0) {\n    var data = new Uint8Array(this._raw.buffer, this._cursor.offset, length);\n\n    this._cursor.offset += length;\n    return data;\n  }\n  else {\n    return null;\n  }\n};\n\nISOBox.prototype._readUTF8String = function() {\n  var length = this._raw.byteLength - (this._cursor.offset - this._offset);\n  var data = null;\n  if (length > 0) {\n    data = new DataView(this._raw.buffer, this._cursor.offset, length);\n    this._cursor.offset += length;\n  }\n \n  return data ? ISOBoxer.Utils.dataViewToString(data) : data;\n};\n\nISOBox.prototype._parseBox = function() {\n  this._parsing = true;\n  this._cursor.offset = this._offset;\n\n  // return immediately if there are not enough bytes to read the header\n  if (this._offset + 8 > this._raw.buffer.byteLength) {\n    this._root._incomplete = true;\n    return;\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  switch(this.size) {\n  case 0:\n    this._raw = new DataView(this._raw.buffer, this._offset, (this._raw.byteLength - this._cursor.offset + 8));\n    break;\n  case 1:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);\n    }\n    break;\n  default:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.size);\n    }\n  }\n\n  // additional parsing\n  if (!this._incomplete) {\n    if (this._boxProcessors[this.type]) {\n      this._boxProcessors[this.type].call(this);\n    }\n    if (this._boxContainers.indexOf(this.type) !== -1) {\n      this._parseContainerBox();\n    } else{\n      // Unknown box => read and store box content\n      this._data = this._readData();\n    }\n  }\n};\n\nISOBox.prototype._parseFullBox = function() {\n  this.version = this._readUint(8);\n  this.flags = this._readUint(24);\n};\n\nISOBox.prototype._parseContainerBox = function() {\n  this.boxes = [];\n  while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n    this.boxes.push(ISOBox.parse(this));\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Write functions\n\nISOBox.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\n\nISOBox.prototype.getLength = function() {\n  this._parsing = false;\n  this._rawo = null;\n\n  this.size = 0;\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.size += this.boxes[i].getLength();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  return this.size;\n};\n\nISOBox.prototype.write = function() {\n  this._parsing = false;\n  this._cursor.offset = this._parent._cursor.offset;\n\n  switch(this.size) {\n  case 0:\n    this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, (this.parent._rawo.byteLength - this._cursor.offset));\n    break;\n  case 1:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize);\n    break;\n  default:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size);\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.boxes[i].write();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  this._parent._cursor.offset += this.size;\n\n  return this.size;\n};\n\nISOBox.prototype._writeInt = function(size, value) {\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset;\n    switch(size) {\n    case 8:\n      this._rawo.setInt8(offset, value);\n      break;\n    case 16:\n      this._rawo.setInt16(offset, value);\n      break;\n    case 32:\n      this._rawo.setInt32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      var s1 = Math.floor(value / Math.pow(2,32));\n      var s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeUint = function(size, value) {\n\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset,\n        s1, s2;\n    switch(size) {\n    case 8:\n      this._rawo.setUint8(offset, value);\n      break;\n    case 16:\n      this._rawo.setUint16(offset, value);\n      break;\n    case 24:\n      s1 = (value & 0xFFFF00) >> 8;\n      s2 = (value & 0x0000FF);\n      this._rawo.setUint16(offset, s1);\n      this._rawo.setUint8(offset + 2, s2);\n      break;\n    case 32:\n      this._rawo.setUint32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      s1 = Math.floor(value / Math.pow(2,32));\n      s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeString = function(size, str) {\n  for (var c = 0; c < size; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n};\n\nISOBox.prototype._writeTerminatedString = function(str) {\n  if (str.length === 0) {\n    return;\n  }\n  for (var c = 0; c < str.length; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n  this._writeUint(8, 0);\n};\n\nISOBox.prototype._writeTemplate = function(size, value) {\n  var pre = Math.floor(value);\n  var post = (value - pre) * Math.pow(2, size / 2);\n  this._writeUint(size / 2, pre);\n  this._writeUint(size / 2, post);\n};\n\nISOBox.prototype._writeData = function(data) {\n  var i;\n  //data to copy\n  if (data) {\n    if (this._rawo) {\n      //Array and Uint8Array has also to be managed\n      if (data instanceof Array) {\n        var offset = this._cursor.offset - this._rawo.byteOffset;\n        for (var i = 0; i < data.length; i++) {\n          this._rawo.setInt8(offset + i, data[i]);\n        }\n        this._cursor.offset += data.length;\n      } \n\n      if (data instanceof Uint8Array) {\n        this._root.bytes.set(data, this._cursor.offset);\n        this._cursor.offset += data.length;\n      }\n\n    } else {\n      //nothing to copy only size to compute\n      this.size += data.length;\n    }\n  }\n};\n\nISOBox.prototype._writeUTF8String = function(string) {\n  var u = ISOBoxer.Utils.utf8ToByteArray(string);\n  if (this._rawo) {\n    var dataView = new DataView(this._rawo.buffer, this._cursor.offset, u.length);\n    for (var i = 0; i < u.length; i++) {\n      dataView.setUint8(i, u[i]);\n    }\n  } else {\n    this.size += u.length;\n  }\n};\n\nISOBox.prototype._writeField = function(type, size, value) {\n  switch (type) {\n  case 'uint':\n    this._writeUint(size, value);\n    break;\n  case 'int':\n    this._writeInt(size, value);\n    break;\n  case 'template':\n    this._writeTemplate(size, value);\n    break;\n  case 'string':\n      if (size == -1) {\n        this._writeTerminatedString(value);\n      } else {\n        this._writeString(size, value);\n      }\n      break;\n  case 'data':\n    this._writeData(value);\n    break;\n  case 'utf8':\n    this._writeUTF8String(value);\n    break;\n  default:\n    break;\n  }\n};\n\n// ISO/IEC 14496-15:2014 - avc1 box\nISOBox.prototype._boxProcessors['avc1'] = ISOBox.prototype._boxProcessors['encv'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // VisualSampleEntry fields\n  this._procField('pre_defined1',         'uint',     16);\n  this._procField('reserved2',            'uint',     16);\n  this._procFieldArray('pre_defined2', 3, 'uint',     32);\n  this._procField('width',                'uint',     16);\n  this._procField('height',               'uint',     16);\n  this._procField('horizresolution',      'template', 32);\n  this._procField('vertresolution',       'template', 32);\n  this._procField('reserved3',            'uint',     32);\n  this._procField('frame_count',          'uint',     16);\n  this._procFieldArray('compressorname', 32,'uint',    8);\n  this._procField('depth',                'uint',     16);\n  this._procField('pre_defined3',         'int',      16);\n  // AVCSampleEntry fields\n  this._procField('config', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['dref'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.6 Edit List Box\nISOBox.prototype._boxProcessors['elst'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'segment_duration',     'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_time',           'int',  (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_rate_integer',   'int',  16);\n    this._procEntryField(entry, 'media_rate_fraction',  'int',  16);\n  });\n};\n\n// ISO/IEC 23009-1:2014 - 5.10.3.3 Event Message Box\nISOBox.prototype._boxProcessors['emsg'] = function() {\n  this._procFullBox();\n  if (this.version == 1) {\n    this._procField('timescale',                'uint',   32);\n    this._procField('presentation_time',        'uint',   64);\n    this._procField('event_duration',           'uint',   32);\n    this._procField('id',                       'uint',   32);\n    this._procField('scheme_id_uri',            'string', -1);\n    this._procField('value',                    'string', -1);\n  } else {\n    this._procField('scheme_id_uri',            'string', -1);\n    this._procField('value',                    'string', -1);\n    this._procField('timescale',                'uint',   32);\n    this._procField('presentation_time_delta',  'uint',   32);\n    this._procField('event_duration',           'uint',   32);\n    this._procField('id',                       'uint',   32);\n  }\n  this._procField('message_data',             'data',   -1);\n};\n// ISO/IEC 14496-12:2012 - 8.1.2 Free Space Box\nISOBox.prototype._boxProcessors['free'] = ISOBox.prototype._boxProcessors['skip'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.12.2 Original Format Box\nISOBox.prototype._boxProcessors['frma'] = function() {\n  this._procField('data_format', 'uint', 32);\n};\n// ISO/IEC 14496-12:2012 - 4.3 File Type Box / 8.16.2 Segment Type Box\nISOBox.prototype._boxProcessors['ftyp'] =\nISOBox.prototype._boxProcessors['styp'] = function() {\n  this._procField('major_brand', 'string', 4);\n  this._procField('minor_version', 'uint', 32);\n  var nbCompatibleBrands = -1;\n  if (this._parsing) {\n    nbCompatibleBrands = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4;\n  }\n  this._procFieldArray('compatible_brands', nbCompatibleBrands, 'string', 4);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.3 Handler Reference Box\nISOBox.prototype._boxProcessors['hdlr'] = function() {\n  this._procFullBox();\n  this._procField('pre_defined',      'uint',   32);\n  this._procField('handler_type',     'string', 4);\n  this._procFieldArray('reserved', 3, 'uint', 32);\n  this._procField('name',             'string', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.1.1 Media Data Box\nISOBox.prototype._boxProcessors['mdat'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.2 Media Header Box\nISOBox.prototype._boxProcessors['mdhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint', (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint', (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint', 32);\n  this._procField('duration',           'uint', (this.version == 1) ? 64 : 32);\n  if (!this._parsing && typeof this.language === 'string') {\n    // In case of writing and language has been set as a string, then convert it into char codes array\n    this.language = ((this.language.charCodeAt(0) - 0x60) << 10) |\n                    ((this.language.charCodeAt(1) - 0x60) << 5) |\n                    ((this.language.charCodeAt(2) - 0x60));\n  }\n  this._procField('language',           'uint', 16);\n  if (this._parsing) {\n    this.language = String.fromCharCode(((this.language >> 10) & 0x1F) + 0x60,\n                                        ((this.language >> 5) & 0x1F) + 0x60,\n                                        (this.language & 0x1F) + 0x60);\n  }\n  this._procField('pre_defined',        'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.2 Movie Extends Header Box\nISOBox.prototype._boxProcessors['mehd'] = function() {\n  this._procFullBox();\n  this._procField('fragment_duration', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.5 Movie Fragment Header Box\nISOBox.prototype._boxProcessors['mfhd'] = function() {\n  this._procFullBox();\n  this._procField('sequence_number', 'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.11 Movie Fragment Random Access Box\nISOBox.prototype._boxProcessors['mfro'] = function() {\n  this._procFullBox();\n  this._procField('mfra_size', 'uint', 32); // Called mfra_size to distinguish from the normal \"size\" attribute of a box\n};\n\n\n// ISO/IEC 14496-12:2012 - 8.5.2.2 mp4a box (use AudioSampleEntry definition and naming)\nISOBox.prototype._boxProcessors['mp4a'] = ISOBox.prototype._boxProcessors['enca'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // AudioSampleEntry fields\n  this._procFieldArray('reserved2', 2,    'uint', 32);\n  this._procField('channelcount',         'uint', 16);\n  this._procField('samplesize',           'uint', 16);\n  this._procField('pre_defined',          'uint', 16);\n  this._procField('reserved3',            'uint', 16);\n  this._procField('samplerate',           'template', 32);\n  // ESDescriptor fields\n  this._procField('esds',                 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.2.2 Movie Header Box\nISOBox.prototype._boxProcessors['mvhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('rate',               'template', 32);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved1',          'uint',  16);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procFieldArray('pre_defined', 6,'uint',   32);\n  this._procField('next_track_ID',      'uint',     32);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Cue Payload Box.\nISOBox.prototype._boxProcessors['payl'] = function() {\n  this._procField('cue_text', 'utf8');\n};\n\n//ISO/IEC 23001-7:2011 - 8.1 Protection System Specific Header Box\nISOBox.prototype._boxProcessors['pssh'] = function() {\n  this._procFullBox();\n  \n  this._procFieldArray('SystemID', 16, 'uint', 8);\n  this._procField('DataSize', 'uint', 32);\n  this._procFieldArray('Data', this.DataSize, 'uint', 8);\n};\n// ISO/IEC 14496-12:2012 - 8.12.5 Scheme Type Box\nISOBox.prototype._boxProcessors['schm'] = function() {\n    this._procFullBox();\n    \n    this._procField('scheme_type', 'uint', 32);\n    this._procField('scheme_version', 'uint', 32);\n\n    if (this.flags & 0x000001) {\n        this._procField('scheme_uri', 'string', -1);\n    }\n};\n// ISO/IEC 14496-12:2012 - 8.6.4.1 sdtp box \nISOBox.prototype._boxProcessors['sdtp'] = function() {\n  this._procFullBox();\n\n  var sample_count = -1;\n  if (this._parsing) {\n    sample_count = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset));\n  }\n\n  this._procFieldArray('sample_dependency_table', sample_count, 'uint', 8);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.3 Segment Index Box\nISOBox.prototype._boxProcessors['sidx'] = function() {\n  this._procFullBox();\n  this._procField('reference_ID', 'uint', 32);\n  this._procField('timescale', 'uint', 32);\n  this._procField('earliest_presentation_time', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('first_offset', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('reserved', 'uint', 16);\n  this._procField('reference_count', 'uint', 16);\n  this._procEntries('references', this.reference_count, function(entry) {\n    if (!this._parsing) {\n      entry.reference  = (entry.reference_type  & 0x00000001) << 31;\n      entry.reference |= (entry.referenced_size & 0x7FFFFFFF);\n      entry.sap  = (entry.starts_with_SAP & 0x00000001) << 31;\n      entry.sap |= (entry.SAP_type        & 0x00000003) << 28;\n      entry.sap |= (entry.SAP_delta_time  & 0x0FFFFFFF);\n    }\n    this._procEntryField(entry, 'reference', 'uint', 32);\n    this._procEntryField(entry, 'subsegment_duration', 'uint', 32);\n    this._procEntryField(entry, 'sap', 'uint', 32);\n    if (this._parsing) {\n      entry.reference_type = (entry.reference >> 31) & 0x00000001;\n      entry.referenced_size = entry.reference & 0x7FFFFFFF;\n      entry.starts_with_SAP  = (entry.sap >> 31) & 0x00000001;\n      entry.SAP_type = (entry.sap >> 28) & 0x00000007;\n      entry.SAP_delta_time = (entry.sap  & 0x0FFFFFFF);\n    }\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.3 Sound Media Header Box\nISOBox.prototype._boxProcessors['smhd'] = function() {\n  this._procFullBox();\n  this._procField('balance',  'uint', 16);\n  this._procField('reserved', 'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.4 Subsegment Index Box\nISOBox.prototype._boxProcessors['ssix'] = function() {\n  this._procFullBox();\n  this._procField('subsegment_count', 'uint', 32);\n  this._procEntries('subsegments', this.subsegment_count, function(subsegment) {\n    this._procEntryField(subsegment, 'ranges_count', 'uint', 32);\n    this._procSubEntries(subsegment, 'ranges', subsegment.ranges_count, function(range) {\n      this._procEntryField(range, 'level', 'uint', 8);\n      this._procEntryField(range, 'range_size', 'uint', 24);\n    });\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.5.2 Sample Description Box\nISOBox.prototype._boxProcessors['stsd'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-12:2015 - 8.7.7 Sub-Sample Information Box\nISOBox.prototype._boxProcessors['subs'] = function () {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_delta', 'uint', 32);\n    this._procEntryField(entry, 'subsample_count', 'uint', 16);\n    this._procSubEntries(entry, 'subsamples', entry.subsample_count, function(subsample) {\n      this._procEntryField(subsample, 'subsample_size', 'uint', (this.version === 1) ? 32 : 16);\n      this._procEntryField(subsample, 'subsample_priority', 'uint', 8);\n      this._procEntryField(subsample, 'discardable', 'uint', 8);\n      this._procEntryField(subsample, 'codec_specific_parameters', 'uint', 32);\n    });\n  });\n};\n\n//ISO/IEC 23001-7:2011 - 8.2 Track Encryption Box\nISOBox.prototype._boxProcessors['tenc'] = function() {\n    this._procFullBox();\n\n    this._procField('default_IsEncrypted', 'uint', 24);\n    this._procField('default_IV_size', 'uint', 8);\n    this._procFieldArray('default_KID', 16,    'uint', 8);\n };\n\n// ISO/IEC 14496-12:2012 - 8.8.12 Track Fragmnent Decode Time\nISOBox.prototype._boxProcessors['tfdt'] = function() {\n  this._procFullBox();\n  this._procField('baseMediaDecodeTime', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.7 Track Fragment Header Box\nISOBox.prototype._boxProcessors['tfhd'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (this.flags & 0x01) this._procField('base_data_offset',          'uint', 64);\n  if (this.flags & 0x02) this._procField('sample_description_offset', 'uint', 32);\n  if (this.flags & 0x08) this._procField('default_sample_duration',   'uint', 32);\n  if (this.flags & 0x10) this._procField('default_sample_size',       'uint', 32);\n  if (this.flags & 0x20) this._procField('default_sample_flags',      'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.10 Track Fragment Random Access Box\nISOBox.prototype._boxProcessors['tfra'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (!this._parsing) {\n    this.reserved = 0;\n    this.reserved |= (this.length_size_of_traf_num  & 0x00000030) << 4;\n    this.reserved |= (this.length_size_of_trun_num  & 0x0000000C) << 2;\n    this.reserved |= (this.length_size_of_sample_num  & 0x00000003);\n  }\n  this._procField('reserved', 'uint', 32);\n  if (this._parsing) {\n    this.length_size_of_traf_num = (this.reserved & 0x00000030) >> 4;\n    this.length_size_of_trun_num = (this.reserved & 0x0000000C) >> 2;\n    this.length_size_of_sample_num = (this.reserved & 0x00000003);\n  }\n  this._procField('number_of_entry', 'uint', 32);\n  this._procEntries('entries', this.number_of_entry, function(entry) {\n    this._procEntryField(entry, 'time', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'moof_offset', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'traf_number', 'uint', (this.length_size_of_traf_num + 1) * 8);\n    this._procEntryField(entry, 'trun_number', 'uint', (this.length_size_of_trun_num + 1) * 8);\n    this._procEntryField(entry, 'sample_number', 'uint', (this.length_size_of_sample_num + 1) * 8);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.3.2 Track Header Box\nISOBox.prototype._boxProcessors['tkhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('track_ID',           'uint',     32);\n  this._procField('reserved1',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procField('layer',              'uint',     16);\n  this._procField('alternate_group',    'uint',     16);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved3',          'uint',     16);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procField('width',              'template', 32);\n  this._procField('height',             'template', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.3 Track Extends Box\nISOBox.prototype._boxProcessors['trex'] = function() {\n  this._procFullBox();\n  this._procField('track_ID',                         'uint', 32);\n  this._procField('default_sample_description_index', 'uint', 32);\n  this._procField('default_sample_duration',          'uint', 32);\n  this._procField('default_sample_size',              'uint', 32);\n  this._procField('default_sample_flags',             'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box\n// Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.\n// These defaults are not set explicitly here, but are left to resolve for the user.\nISOBox.prototype._boxProcessors['trun'] = function() {\n  this._procFullBox();\n  this._procField('sample_count', 'uint', 32);\n  if (this.flags & 0x1) this._procField('data_offset', 'int', 32);\n  if (this.flags & 0x4) this._procField('first_sample_flags', 'uint', 32);\n  this._procEntries('samples', this.sample_count, function(sample) {\n    if (this.flags & 0x100) this._procEntryField(sample, 'sample_duration', 'uint', 32);\n    if (this.flags & 0x200) this._procEntryField(sample, 'sample_size', 'uint', 32);\n    if (this.flags & 0x400) this._procEntryField(sample, 'sample_flags', 'uint', 32);\n    if (this.flags & 0x800) this._procEntryField(sample, 'sample_composition_time_offset', (this.version === 1) ? 'int' : 'uint',  32);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['url '] = ISOBox.prototype._boxProcessors['urn '] = function() {\n  this._procFullBox();\n  if (this.type === 'urn ') {\n    this._procField('name', 'string', -1);\n  }\n  this._procField('location', 'string', -1);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Source Label Box\nISOBox.prototype._boxProcessors['vlab'] = function() {\n  this._procField('source_label', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.2 Video Media Header Box\nISOBox.prototype._boxProcessors['vmhd'] = function() {\n  this._procFullBox();\n  this._procField('graphicsmode', 'uint', 16);\n  this._procFieldArray('opcolor', 3, 'uint', 16);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Configuration Box\nISOBox.prototype._boxProcessors['vttC'] = function() {\n  this._procField('config', 'utf8');\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Empty Sample Box\nISOBox.prototype._boxProcessors['vtte'] = function() {\n  // Nothing should happen here.\n};\n"]},"metadata":{},"sourceType":"script"}