{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction RulesContext(config) {\n  config = config || {};\n  var instance = void 0;\n  var abrController = config.abrController;\n  var switchHistory = config.switchHistory;\n  var droppedFramesHistory = config.droppedFramesHistory;\n  var currentRequest = config.currentRequest;\n  var bufferOccupancyABR = config.useBufferOccupancyABR;\n  var l2AABR = config.useL2AABR;\n  var loLP = config.useLoLPABR;\n  var scheduleController = config.streamProcessor ? config.streamProcessor.getScheduleController() : null;\n  var representationInfo = config.streamProcessor ? config.streamProcessor.getRepresentationInfo() : null;\n  var videoModel = config.videoModel ? config.videoModel : null;\n\n  function getMediaType() {\n    var mediaInfo = getMediaInfo();\n    return mediaInfo ? mediaInfo.type : null;\n  }\n\n  function getStreamInfo() {\n    var mediaInfo = getMediaInfo();\n    return mediaInfo ? mediaInfo.streamInfo : null;\n  }\n\n  function getMediaInfo() {\n    return representationInfo ? representationInfo.mediaInfo : null;\n  }\n\n  function getRepresentationInfo() {\n    return representationInfo;\n  }\n\n  function getScheduleController() {\n    return scheduleController;\n  }\n\n  function getAbrController() {\n    return abrController;\n  }\n\n  function getSwitchHistory() {\n    return switchHistory;\n  }\n\n  function getVideoModel() {\n    return videoModel;\n  }\n\n  function getDroppedFramesHistory() {\n    return droppedFramesHistory;\n  }\n\n  function getCurrentRequest() {\n    return currentRequest;\n  }\n\n  function useBufferOccupancyABR() {\n    return bufferOccupancyABR;\n  }\n\n  function useL2AABR() {\n    return l2AABR;\n  }\n\n  function useLoLPABR() {\n    return loLP;\n  }\n\n  instance = {\n    getMediaType: getMediaType,\n    getMediaInfo: getMediaInfo,\n    getDroppedFramesHistory: getDroppedFramesHistory,\n    getCurrentRequest: getCurrentRequest,\n    getSwitchHistory: getSwitchHistory,\n    getStreamInfo: getStreamInfo,\n    getScheduleController: getScheduleController,\n    getAbrController: getAbrController,\n    getRepresentationInfo: getRepresentationInfo,\n    useBufferOccupancyABR: useBufferOccupancyABR,\n    useL2AABR: useL2AABR,\n    useLoLPABR: useLoLPABR,\n    getVideoModel: getVideoModel\n  };\n  return instance;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nRulesContext.__dashjs_factory_name = 'RulesContext';\nexports.default = _FactoryMaker2.default.getClassFactory(RulesContext);","map":{"version":3,"sources":["../../../../../src/streaming/rules/RulesContext.js"],"names":["config","instance","abrController","switchHistory","droppedFramesHistory","currentRequest","bufferOccupancyABR","l2AABR","loLP","scheduleController","representationInfo","videoModel","mediaInfo","getMediaInfo","getMediaType","getDroppedFramesHistory","getCurrentRequest","getSwitchHistory","getStreamInfo","getScheduleController","getAbrController","getRepresentationInfo","useBufferOccupancyABR","useL2AABR","useLoLPABR","getVideoModel","RulesContext","FactoryMaker"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction RulesContext(config) {\n\n    config = config || {};\n    let instance;\n    const abrController = config.abrController;\n    const switchHistory = config.switchHistory;\n    const droppedFramesHistory = config.droppedFramesHistory;\n    const currentRequest = config.currentRequest;\n    const bufferOccupancyABR = config.useBufferOccupancyABR;\n    const l2AABR = config.useL2AABR;\n    const loLP = config.useLoLPABR;\n    const scheduleController = config.streamProcessor ? config.streamProcessor.getScheduleController() : null;\n    const representationInfo = config.streamProcessor ? config.streamProcessor.getRepresentationInfo() : null;\n    const videoModel = config.videoModel ? config.videoModel : null;\n\n    function getMediaType() {\n        const mediaInfo = getMediaInfo();\n        return mediaInfo ? mediaInfo.type : null;\n    }\n\n    function getStreamInfo() {\n        const mediaInfo = getMediaInfo();\n        return mediaInfo ? mediaInfo.streamInfo : null;\n    }\n\n    function getMediaInfo() {\n        return representationInfo ? representationInfo.mediaInfo : null;\n    }\n\n    function getRepresentationInfo() {\n        return representationInfo;\n    }\n\n    function getScheduleController() {\n        return scheduleController;\n    }\n\n    function getAbrController() {\n        return abrController;\n    }\n\n    function getSwitchHistory() {\n        return switchHistory;\n    }\n\n    function getVideoModel() {\n        return videoModel;\n    }\n\n    function getDroppedFramesHistory() {\n        return droppedFramesHistory;\n    }\n\n    function getCurrentRequest() {\n        return currentRequest;\n    }\n\n    function useBufferOccupancyABR() {\n        return bufferOccupancyABR;\n    }\n    function useL2AABR() {\n        return l2AABR;\n    }\n\n    function useLoLPABR() {\n        return loLP;\n    }\n\n    instance = {\n        getMediaType,\n        getMediaInfo,\n        getDroppedFramesHistory,\n        getCurrentRequest,\n        getSwitchHistory,\n        getStreamInfo,\n        getScheduleController,\n        getAbrController,\n        getRepresentationInfo,\n        useBufferOccupancyABR,\n        useL2AABR,\n        useLoLPABR,\n        getVideoModel\n    };\n\n    return instance;\n}\n\nRulesContext.__dashjs_factory_name = 'RulesContext';\nexport default FactoryMaker.getClassFactory(RulesContext);\n"]},"metadata":{},"sourceType":"script"}