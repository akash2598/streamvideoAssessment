{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _Constants = require('../constants/Constants');\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* @param {Object} config\n* @returns {{initialize: initialize, getLiveEdge: getLiveEdge, reset: reset}|*}\n* @constructor\n* @ignore\n*/\n\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nfunction LiveEdgeFinder(config) {\n  config = config || {};\n  var instance = void 0;\n  var timelineConverter = config.timelineConverter;\n\n  function checkConfig() {\n    if (!timelineConverter || !timelineConverter.hasOwnProperty('getExpectedLiveEdge')) {\n      throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);\n    }\n  }\n\n  function getLiveEdge(representationInfo) {\n    checkConfig();\n    return representationInfo.DVRWindow ? representationInfo.DVRWindow.end : 0;\n  }\n\n  function reset() {\n    timelineConverter = null;\n  }\n\n  instance = {\n    getLiveEdge: getLiveEdge,\n    reset: reset\n  };\n  return instance;\n}\n\nLiveEdgeFinder.__dashjs_factory_name = 'LiveEdgeFinder';\nexports.default = _FactoryMaker2.default.getClassFactory(LiveEdgeFinder);","map":{"version":3,"sources":["../../../../../src/streaming/utils/LiveEdgeFinder.js"],"names":["config","instance","timelineConverter","Constants","checkConfig","representationInfo","getLiveEdge","reset","LiveEdgeFinder","FactoryMaker"],"mappings":";;;;;;AA8BA,IAAA,aAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;;;;;;;AAEA;AAAA;;;;;;;AAjCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,SAAA,cAAA,CAAA,MAAA,EAAgC;AAE5BA,EAAAA,MAAAA,GAASA,MAAAA,IAATA,EAAAA;AACA,MAAIC,QAAAA,GAAAA,KAAJ,CAAA;AACA,MAAIC,iBAAAA,GAAoBF,MAAAA,CAAxB,iBAAA;;AAEA,WAAA,WAAA,GAAuB;AACnB,QAAI,CAAA,iBAAA,IAAsB,CAACE,iBAAAA,CAAAA,cAAAA,CAA3B,qBAA2BA,CAA3B,EAAoF;AAChF,YAAM,IAAA,KAAA,CAAUC,WAAAA,CAAAA,OAAAA,CAAhB,oBAAM,CAAN;AAEP;AAED;;AAAA,WAAA,WAAA,CAAA,kBAAA,EAAyC;AACrCC,IAAAA,WAAAA;AACA,WAAOC,kBAAAA,CAAAA,SAAAA,GAA+BA,kBAAAA,CAAAA,SAAAA,CAA/BA,GAAAA,GAAP,CAAA;AAGJ;;AAAA,WAAA,KAAA,GAAiB;AACbH,IAAAA,iBAAAA,GAAAA,IAAAA;AAGJD;;AAAAA,EAAAA,QAAAA,GAAW;AACPK,IAAAA,WAAAA,EADO,WAAA;AAEPC,IAAAA,KAAAA,EAFJN;AAAW,GAAXA;AAKA,SAAA,QAAA;AAGJO;;AAAAA,cAAAA,CAAAA,qBAAAA,GAAAA,gBAAAA;kBACeC,cAAAA,CAAAA,OAAAA,CAAAA,eAAAA,CAAAA,cAAAA,C","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Constants from '../constants/Constants';\n\n/**\n * @param {Object} config\n * @returns {{initialize: initialize, getLiveEdge: getLiveEdge, reset: reset}|*}\n * @constructor\n * @ignore\n */\nfunction LiveEdgeFinder(config) {\n\n    config = config || {};\n    let instance;\n    let timelineConverter = config.timelineConverter;\n\n    function checkConfig() {\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('getExpectedLiveEdge')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getLiveEdge(representationInfo) {\n        checkConfig();\n        return representationInfo.DVRWindow ? representationInfo.DVRWindow.end : 0;\n    }\n\n    function reset() {\n        timelineConverter = null;\n    }\n\n    instance = {\n        getLiveEdge: getLiveEdge,\n        reset: reset\n    };\n\n    return instance;\n}\n\nLiveEdgeFinder.__dashjs_factory_name = 'LiveEdgeFinder';\nexport default FactoryMaker.getClassFactory(LiveEdgeFinder);\n"]},"metadata":{},"sourceType":"script"}