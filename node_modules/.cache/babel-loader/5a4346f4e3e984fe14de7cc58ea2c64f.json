{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* @classdesc Represents a set of configurations that describe the capabilities desired for\n*  support by a given CDM\n* @ignore\n*/\n\n\nvar KeySystemConfiguration =\n/**\n* @param {Array.<MediaCapability>} audioCapabilities array of\n* desired audio capabilities.  Higher preference capabilities should be placed earlier\n* in the array.\n* @param {Array.<MediaCapability>} videoCapabilities array of\n* desired video capabilities.  Higher preference capabilities should be placed earlier\n* in the array.\n* @param {string} distinctiveIdentifier desired use of distinctive identifiers.\n* One of \"required\", \"optional\", or \"not-allowed\"\n* @param {string} persistentState desired support for persistent storage of\n* key systems.  One of \"required\", \"optional\", or \"not-allowed\"\n* @param {Array.<string>} sessionTypes List of session types that must\n* be supported by the key system\n* @class\n*/\nfunction KeySystemConfiguration(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\n  _classCallCheck(this, KeySystemConfiguration);\n\n  this.initDataTypes = ['cenc'];\n\n  if (audioCapabilities && audioCapabilities.length) {\n    this.audioCapabilities = audioCapabilities;\n  }\n\n  if (videoCapabilities && videoCapabilities.length) {\n    this.videoCapabilities = videoCapabilities;\n  }\n\n  this.distinctiveIdentifier = distinctiveIdentifier;\n  this.persistentState = persistentState;\n  this.sessionTypes = sessionTypes;\n};\n\nexports.default = KeySystemConfiguration;","map":{"version":3,"sources":["../../../../../../src/streaming/protection/vo/KeySystemConfiguration.js"],"names":["KeySystemConfiguration","audioCapabilities","videoCapabilities"],"mappings":";;;;;;;;;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;;;AAKMA,IAAAA,sB;AACF;;;;;;;;;;;;;;;AAeA,SAAA,sBAAA,CAAA,iBAAA,EAAA,iBAAA,EAAA,qBAAA,EAAA,eAAA,EAAA,YAAA,EAAwG;AAAA,EAAA,eAAA,CAAA,IAAA,EAAA,sBAAA,CAAA;;AACpG,OAAA,aAAA,GAAqB,CAArB,MAAqB,CAArB;;AACA,MAAIC,iBAAAA,IAAqBA,iBAAAA,CAAzB,MAAA,EAAmD;AAC/C,SAAA,iBAAA,GAAA,iBAAA;AAEJ;;AAAA,MAAIC,iBAAAA,IAAqBA,iBAAAA,CAAzB,MAAA,EAAmD;AAC/C,SAAA,iBAAA,GAAA,iBAAA;AAEJ;;AAAA,OAAA,qBAAA,GAAA,qBAAA;AACA,OAAA,eAAA,GAAA,eAAA;AACA,OAAA,YAAA,GAAA,YAAA;CA1BFF;;kBA8BSA,sB","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc Represents a set of configurations that describe the capabilities desired for\n *  support by a given CDM\n * @ignore\n */\nclass KeySystemConfiguration {\n    /**\n     * @param {Array.<MediaCapability>} audioCapabilities array of\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {Array.<MediaCapability>} videoCapabilities array of\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\n     * One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {string} persistentState desired support for persistent storage of\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {Array.<string>} sessionTypes List of session types that must\n     * be supported by the key system\n     * @class\n     */\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\n        this.initDataTypes = [ 'cenc' ];\n        if (audioCapabilities && audioCapabilities.length) {\n            this.audioCapabilities = audioCapabilities;\n        }\n        if (videoCapabilities && videoCapabilities.length) {\n            this.videoCapabilities = videoCapabilities;\n        }\n        this.distinctiveIdentifier = distinctiveIdentifier;\n        this.persistentState = persistentState;\n        this.sessionTypes = sessionTypes;\n    }\n}\n\nexport default KeySystemConfiguration;\n"]},"metadata":{},"sourceType":"script"}