{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* @classdesc a node at some level in a ValueMap\n*/\n\n\nvar _CommonProperty = require('./CommonProperty');\n\nvar _CommonProperty2 = _interopRequireDefault(_CommonProperty);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar MapNode = function () {\n  function MapNode(name, properties, children) {\n    var _this = this;\n\n    _classCallCheck(this, MapNode);\n\n    this._name = name || '';\n    this._properties = [];\n    this._children = children || [];\n\n    if (Array.isArray(properties)) {\n      properties.forEach(function (p) {\n        _this._properties.push(new _CommonProperty2.default(p));\n      });\n    }\n  }\n\n  _createClass(MapNode, [{\n    key: 'name',\n    get: function get() {\n      return this._name;\n    }\n  }, {\n    key: 'children',\n    get: function get() {\n      return this._children;\n    }\n  }, {\n    key: 'properties',\n    get: function get() {\n      return this._properties;\n    }\n  }]);\n\n  return MapNode;\n}();\n\nexports.default = MapNode;","map":{"version":3,"sources":["../../../../../../src/dash/parser/maps/MapNode.js"],"names":["MapNode","name","children","Array","properties","CommonProperty"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;AAGA,IAAA,eAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;;;;;;;;;;;;;AAEMA;;AAAAA,IAAAA,O;AACF,WAAA,OAAA,CAAA,IAAA,EAAA,UAAA,EAAA,QAAA,EAAwC;AAAA,QAAA,KAAA,GAAA,IAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA;;AACpC,SAAA,KAAA,GAAaC,IAAAA,IAAb,EAAA;AACA,SAAA,WAAA,GAAA,EAAA;AACA,SAAA,SAAA,GAAiBC,QAAAA,IAAjB,EAAA;;AAEA,QAAIC,KAAAA,CAAAA,OAAAA,CAAJ,UAAIA,CAAJ,EAA+B;AAC3BC,MAAAA,UAAAA,CAAAA,OAAAA,CAAmB,UAAA,CAAA,EAAK;AACpB,QAAA,KAAA,CAAA,WAAA,CAAA,IAAA,CAAsB,IAAIC,gBAAAA,CAAJ,OAAA,CAAtB,CAAsB,CAAtB;AADJD,OAAAA;AAIP;;;;;wBAEU;AACP,aAAO,KAAP,KAAA;;;;wBAGW;AACX,aAAO,KAAP,SAAA;;;;wBAGa;AACb,aAAO,KAAP,WAAA;;;;;GAtBFJ;;kBA0BSA,O","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a node at some level in a ValueMap\n */\nimport CommonProperty from './CommonProperty';\n\nclass MapNode {\n    constructor(name, properties, children) {\n        this._name = name || '';\n        this._properties = [];\n        this._children = children || [];\n\n        if (Array.isArray(properties)) {\n            properties.forEach(p => {\n                this._properties.push(new CommonProperty(p));\n            });\n        }\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get children() {\n        return this._children;\n    }\n\n    get properties() {\n        return this._properties;\n    }\n}\n\nexport default MapNode;\n"]},"metadata":{},"sourceType":"script"}