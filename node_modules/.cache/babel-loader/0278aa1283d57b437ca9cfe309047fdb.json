{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportsMediaSource = supportsMediaSource;\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _ThumbnailTracks = require('../thumbnail/ThumbnailTracks');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nvar codecCompatibilityTable = [{\n  'codec': 'avc1',\n  'compatibleCodecs': ['avc3']\n}, {\n  'codec': 'avc3',\n  'compatibleCodecs': ['avc1']\n}];\n\nfunction supportsMediaSource() {\n  var hasWebKit = ('WebKitMediaSource' in window);\n  var hasMediaSource = ('MediaSource' in window);\n  return hasWebKit || hasMediaSource;\n}\n\nfunction Capabilities() {\n  var instance = void 0,\n      encryptedMediaSupported = void 0;\n\n  function setup() {\n    encryptedMediaSupported = false;\n  }\n  /**\n  * Returns whether Encrypted Media Extensions are supported on this\n  * user agent\n  *\n  * @return {boolean} true if EME is supported, false otherwise\n  */\n\n\n  function supportsEncryptedMedia() {\n    return encryptedMediaSupported;\n  }\n  /**\n  *\n  * @param {boolean} value\n  */\n\n\n  function setEncryptedMediaSupported(value) {\n    encryptedMediaSupported = value;\n  }\n  /**\n  * Check if a codec is supported by the MediaSource\n  * @param {string} codec\n  * @return {boolean}\n  */\n\n\n  function supportsCodec(codec) {\n    if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {\n      return true;\n    }\n\n    if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(codec)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n  * Check if a specific EssentialProperty is supported\n  * @param {object} ep\n  * @return {boolean}\n  */\n\n\n  function supportsEssentialProperty(ep) {\n    try {\n      return _ThumbnailTracks.THUMBNAILS_SCHEME_ID_URIS.indexOf(ep.schemeIdUri) !== -1;\n    } catch (e) {\n      return true;\n    }\n  }\n  /**\n  * Check if the root of the old codec is the same as the new one, or if it's declared as compatible in the compat table\n  * @param {string} codec1\n  * @param {string} codec2\n  * @return {boolean}\n  */\n\n\n  function codecRootCompatibleWithCodec(codec1, codec2) {\n    var codecRoot = codec1.split('.')[0];\n    var rootCompatible = codec2.indexOf(codecRoot) === 0;\n    var compatTableCodec = void 0;\n\n    for (var i = 0; i < codecCompatibilityTable.length; i++) {\n      if (codecCompatibilityTable[i].codec === codecRoot) {\n        compatTableCodec = codecCompatibilityTable[i];\n        break;\n      }\n    }\n\n    if (compatTableCodec) {\n      return rootCompatible || compatTableCodec.compatibleCodecs.some(function (compatibleCodec) {\n        return codec2.indexOf(compatibleCodec) === 0;\n      });\n    }\n\n    return rootCompatible;\n  }\n\n  instance = {\n    supportsMediaSource: supportsMediaSource,\n    supportsEncryptedMedia: supportsEncryptedMedia,\n    supportsCodec: supportsCodec,\n    setEncryptedMediaSupported: setEncryptedMediaSupported,\n    supportsEssentialProperty: supportsEssentialProperty,\n    codecRootCompatibleWithCodec: codecRootCompatibleWithCodec\n  };\n  setup();\n  return instance;\n}\n\nCapabilities.__dashjs_factory_name = 'Capabilities';\nexports.default = _FactoryMaker2.default.getSingletonFactory(Capabilities);","map":{"version":3,"sources":["../../../../../src/streaming/utils/Capabilities.js"],"names":["codecCompatibilityTable","supportsMediaSource","hasWebKit","hasMediaSource","instance","encryptedMediaSupported","MediaSource","WebKitMediaSource","THUMBNAILS_SCHEME_ID_URIS","ep","codecRoot","codec1","rootCompatible","codec2","compatTableCodec","i","supportsEncryptedMedia","supportsCodec","setEncryptedMediaSupported","supportsEssentialProperty","codecRootCompatibleWithCodec","setup","Capabilities","FactoryMaker"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport {THUMBNAILS_SCHEME_ID_URIS} from '../thumbnail/ThumbnailTracks';\n\nconst codecCompatibilityTable = [\n    {\n        'codec': 'avc1',\n        'compatibleCodecs': ['avc3']\n    },\n    {\n        'codec': 'avc3',\n        'compatibleCodecs': ['avc1']\n    }\n];\n\nexport function supportsMediaSource() {\n    let hasWebKit = ('WebKitMediaSource' in window);\n    let hasMediaSource = ('MediaSource' in window);\n\n    return (hasWebKit || hasMediaSource);\n}\n\nfunction Capabilities() {\n\n    let instance,\n        encryptedMediaSupported;\n\n    function setup() {\n        encryptedMediaSupported = false;\n    }\n\n    /**\n     * Returns whether Encrypted Media Extensions are supported on this\n     * user agent\n     *\n     * @return {boolean} true if EME is supported, false otherwise\n     */\n    function supportsEncryptedMedia() {\n        return encryptedMediaSupported;\n    }\n\n    /**\n     *\n     * @param {boolean} value\n     */\n    function setEncryptedMediaSupported(value) {\n        encryptedMediaSupported = value;\n    }\n\n    /**\n     * Check if a codec is supported by the MediaSource\n     * @param {string} codec\n     * @return {boolean}\n     */\n    function supportsCodec(codec) {\n        if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if a specific EssentialProperty is supported\n     * @param {object} ep\n     * @return {boolean}\n     */\n    function supportsEssentialProperty(ep) {\n        try {\n            return THUMBNAILS_SCHEME_ID_URIS.indexOf(ep.schemeIdUri) !== -1;\n        } catch (e) {\n            return true;\n        }\n    }\n\n    /**\n     * Check if the root of the old codec is the same as the new one, or if it's declared as compatible in the compat table\n     * @param {string} codec1\n     * @param {string} codec2\n     * @return {boolean}\n     */\n    function codecRootCompatibleWithCodec(codec1, codec2) {\n        const codecRoot = codec1.split('.')[0];\n        const rootCompatible = codec2.indexOf(codecRoot) === 0;\n        let compatTableCodec;\n        for (let i = 0; i < codecCompatibilityTable.length; i++) {\n            if (codecCompatibilityTable[i].codec === codecRoot) {\n                compatTableCodec = codecCompatibilityTable[i];\n                break;\n            }\n        }\n        if (compatTableCodec) {\n            return rootCompatible || compatTableCodec.compatibleCodecs.some((compatibleCodec) => codec2.indexOf(compatibleCodec) === 0);\n        }\n        return rootCompatible;\n    }\n\n    instance = {\n        supportsMediaSource,\n        supportsEncryptedMedia,\n        supportsCodec,\n        setEncryptedMediaSupported,\n        supportsEssentialProperty,\n        codecRootCompatibleWithCodec\n    };\n\n    setup();\n\n    return instance;\n}\n\nCapabilities.__dashjs_factory_name = 'Capabilities';\nexport default FactoryMaker.getSingletonFactory(Capabilities);\n"]},"metadata":{},"sourceType":"script"}