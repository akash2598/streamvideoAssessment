{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _BaseMatcher2 = require('./BaseMatcher');\n\nvar _BaseMatcher3 = _interopRequireDefault(_BaseMatcher2);\n\nvar _DashConstants = require('../../constants/DashConstants');\n\nvar _DashConstants2 = _interopRequireDefault(_DashConstants);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* @classdesc Matches and converts xs:string to string, but only for specific attributes on specific nodes\n*/\n\n\nvar StringMatcher = function (_BaseMatcher) {\n  _inherits(StringMatcher, _BaseMatcher);\n\n  function StringMatcher() {\n    _classCallCheck(this, StringMatcher);\n\n    return _possibleConstructorReturn(this, (StringMatcher.__proto__ || Object.getPrototypeOf(StringMatcher)).call(this, function (attr, nodeName) {\n      var _stringAttrsInElement;\n\n      var stringAttrsInElements = (_stringAttrsInElement = {}, _defineProperty(_stringAttrsInElement, _DashConstants2.default.MPD, [_DashConstants2.default.ID, _DashConstants2.default.PROFILES]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.PERIOD, [_DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.BASE_URL, [_DashConstants2.default.SERVICE_LOCATION, _DashConstants2.default.BYTE_RANGE]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.SEGMENT_BASE, [_DashConstants2.default.INDEX_RANGE]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.INITIALIZATION, [_DashConstants2.default.RANGE]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.REPRESENTATION_INDEX, [_DashConstants2.default.RANGE]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.SEGMENT_LIST, [_DashConstants2.default.INDEX_RANGE]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.BITSTREAM_SWITCHING, [_DashConstants2.default.RANGE]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.SEGMENT_URL, [_DashConstants2.default.MEDIA_RANGE, _DashConstants2.default.INDEX_RANGE]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.SEGMENT_TEMPLATE, [_DashConstants2.default.INDEX_RANGE, _DashConstants2.default.MEDIA, _DashConstants2.default.INDEX, _DashConstants2.default.INITIALIZATION_MINUS, _DashConstants2.default.BITSTREAM_SWITCHING_MINUS]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.ASSET_IDENTIFIER, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.EVENT_STREAM, [_DashConstants2.default.VALUE]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.ADAPTATION_SET, [_DashConstants2.default.PROFILES, _DashConstants2.default.MIME_TYPE, _DashConstants2.default.SEGMENT_PROFILES, _DashConstants2.default.CODECS, _DashConstants2.default.CONTENT_TYPE]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.FRAME_PACKING, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.AUDIO_CHANNEL_CONFIGURATION, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.CONTENT_PROTECTION, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.ESSENTIAL_PROPERTY, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.SUPPLEMENTAL_PROPERTY, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.INBAND_EVENT_STREAM, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.ACCESSIBILITY, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.ROLE, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.RATING, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.VIEWPOINT, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.CONTENT_COMPONENT, [_DashConstants2.default.CONTENT_TYPE]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.REPRESENTATION, [_DashConstants2.default.ID, _DashConstants2.default.DEPENDENCY_ID, _DashConstants2.default.MEDIA_STREAM_STRUCTURE_ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.SUBSET, [_DashConstants2.default.ID]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.METRICS, [_DashConstants2.default.METRICS_MINUS]), _defineProperty(_stringAttrsInElement, _DashConstants2.default.REPORTING, [_DashConstants2.default.VALUE, _DashConstants2.default.ID]), _stringAttrsInElement);\n\n      if (stringAttrsInElements.hasOwnProperty(nodeName)) {\n        var attrNames = stringAttrsInElements[nodeName];\n\n        if (attrNames !== undefined) {\n          return attrNames.indexOf(attr.name) >= 0;\n        } else {\n          return false;\n        }\n      }\n\n      return false;\n    }, function (str) {\n      return String(str);\n    }));\n  }\n\n  return StringMatcher;\n}(_BaseMatcher3.default);\n\nexports.default = StringMatcher;","map":{"version":3,"sources":["../../../../../../src/dash/parser/matchers/StringMatcher.js"],"names":["StringMatcher","BaseMatcher","stringAttrsInElements","DashConstants","attrNames","attr","String"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts xs:string to string, but only for specific attributes on specific nodes\n */\nimport BaseMatcher from './BaseMatcher';\nimport DashConstants from '../../constants/DashConstants';\n\nclass StringMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            (attr, nodeName) => {\n                const stringAttrsInElements = {\n                    [DashConstants.MPD]:                            [ DashConstants.ID, DashConstants.PROFILES ],\n                    [DashConstants.PERIOD]:                         [ DashConstants.ID ],\n                    [DashConstants.BASE_URL]:                       [ DashConstants.SERVICE_LOCATION, DashConstants.BYTE_RANGE ],\n                    [DashConstants.SEGMENT_BASE]:                   [ DashConstants.INDEX_RANGE ],\n                    [DashConstants.INITIALIZATION]:                 [ DashConstants.RANGE ],\n                    [DashConstants.REPRESENTATION_INDEX]:           [ DashConstants.RANGE ],\n                    [DashConstants.SEGMENT_LIST]:                   [ DashConstants.INDEX_RANGE ],\n                    [DashConstants.BITSTREAM_SWITCHING]:            [ DashConstants.RANGE ],\n                    [DashConstants.SEGMENT_URL]:                    [ DashConstants.MEDIA_RANGE, DashConstants.INDEX_RANGE ],\n                    [DashConstants.SEGMENT_TEMPLATE]:               [ DashConstants.INDEX_RANGE, DashConstants.MEDIA, DashConstants.INDEX, DashConstants.INITIALIZATION_MINUS, DashConstants.BITSTREAM_SWITCHING_MINUS ],\n                    [DashConstants.ASSET_IDENTIFIER]:               [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.EVENT_STREAM]:                   [ DashConstants.VALUE ],\n                    [DashConstants.ADAPTATION_SET]:                 [ DashConstants.PROFILES, DashConstants.MIME_TYPE, DashConstants.SEGMENT_PROFILES, DashConstants.CODECS, DashConstants.CONTENT_TYPE ],\n                    [DashConstants.FRAME_PACKING]:                  [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.AUDIO_CHANNEL_CONFIGURATION]:    [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.CONTENT_PROTECTION]:             [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ESSENTIAL_PROPERTY]:             [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.SUPPLEMENTAL_PROPERTY]:          [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.INBAND_EVENT_STREAM]:            [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ACCESSIBILITY]:                  [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ROLE]:                           [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.RATING]:                         [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.VIEWPOINT]:                      [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.CONTENT_COMPONENT]:              [ DashConstants.CONTENT_TYPE ],\n                    [DashConstants.REPRESENTATION]:                 [ DashConstants.ID, DashConstants.DEPENDENCY_ID, DashConstants.MEDIA_STREAM_STRUCTURE_ID ],\n                    [DashConstants.SUBSET]:                         [ DashConstants.ID ],\n                    [DashConstants.METRICS]:                        [ DashConstants.METRICS_MINUS ],\n                    [DashConstants.REPORTING]:                      [ DashConstants.VALUE, DashConstants.ID ]\n                };\n                if (stringAttrsInElements.hasOwnProperty(nodeName)) {\n                    let attrNames = stringAttrsInElements[nodeName];\n                    if (attrNames !== undefined) {\n                        return attrNames.indexOf(attr.name) >= 0;\n                    } else {\n                        return false;\n                    }\n                }\n                return false;\n            },\n            str => String(str)\n        );\n    }\n}\n\nexport default StringMatcher;\n"]},"metadata":{},"sourceType":"script"}