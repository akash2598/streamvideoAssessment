{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _Debug = require('../../core/Debug');\n\nvar _Debug2 = _interopRequireDefault(_Debug);\n\nvar _Constants = require('../constants/Constants');\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction CapabilitiesFilter() {\n  var context = this.context;\n  var instance = void 0,\n      adapter = void 0,\n      capabilities = void 0,\n      settings = void 0,\n      logger = void 0,\n      customCapabilitiesFilters = void 0;\n\n  function setup() {\n    logger = (0, _Debug2.default)(context).getInstance().getLogger(instance);\n  }\n\n  function setConfig(config) {\n    if (!config) {\n      return;\n    }\n\n    if (config.adapter) {\n      adapter = config.adapter;\n    }\n\n    if (config.capabilities) {\n      capabilities = config.capabilities;\n    }\n\n    if (config.settings) {\n      settings = config.settings;\n    }\n  }\n\n  function filterUnsupportedFeaturesOfPeriod(streamInfo) {\n    _filterUnsupportedCodecs(_Constants2.default.VIDEO, streamInfo);\n\n    _filterUnsupportedCodecs(_Constants2.default.AUDIO, streamInfo);\n\n    if (settings.get().streaming.filterUnsupportedEssentialProperties) {\n      _filterUnsupportedEssentialProperties(streamInfo);\n    }\n\n    _applyCustomFilters(streamInfo);\n  }\n\n  function _filterUnsupportedCodecs(type, streamInfo) {\n    var realPeriod = adapter.getRealPeriodByIndex(streamInfo ? streamInfo.index : null);\n\n    if (!realPeriod || !realPeriod.AdaptationSet_asArray || realPeriod.AdaptationSet_asArray.length === 0) {\n      return;\n    }\n\n    realPeriod.AdaptationSet_asArray = realPeriod.AdaptationSet_asArray.filter(function (as) {\n      if (!as.Representation_asArray || as.Representation_asArray.length === 0 || !adapter.getIsTypeOf(as, type)) {\n        return true;\n      }\n\n      as.Representation_asArray = as.Representation_asArray.filter(function (_, i) {\n        var codec = adapter.getCodec(as, i, true);\n\n        if (!capabilities.supportsCodec(codec)) {\n          logger.error('[Stream] codec not supported: ' + codec);\n          return false;\n        }\n\n        return true;\n      });\n      return as.Representation_asArray && as.Representation_asArray.length > 0;\n    });\n  }\n\n  function _filterUnsupportedEssentialProperties(streamInfo) {\n    var realPeriod = adapter.getRealPeriodByIndex(streamInfo ? streamInfo.index : null);\n\n    if (!realPeriod || !realPeriod.AdaptationSet_asArray || realPeriod.AdaptationSet_asArray.length === 0) {\n      return;\n    }\n\n    realPeriod.AdaptationSet_asArray = realPeriod.AdaptationSet_asArray.filter(function (as) {\n      if (!as.Representation_asArray || as.Representation_asArray.length === 0) {\n        return true;\n      }\n\n      as.Representation_asArray = as.Representation_asArray.filter(function (rep) {\n        var essentialProperties = adapter.getEssentialPropertiesForRepresentation(rep);\n\n        if (essentialProperties && essentialProperties.length > 0) {\n          var i = 0;\n\n          while (i < essentialProperties.length) {\n            if (!capabilities.supportsEssentialProperty(essentialProperties[i])) {\n              logger.debug('[Stream] EssentialProperty not supported: ' + essentialProperties[i].schemeIdUri);\n              return false;\n            }\n\n            i += 1;\n          }\n        }\n\n        return true;\n      });\n      return as.Representation_asArray && as.Representation_asArray.length > 0;\n    });\n  }\n\n  function _applyCustomFilters(streamInfo) {\n    if (!customCapabilitiesFilters || customCapabilitiesFilters.length === 0) return;\n    var realPeriod = adapter.getRealPeriodByIndex(streamInfo ? streamInfo.index : null);\n\n    if (!realPeriod || !realPeriod.AdaptationSet_asArray || realPeriod.AdaptationSet_asArray.length === 0) {\n      return;\n    }\n\n    realPeriod.AdaptationSet_asArray = realPeriod.AdaptationSet_asArray.filter(function (as) {\n      if (!as.Representation_asArray || as.Representation_asArray.length === 0) {\n        return true;\n      }\n\n      as.Representation_asArray = as.Representation_asArray.filter(function (representation) {\n        return !customCapabilitiesFilters.some(function (customFilter) {\n          return !customFilter(representation);\n        });\n      });\n      return as.Representation_asArray && as.Representation_asArray.length > 0;\n    });\n  }\n\n  function setCustomCapabilitiesFilters(customFilters) {\n    customCapabilitiesFilters = customFilters;\n  }\n\n  instance = {\n    setConfig: setConfig,\n    filterUnsupportedFeaturesOfPeriod: filterUnsupportedFeaturesOfPeriod,\n    setCustomCapabilitiesFilters: setCustomCapabilitiesFilters\n  };\n  setup();\n  return instance;\n}\n\nCapabilitiesFilter.__dashjs_factory_name = 'CapabilitiesFilter';\nexports.default = _FactoryMaker2.default.getSingletonFactory(CapabilitiesFilter);","map":{"version":3,"sources":["../../../../../src/streaming/utils/CapabilitiesFilter.js"],"names":["context","instance","adapter","capabilities","settings","logger","customCapabilitiesFilters","config","_filterUnsupportedCodecs","Constants","_filterUnsupportedEssentialProperties","_applyCustomFilters","realPeriod","streamInfo","as","codec","essentialProperties","i","customFilter","setConfig","filterUnsupportedFeaturesOfPeriod","setCustomCapabilitiesFilters","setup","CapabilitiesFilter","FactoryMaker"],"mappings":"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","sourcesContent":["import FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport Constants from '../constants/Constants';\n\nfunction CapabilitiesFilter() {\n    const context = this.context;\n    let instance,\n        adapter,\n        capabilities,\n        settings,\n        logger,\n        customCapabilitiesFilters;\n\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n\n        if (config.capabilities) {\n            capabilities = config.capabilities;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n\n    }\n\n    function filterUnsupportedFeaturesOfPeriod(streamInfo) {\n        _filterUnsupportedCodecs(Constants.VIDEO, streamInfo);\n        _filterUnsupportedCodecs(Constants.AUDIO, streamInfo);\n\n        if (settings.get().streaming.filterUnsupportedEssentialProperties) {\n            _filterUnsupportedEssentialProperties(streamInfo);\n        }\n\n        _applyCustomFilters(streamInfo);\n    }\n\n\n    function _filterUnsupportedCodecs(type, streamInfo) {\n        const realPeriod = adapter.getRealPeriodByIndex(streamInfo ? streamInfo.index : null);\n\n        if (!realPeriod || !realPeriod.AdaptationSet_asArray || realPeriod.AdaptationSet_asArray.length === 0) {\n            return;\n        }\n\n        realPeriod.AdaptationSet_asArray = realPeriod.AdaptationSet_asArray.filter((as) => {\n\n            if (!as.Representation_asArray || as.Representation_asArray.length === 0 || !adapter.getIsTypeOf(as, type)) {\n                return true;\n            }\n\n            as.Representation_asArray = as.Representation_asArray.filter((_, i) => {\n                const codec = adapter.getCodec(as, i, true);\n                if (!capabilities.supportsCodec(codec)) {\n                    logger.error('[Stream] codec not supported: ' + codec);\n                    return false;\n                }\n                return true;\n            });\n\n            return as.Representation_asArray && as.Representation_asArray.length > 0;\n        });\n\n    }\n\n    function _filterUnsupportedEssentialProperties(streamInfo) {\n        const realPeriod = adapter.getRealPeriodByIndex(streamInfo ? streamInfo.index : null);\n\n        if (!realPeriod || !realPeriod.AdaptationSet_asArray || realPeriod.AdaptationSet_asArray.length === 0) {\n            return;\n        }\n\n        realPeriod.AdaptationSet_asArray = realPeriod.AdaptationSet_asArray.filter((as) => {\n\n            if (!as.Representation_asArray || as.Representation_asArray.length === 0) {\n                return true;\n            }\n\n            as.Representation_asArray = as.Representation_asArray.filter((rep) => {\n                const essentialProperties = adapter.getEssentialPropertiesForRepresentation(rep);\n\n                if (essentialProperties && essentialProperties.length > 0) {\n                    let i = 0;\n                    while (i < essentialProperties.length) {\n                        if (!capabilities.supportsEssentialProperty(essentialProperties[i])) {\n                            logger.debug('[Stream] EssentialProperty not supported: ' + essentialProperties[i].schemeIdUri);\n                            return false;\n                        }\n                        i += 1;\n                    }\n                }\n\n                return true;\n            });\n\n            return as.Representation_asArray && as.Representation_asArray.length > 0;\n        });\n\n    }\n\n    function _applyCustomFilters(streamInfo) {\n        if (!customCapabilitiesFilters || customCapabilitiesFilters.length === 0) return;\n\n        const realPeriod = adapter.getRealPeriodByIndex(streamInfo ? streamInfo.index : null);\n\n        if (!realPeriod || !realPeriod.AdaptationSet_asArray || realPeriod.AdaptationSet_asArray.length === 0) {\n            return;\n        }\n\n        realPeriod.AdaptationSet_asArray = realPeriod.AdaptationSet_asArray.filter((as) => {\n\n            if (!as.Representation_asArray || as.Representation_asArray.length === 0) {\n                return true;\n            }\n\n            as.Representation_asArray = as.Representation_asArray.filter((representation) => {\n                return !customCapabilitiesFilters.some(customFilter => !customFilter(representation));\n            });\n\n            return as.Representation_asArray && as.Representation_asArray.length > 0;\n        });\n    }\n\n    function setCustomCapabilitiesFilters(customFilters) {\n        customCapabilitiesFilters = customFilters;\n    }\n\n    instance = {\n        setConfig,\n        filterUnsupportedFeaturesOfPeriod,\n        setCustomCapabilitiesFilters\n    };\n\n    setup();\n\n    return instance;\n}\n\nCapabilitiesFilter.__dashjs_factory_name = 'CapabilitiesFilter';\nexport default FactoryMaker.getSingletonFactory(CapabilitiesFilter);\n"]},"metadata":{},"sourceType":"script"}