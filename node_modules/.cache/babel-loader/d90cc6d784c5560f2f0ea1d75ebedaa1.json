{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _SwitchRequest = require('../SwitchRequest');\n\nvar _SwitchRequest2 = _interopRequireDefault(_SwitchRequest);\n\nvar _Debug = require('../../../core/Debug');\n\nvar _Debug2 = _interopRequireDefault(_Debug);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction DroppedFramesRule() {\n  var context = this.context;\n  var instance = void 0,\n      logger = void 0;\n  var DROPPED_PERCENTAGE_FORBID = 0.15;\n  var GOOD_SAMPLE_SIZE = 375; //Don't apply the rule until this many frames have been rendered(and counted under those indices).\n\n  function setup() {\n    logger = (0, _Debug2.default)(context).getInstance().getLogger(instance);\n  }\n\n  function getMaxIndex(rulesContext) {\n    var switchRequest = (0, _SwitchRequest2.default)(context).create();\n\n    if (!rulesContext || !rulesContext.hasOwnProperty('getDroppedFramesHistory')) {\n      return switchRequest;\n    }\n\n    var droppedFramesHistory = rulesContext.getDroppedFramesHistory();\n\n    if (droppedFramesHistory) {\n      var dfh = droppedFramesHistory.getFrameHistory();\n      var droppedFrames = 0;\n      var totalFrames = 0;\n      var maxIndex = _SwitchRequest2.default.NO_CHANGE;\n\n      for (var i = 1; i < dfh.length; i++) {\n        //No point in measuring dropped frames for the zeroeth index.\n        if (dfh[i]) {\n          droppedFrames = dfh[i].droppedVideoFrames;\n          totalFrames = dfh[i].totalVideoFrames;\n\n          if (totalFrames > GOOD_SAMPLE_SIZE && droppedFrames / totalFrames > DROPPED_PERCENTAGE_FORBID) {\n            maxIndex = i - 1;\n            logger.debug('index: ' + maxIndex + ' Dropped Frames: ' + droppedFrames + ' Total Frames: ' + totalFrames);\n            break;\n          }\n        }\n      }\n\n      return (0, _SwitchRequest2.default)(context).create(maxIndex, {\n        droppedFrames: droppedFrames\n      });\n    }\n\n    return switchRequest;\n  }\n\n  instance = {\n    getMaxIndex: getMaxIndex\n  };\n  setup();\n  return instance;\n}\n\nDroppedFramesRule.__dashjs_factory_name = 'DroppedFramesRule';\nexports.default = _FactoryMaker2.default.getClassFactory(DroppedFramesRule);","map":{"version":3,"sources":["../../../../../../src/streaming/rules/abr/DroppedFramesRule.js"],"names":["context","instance","logger","DROPPED_PERCENTAGE_FORBID","GOOD_SAMPLE_SIZE","switchRequest","rulesContext","droppedFramesHistory","dfh","droppedFrames","totalFrames","maxIndex","SwitchRequest","i","getMaxIndex","setup","DroppedFramesRule","FactoryMaker"],"mappings":";;;;;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;;;;;;;AAEA;;AAAA,SAAA,iBAAA,GAA6B;AAEzB,MAAMA,OAAAA,GAAU,KAAhB,OAAA;AACA,MAAIC,QAAAA,GAAAA,KAAJ,CAAA;AAAA,MACIC,MAAAA,GAAAA,KADJ,CAAA;AAGA,MAAMC,yBAAAA,GAAN,IAAA;AACA,MAAMC,gBAAAA,GAAN,GAAA,CAPyB,CAOK;;AAE9B,WAAA,KAAA,GAAiB;AACbF,IAAAA,MAAAA,GAAS,CAAA,GAAA,OAAA,CAAA,OAAA,EAAA,OAAA,EAAA,WAAA,GAAA,SAAA,CAATA,QAAS,CAATA;AAGJ;;AAAA,WAAA,WAAA,CAAA,YAAA,EAAmC;AAC/B,QAAMG,aAAAA,GAAgB,CAAA,GAAA,eAAA,CAAA,OAAA,EAAA,OAAA,EAAtB,MAAsB,EAAtB;;AAEA,QAAI,CAAA,YAAA,IAAiB,CAACC,YAAAA,CAAAA,cAAAA,CAAtB,yBAAsBA,CAAtB,EAA8E;AAC1E,aAAA,aAAA;AAEJ;;AAAA,QAAMC,oBAAAA,GAAuBD,YAAAA,CAA7B,uBAA6BA,EAA7B;;AACA,QAAA,oBAAA,EAA0B;AACtB,UAAME,GAAAA,GAAMD,oBAAAA,CAAZ,eAAYA,EAAZ;AACA,UAAIE,aAAAA,GAAJ,CAAA;AACA,UAAIC,WAAAA,GAAJ,CAAA;AACA,UAAIC,QAAAA,GAAWC,eAAAA,CAAAA,OAAAA,CAAf,SAAA;;AACA,WAAK,IAAIC,CAAAA,GAAT,CAAA,EAAgBA,CAAAA,GAAIL,GAAAA,CAApB,MAAA,EAAgCK,CAAhC,EAAA,EAAqC;AAAE;AACnC,YAAIL,GAAAA,CAAJ,CAAIA,CAAJ,EAAY;AACRC,UAAAA,aAAAA,GAAgBD,GAAAA,CAAAA,CAAAA,CAAAA,CAAhBC,kBAAAA;AACAC,UAAAA,WAAAA,GAAcF,GAAAA,CAAAA,CAAAA,CAAAA,CAAdE,gBAAAA;;AAEA,cAAIA,WAAAA,GAAAA,gBAAAA,IAAkCD,aAAAA,GAAAA,WAAAA,GAAtC,yBAAA,EAA+F;AAC3FE,YAAAA,QAAAA,GAAWE,CAAAA,GAAXF,CAAAA;AACAT,YAAAA,MAAAA,CAAAA,KAAAA,CAAa,YAAA,QAAA,GAAA,mBAAA,GAAA,aAAA,GAAA,iBAAA,GAAbA,WAAAA;AACA;AAEP;AACJ;AACD;;AAAA,aAAO,CAAA,GAAA,eAAA,CAAA,OAAA,EAAA,OAAA,EAAA,MAAA,CAAA,QAAA,EAAwC;AAACO,QAAAA,aAAAA,EAAhD;AAA+C,OAAxC,CAAP;AAGJ;;AAAA,WAAA,aAAA;AAGJR;;AAAAA,EAAAA,QAAAA,GAAW;AACPa,IAAAA,WAAAA,EADJb;AAAW,GAAXA;AAIAc,EAAAA,KAAAA;AAEA,SAAA,QAAA;AAGJC;;AAAAA,iBAAAA,CAAAA,qBAAAA,GAAAA,mBAAAA;kBACeC,cAAAA,CAAAA,OAAAA,CAAAA,eAAAA,CAAAA,iBAAAA,C","sourcesContent":["\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport SwitchRequest from '../SwitchRequest';\nimport Debug from '../../../core/Debug';\n\nfunction DroppedFramesRule() {\n\n    const context = this.context;\n    let instance,\n        logger;\n\n    const DROPPED_PERCENTAGE_FORBID = 0.15;\n    const GOOD_SAMPLE_SIZE = 375; //Don't apply the rule until this many frames have been rendered(and counted under those indices).\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getMaxIndex(rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getDroppedFramesHistory')) {\n            return switchRequest;\n        }\n        const droppedFramesHistory = rulesContext.getDroppedFramesHistory();\n        if (droppedFramesHistory) {\n            const dfh = droppedFramesHistory.getFrameHistory();\n            let droppedFrames = 0;\n            let totalFrames = 0;\n            let maxIndex = SwitchRequest.NO_CHANGE;\n            for (let i = 1; i < dfh.length; i++) { //No point in measuring dropped frames for the zeroeth index.\n                if (dfh[i]) {\n                    droppedFrames = dfh[i].droppedVideoFrames;\n                    totalFrames = dfh[i].totalVideoFrames;\n\n                    if (totalFrames > GOOD_SAMPLE_SIZE && droppedFrames / totalFrames > DROPPED_PERCENTAGE_FORBID) {\n                        maxIndex = i - 1;\n                        logger.debug('index: ' + maxIndex + ' Dropped Frames: ' + droppedFrames + ' Total Frames: ' + totalFrames);\n                        break;\n                    }\n                }\n            }\n            return SwitchRequest(context).create(maxIndex, {droppedFrames: droppedFrames});\n        }\n\n        return switchRequest;\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex\n    };\n\n    setup();\n\n    return instance;\n}\n\nDroppedFramesRule.__dashjs_factory_name = 'DroppedFramesRule';\nexport default FactoryMaker.getClassFactory(DroppedFramesRule);"]},"metadata":{},"sourceType":"script"}