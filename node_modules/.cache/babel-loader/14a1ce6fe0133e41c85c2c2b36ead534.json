{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ObjectUtils = require('../utils/ObjectUtils');\n\nvar _ObjectUtils2 = _interopRequireDefault(_ObjectUtils);\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nvar DEFAULT_INDEX = NaN;\n\nvar Node = function Node(_baseUrls, _selectedIdx) {\n  _classCallCheck(this, Node);\n\n  this.data = {\n    baseUrls: _baseUrls || null,\n    selectedIdx: _selectedIdx || DEFAULT_INDEX\n  };\n  this.children = [];\n};\n\nfunction BaseURLTreeModel() {\n  var instance = void 0,\n      root = void 0,\n      adapter = void 0;\n  var context = this.context;\n  var objectUtils = (0, _ObjectUtils2.default)(context).getInstance();\n\n  function setup() {\n    reset();\n  }\n\n  function setConfig(config) {\n    if (config.adapter) {\n      adapter = config.adapter;\n    }\n  }\n\n  function checkConfig() {\n    if (!adapter || !adapter.hasOwnProperty('getBaseURLsFromElement') || !adapter.hasOwnProperty('getRepresentationSortFunction')) {\n      throw new Error('setConfig function has to be called previously');\n    }\n  }\n\n  function updateChildData(node, index, element) {\n    var baseUrls = adapter.getBaseURLsFromElement(element);\n\n    if (!node[index]) {\n      node[index] = new Node(baseUrls);\n    } else {\n      if (!objectUtils.areEqual(baseUrls, node[index].data.baseUrls)) {\n        node[index].data.baseUrls = baseUrls;\n        node[index].data.selectedIdx = DEFAULT_INDEX;\n      }\n    }\n  }\n\n  function getBaseURLCollectionsFromManifest(manifest) {\n    checkConfig();\n    var baseUrls = adapter.getBaseURLsFromElement(manifest);\n\n    if (!objectUtils.areEqual(baseUrls, root.data.baseUrls)) {\n      root.data.baseUrls = baseUrls;\n      root.data.selectedIdx = DEFAULT_INDEX;\n    }\n\n    if (manifest && manifest.Period_asArray) {\n      manifest.Period_asArray.forEach(function (p, pi) {\n        updateChildData(root.children, pi, p);\n\n        if (p.AdaptationSet_asArray) {\n          p.AdaptationSet_asArray.forEach(function (a, ai) {\n            updateChildData(root.children[pi].children, ai, a);\n\n            if (a.Representation_asArray) {\n              a.Representation_asArray.sort(adapter.getRepresentationSortFunction()).forEach(function (r, ri) {\n                updateChildData(root.children[pi].children[ai].children, ri, r);\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n\n  function walk(callback, node) {\n    var target = node || root;\n    callback(target.data);\n\n    if (target.children) {\n      target.children.forEach(function (child) {\n        return walk(callback, child);\n      });\n    }\n  }\n\n  function invalidateSelectedIndexes(serviceLocation) {\n    walk(function (data) {\n      if (!isNaN(data.selectedIdx)) {\n        if (serviceLocation === data.baseUrls[data.selectedIdx].serviceLocation) {\n          data.selectedIdx = DEFAULT_INDEX;\n        }\n      }\n    });\n  }\n\n  function update(manifest) {\n    getBaseURLCollectionsFromManifest(manifest);\n  }\n\n  function reset() {\n    root = new Node();\n  }\n\n  function getForPath(path) {\n    var target = root;\n    var nodes = [target.data];\n\n    if (path) {\n      path.forEach(function (p) {\n        target = target.children[p];\n\n        if (target) {\n          nodes.push(target.data);\n        }\n      });\n    }\n\n    return nodes.filter(function (n) {\n      return n.baseUrls.length;\n    });\n  }\n\n  instance = {\n    reset: reset,\n    update: update,\n    getForPath: getForPath,\n    invalidateSelectedIndexes: invalidateSelectedIndexes,\n    setConfig: setConfig\n  };\n  setup();\n  return instance;\n}\n\nBaseURLTreeModel.__dashjs_factory_name = 'BaseURLTreeModel';\nexports.default = _FactoryMaker2.default.getClassFactory(BaseURLTreeModel);","map":{"version":3,"sources":["../../../../../src/streaming/models/BaseURLTreeModel.js"],"names":["DEFAULT_INDEX","Node","baseUrls","_baseUrls","selectedIdx","_selectedIdx","instance","root","adapter","context","objectUtils","reset","config","node","checkConfig","manifest","updateChildData","p","a","target","callback","walk","isNaN","data","serviceLocation","getBaseURLCollectionsFromManifest","nodes","path","n","update","getForPath","invalidateSelectedIndexes","setConfig","setup","BaseURLTreeModel","FactoryMaker"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst DEFAULT_INDEX = NaN;\n\nclass Node {\n    constructor(_baseUrls, _selectedIdx) {\n        this.data = {\n            baseUrls: _baseUrls || null,\n            selectedIdx: _selectedIdx || DEFAULT_INDEX\n        };\n        this.children = [];\n    }\n}\n\nfunction BaseURLTreeModel() {\n    let instance,\n        root,\n        adapter;\n\n    const context = this.context;\n    const objectUtils = ObjectUtils(context).getInstance();\n\n    function setup() {\n        reset();\n    }\n\n    function setConfig(config) {\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n    }\n\n    function checkConfig() {\n        if (!adapter || !adapter.hasOwnProperty('getBaseURLsFromElement') || !adapter.hasOwnProperty('getRepresentationSortFunction')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function updateChildData(node, index, element) {\n        const baseUrls = adapter.getBaseURLsFromElement(element);\n\n        if (!node[index]) {\n            node[index] = new Node(baseUrls);\n        } else {\n            if (!objectUtils.areEqual(baseUrls, node[index].data.baseUrls)) {\n                node[index].data.baseUrls = baseUrls;\n                node[index].data.selectedIdx = DEFAULT_INDEX;\n            }\n        }\n    }\n\n    function getBaseURLCollectionsFromManifest(manifest) {\n        checkConfig();\n        const baseUrls = adapter.getBaseURLsFromElement(manifest);\n\n        if (!objectUtils.areEqual(baseUrls, root.data.baseUrls)) {\n            root.data.baseUrls = baseUrls;\n            root.data.selectedIdx = DEFAULT_INDEX;\n        }\n\n        if (manifest && manifest.Period_asArray) {\n            manifest.Period_asArray.forEach((p, pi) => {\n                updateChildData(root.children, pi, p);\n\n                if (p.AdaptationSet_asArray) {\n                    p.AdaptationSet_asArray.forEach((a, ai) => {\n                        updateChildData(root.children[pi].children, ai, a);\n\n                        if (a.Representation_asArray) {\n                            a.Representation_asArray.sort(\n                                adapter.getRepresentationSortFunction()\n                            ).forEach((r, ri) => {\n                                updateChildData(\n                                    root.children[pi].children[ai].children,\n                                    ri,\n                                    r\n                                );\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    function walk(callback, node) {\n        const target = node || root;\n\n        callback(target.data);\n\n        if (target.children) {\n            target.children.forEach(child => walk(callback, child));\n        }\n    }\n\n    function invalidateSelectedIndexes(serviceLocation) {\n        walk((data) => {\n            if (!isNaN(data.selectedIdx)) {\n                if (serviceLocation === data.baseUrls[data.selectedIdx].serviceLocation) {\n                    data.selectedIdx = DEFAULT_INDEX;\n                }\n            }\n        });\n    }\n\n    function update(manifest) {\n        getBaseURLCollectionsFromManifest(manifest);\n    }\n\n    function reset() {\n        root = new Node();\n    }\n\n    function getForPath(path) {\n        let target = root;\n        const nodes = [target.data];\n\n        if (path) {\n            path.forEach(p => {\n                target = target.children[p];\n\n                if (target) {\n                    nodes.push(target.data);\n                }\n            });\n        }\n\n        return nodes.filter(n => n.baseUrls.length);\n    }\n\n    instance = {\n        reset: reset,\n        update: update,\n        getForPath: getForPath,\n        invalidateSelectedIndexes: invalidateSelectedIndexes,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLTreeModel.__dashjs_factory_name = 'BaseURLTreeModel';\nexport default FactoryMaker.getClassFactory(BaseURLTreeModel);\n"]},"metadata":{},"sourceType":"script"}