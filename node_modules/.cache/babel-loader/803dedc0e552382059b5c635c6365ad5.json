{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _Debug = require('../../core/Debug');\n\nvar _Debug2 = _interopRequireDefault(_Debug);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nfunction MediaSourceController() {\n  var instance = void 0,\n      logger = void 0;\n  var context = this.context;\n\n  function setup() {\n    logger = (0, _Debug2.default)(context).getInstance().getLogger(instance);\n  }\n\n  function createMediaSource() {\n    var hasWebKit = ('WebKitMediaSource' in window);\n    var hasMediaSource = ('MediaSource' in window);\n\n    if (hasMediaSource) {\n      return new MediaSource();\n    } else if (hasWebKit) {\n      return new WebKitMediaSource();\n    }\n\n    return null;\n  }\n\n  function attachMediaSource(source, videoModel) {\n    var objectURL = window.URL.createObjectURL(source);\n    videoModel.setSource(objectURL);\n    return objectURL;\n  }\n\n  function detachMediaSource(videoModel) {\n    videoModel.setSource(null);\n  }\n\n  function setDuration(source, value) {\n    if (!source || source.readyState !== 'open') return;\n    if (value === null && isNaN(value)) return;\n    if (source.duration === value) return;\n\n    if (!isBufferUpdating(source)) {\n      logger.info('Set MediaSource duration:' + value);\n      source.duration = value;\n    } else {\n      setTimeout(setDuration.bind(null, source, value), 50);\n    }\n  }\n\n  function setSeekable(source, start, end) {\n    if (source && typeof source.setLiveSeekableRange === 'function' && typeof source.clearLiveSeekableRange === 'function' && source.readyState === 'open' && start >= 0 && start < end) {\n      source.clearLiveSeekableRange();\n      source.setLiveSeekableRange(start, end);\n    }\n  }\n\n  function signalEndOfStream(source) {\n    if (!source || source.readyState !== 'open') {\n      return;\n    }\n\n    var buffers = source.sourceBuffers;\n\n    for (var i = 0; i < buffers.length; i++) {\n      if (buffers[i].updating) {\n        return;\n      }\n\n      if (buffers[i].buffered.length === 0) {\n        return;\n      }\n    }\n\n    logger.info('call to mediaSource endOfStream');\n    source.endOfStream();\n  }\n\n  function isBufferUpdating(source) {\n    var buffers = source.sourceBuffers;\n\n    for (var i = 0; i < buffers.length; i++) {\n      if (buffers[i].updating) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  instance = {\n    createMediaSource: createMediaSource,\n    attachMediaSource: attachMediaSource,\n    detachMediaSource: detachMediaSource,\n    setDuration: setDuration,\n    setSeekable: setSeekable,\n    signalEndOfStream: signalEndOfStream\n  };\n  setup();\n  return instance;\n}\n\nMediaSourceController.__dashjs_factory_name = 'MediaSourceController';\nexports.default = _FactoryMaker2.default.getSingletonFactory(MediaSourceController);","map":{"version":3,"sources":["../../../../../src/streaming/controllers/MediaSourceController.js"],"names":["instance","logger","context","hasWebKit","hasMediaSource","objectURL","window","videoModel","source","value","isNaN","isBufferUpdating","setTimeout","setDuration","start","buffers","i","createMediaSource","attachMediaSource","detachMediaSource","setSeekable","signalEndOfStream","setup","MediaSourceController","FactoryMaker"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nfunction MediaSourceController() {\n\n    let instance,\n        logger;\n\n    const context = this.context;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function createMediaSource() {\n\n        let hasWebKit = ('WebKitMediaSource' in window);\n        let hasMediaSource = ('MediaSource' in window);\n\n        if (hasMediaSource) {\n            return new MediaSource();\n        } else if (hasWebKit) {\n            return new WebKitMediaSource();\n        }\n\n        return null;\n    }\n\n    function attachMediaSource(source, videoModel) {\n\n        let objectURL = window.URL.createObjectURL(source);\n\n        videoModel.setSource(objectURL);\n\n        return objectURL;\n    }\n\n    function detachMediaSource(videoModel) {\n        videoModel.setSource(null);\n    }\n\n    function setDuration(source, value) {\n        if (!source || source.readyState !== 'open') return;\n        if (value === null && isNaN(value)) return;\n        if (source.duration === value) return;\n\n        if (!isBufferUpdating(source)) {\n            logger.info('Set MediaSource duration:' + value);\n            source.duration = value;\n        } else {\n            setTimeout(setDuration.bind(null, source, value), 50);\n        }\n    }\n\n    function setSeekable(source, start, end) {\n        if (source && typeof source.setLiveSeekableRange === 'function' && typeof source.clearLiveSeekableRange === 'function' &&\n                source.readyState === 'open' && start >= 0 && start < end) {\n            source.clearLiveSeekableRange();\n            source.setLiveSeekableRange(start, end);\n        }\n    }\n\n    function signalEndOfStream(source) {\n        if (!source || source.readyState !== 'open') {\n            return;\n        }\n\n        let buffers = source.sourceBuffers;\n\n        for (let i = 0; i < buffers.length; i++) {\n            if (buffers[i].updating) {\n                return;\n            }\n            if (buffers[i].buffered.length === 0) {\n                return;\n            }\n        }\n        logger.info('call to mediaSource endOfStream');\n        source.endOfStream();\n    }\n\n    function isBufferUpdating(source) {\n        let buffers = source.sourceBuffers;\n        for (let i = 0; i < buffers.length; i++) {\n            if (buffers[i].updating) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    instance = {\n        createMediaSource: createMediaSource,\n        attachMediaSource: attachMediaSource,\n        detachMediaSource: detachMediaSource,\n        setDuration: setDuration,\n        setSeekable: setSeekable,\n        signalEndOfStream: signalEndOfStream\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaSourceController.__dashjs_factory_name = 'MediaSourceController';\nexport default FactoryMaker.getSingletonFactory(MediaSourceController);\n"]},"metadata":{},"sourceType":"script"}