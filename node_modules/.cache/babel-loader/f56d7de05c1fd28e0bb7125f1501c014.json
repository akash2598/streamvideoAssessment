{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nexports.checkParameterType = checkParameterType;\nexports.checkInteger = checkInteger;\nexports.checkRange = checkRange;\nexports.checkIsVideoOrAudioType = checkIsVideoOrAudioType;\n\nvar _Constants = require('../constants/Constants');\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction checkParameterType(parameter, type) {\n  if ((typeof parameter === 'undefined' ? 'undefined' : _typeof(parameter)) !== type) {\n    throw _Constants2.default.BAD_ARGUMENT_ERROR;\n  }\n}\n\nfunction checkInteger(parameter) {\n  var isInt = parameter !== null && !isNaN(parameter) && parameter % 1 === 0;\n\n  if (!isInt) {\n    throw _Constants2.default.BAD_ARGUMENT_ERROR + ' : argument is not an integer';\n  }\n}\n\nfunction checkRange(parameter, min, max) {\n  if (parameter < min || parameter > max) {\n    throw _Constants2.default.BAD_ARGUMENT_ERROR + ' : argument out of range';\n  }\n}\n\nfunction checkIsVideoOrAudioType(type) {\n  if (typeof type !== 'string' || type !== _Constants2.default.AUDIO && type !== _Constants2.default.VIDEO) {\n    throw _Constants2.default.BAD_ARGUMENT_ERROR;\n  }\n}","map":{"version":3,"sources":["../../../../../src/streaming/utils/SupervisorTools.js"],"names":["checkParameterType","Constants","checkInteger","isInt","parameter","isNaN","checkRange","checkIsVideoOrAudioType","type"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgCgBA,kB,GAAAA,kB;QAMAE,Y,GAAAA,Y;QAQAI,U,GAAAA,U;QAMAC,uB,GAAAA,uB;;AAtBhB,IAAA,UAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;;;;;;;AAEO;;AAAA,SAAA,kBAAA,CAAA,SAAA,EAAA,IAAA,EAA6C;AAChD,MAAI,CAAA,OAAA,SAAA,KAAA,WAAA,GAAA,WAAA,GAAA,OAAA,CAAA,SAAA,CAAA,MAAJ,IAAA,EAA+B;AAC3B,UAAMN,WAAAA,CAAAA,OAAAA,CAAN,kBAAA;AAEP;AAEM;;AAAA,SAAA,YAAA,CAAA,SAAA,EAAiC;AACpC,MAAME,KAAAA,GAAQC,SAAAA,KAAAA,IAAAA,IAAsB,CAACC,KAAAA,CAAvBD,SAAuBC,CAAvBD,IAA4CA,SAAAA,GAAAA,CAAAA,KAA1D,CAAA;;AAEA,MAAI,CAAJ,KAAA,EAAY;AACR,UAAMH,WAAAA,CAAAA,OAAAA,CAAAA,kBAAAA,GAAN,+BAAA;AAEP;AAEM;;AAAA,SAAA,UAAA,CAAA,SAAA,EAAA,GAAA,EAAA,GAAA,EAAyC;AAC5C,MAAIG,SAAAA,GAAAA,GAAAA,IAAmBA,SAAAA,GAAvB,GAAA,EAAwC;AACpC,UAAMH,WAAAA,CAAAA,OAAAA,CAAAA,kBAAAA,GAAN,0BAAA;AAEP;AAEM;;AAAA,SAAA,uBAAA,CAAA,IAAA,EAAuC;AAC1C,MAAI,OAAA,IAAA,KAAA,QAAA,IAA6BO,IAAAA,KAASP,WAAAA,CAAAA,OAAAA,CAATO,KAAAA,IAA4BA,IAAAA,KAASP,WAAAA,CAAAA,OAAAA,CAAtE,KAAA,EAAwF;AACpF,UAAMA,WAAAA,CAAAA,OAAAA,CAAN,kBAAA;AAEP;AAAA","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\n\nexport function checkParameterType(parameter, type) {\n    if (typeof parameter !== type) {\n        throw Constants.BAD_ARGUMENT_ERROR;\n    }\n}\n\nexport function checkInteger(parameter) {\n    const isInt = parameter !== null && !isNaN(parameter) && (parameter % 1 === 0);\n\n    if (!isInt) {\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument is not an integer';\n    }\n}\n\nexport function checkRange(parameter, min, max) {\n    if (parameter < min || parameter > max) {\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument out of range';\n    }\n}\n\nexport function checkIsVideoOrAudioType(type) {\n    if (typeof type !== 'string' || (type !== Constants.AUDIO && type !== Constants.VIDEO)) {\n        throw Constants.BAD_ARGUMENT_ERROR;\n    }\n}"]},"metadata":{},"sourceType":"script"}