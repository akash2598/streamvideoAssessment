{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction EmbeddedTextHtmlRender() {\n  var captionId = 0;\n  var instance = void 0;\n  /* HTML Rendering functions */\n\n  function checkIndent(chars) {\n    var line = '';\n\n    for (var c = 0; c < chars.length; ++c) {\n      var uc = chars[c];\n      line += uc.uchar;\n    }\n\n    var l = line.length;\n    var ll = line.replace(/^\\s+/, '').length;\n    return l - ll;\n  }\n\n  function getRegionProperties(region) {\n    return 'left: ' + region.x * 3.125 + '%; top: ' + region.y1 * 6.66 + '%; width: ' + (100 - region.x * 3.125) + '%; height: ' + Math.max(region.y2 - 1 - region.y1, 1) * 6.66 + '%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;';\n  }\n\n  function createRGB(color) {\n    if (color === 'red') {\n      return 'rgb(255, 0, 0)';\n    } else if (color === 'green') {\n      return 'rgb(0, 255, 0)';\n    } else if (color === 'blue') {\n      return 'rgb(0, 0, 255)';\n    } else if (color === 'cyan') {\n      return 'rgb(0, 255, 255)';\n    } else if (color === 'magenta') {\n      return 'rgb(255, 0, 255)';\n    } else if (color === 'yellow') {\n      return 'rgb(255, 255, 0)';\n    } else if (color === 'white') {\n      return 'rgb(255, 255, 255)';\n    } else if (color === 'black') {\n      return 'rgb(0, 0, 0)';\n    }\n\n    return color;\n  }\n\n  function getStyle(videoElement, style) {\n    var fontSize = videoElement.videoHeight / 15.0;\n\n    if (style) {\n      return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; color: ' + (style.foreground ? createRGB(style.foreground) : 'rgb(255, 255, 255)') + '; font-style: ' + (style.italics ? 'italic' : 'normal') + '; text-decoration: ' + (style.underline ? 'underline' : 'none') + '; white-space: pre; background-color: ' + (style.background ? createRGB(style.background) : 'transparent') + ';';\n    } else {\n      return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;';\n    }\n  }\n\n  function ltrim(s) {\n    return s.replace(/^\\s+/g, '');\n  }\n\n  function rtrim(s) {\n    return s.replace(/\\s+$/g, '');\n  }\n\n  function createHTMLCaptionsFromScreen(videoElement, startTime, endTime, captionScreen) {\n    var currRegion = null;\n    var existingRegion = null;\n    var lastRowHasText = false;\n    var lastRowIndentL = -1;\n    var currP = {\n      start: startTime,\n      end: endTime,\n      spans: []\n    };\n    var currentStyle = 'style_cea608_white_black';\n    var seenRegions = {};\n    var styleStates = {};\n    var regions = [];\n    var r = void 0,\n        s = void 0;\n\n    for (r = 0; r < 15; ++r) {\n      var row = captionScreen.rows[r];\n      var line = '';\n      var prevPenState = null;\n\n      if (false === row.isEmpty()) {\n        /* Row is not empty */\n\n        /* Get indentation of this row */\n        var rowIndent = checkIndent(row.chars);\n        /* Create a new region is there is none */\n\n        if (currRegion === null) {\n          currRegion = {\n            x: rowIndent,\n            y1: r,\n            y2: r + 1,\n            p: []\n          };\n        }\n        /* Check if indentation has changed and we had text of last row */\n\n\n        if (rowIndent !== lastRowIndentL && lastRowHasText) {\n          currRegion.p.push(currP);\n          currP = {\n            start: startTime,\n            end: endTime,\n            spans: []\n          };\n          currRegion.y2 = r;\n          currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n\n          if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n            regions.push(currRegion);\n            seenRegions[currRegion.name] = currRegion;\n          } else {\n            existingRegion = seenRegions[currRegion.name];\n            existingRegion.p.contat(currRegion.p);\n          }\n\n          currRegion = {\n            x: rowIndent,\n            y1: r,\n            y2: r + 1,\n            p: []\n          };\n        }\n\n        for (var c = 0; c < row.chars.length; ++c) {\n          var uc = row.chars[c];\n          var currPenState = uc.penState;\n\n          if (prevPenState === null || !currPenState.equals(prevPenState)) {\n            if (line.trim().length > 0) {\n              currP.spans.push({\n                name: currentStyle,\n                line: line,\n                row: r\n              });\n              line = '';\n            }\n\n            var currPenStateString = 'style_cea608_' + currPenState.foreground + '_' + currPenState.background;\n\n            if (currPenState.underline) {\n              currPenStateString += '_underline';\n            }\n\n            if (currPenState.italics) {\n              currPenStateString += '_italics';\n            }\n\n            if (!styleStates.hasOwnProperty(currPenStateString)) {\n              styleStates[currPenStateString] = JSON.parse(JSON.stringify(currPenState));\n            }\n\n            prevPenState = currPenState;\n            currentStyle = currPenStateString;\n          }\n\n          line += uc.uchar;\n        }\n\n        if (line.trim().length > 0) {\n          currP.spans.push({\n            name: currentStyle,\n            line: line,\n            row: r\n          });\n        }\n\n        lastRowHasText = true;\n        lastRowIndentL = rowIndent;\n      } else {\n        /* Row is empty */\n        lastRowHasText = false;\n        lastRowIndentL = -1;\n\n        if (currRegion) {\n          currRegion.p.push(currP);\n          currP = {\n            start: startTime,\n            end: endTime,\n            spans: []\n          };\n          currRegion.y2 = r;\n          currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n\n          if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n            regions.push(currRegion);\n            seenRegions[currRegion.name] = currRegion;\n          } else {\n            existingRegion = seenRegions[currRegion.name];\n            existingRegion.p.contat(currRegion.p);\n          }\n\n          currRegion = null;\n        }\n      }\n    }\n\n    if (currRegion) {\n      currRegion.p.push(currP);\n      currRegion.y2 = r + 1;\n      currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n\n      if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n        regions.push(currRegion);\n        seenRegions[currRegion.name] = currRegion;\n      } else {\n        existingRegion = seenRegions[currRegion.name];\n        existingRegion.p.contat(currRegion.p);\n      }\n\n      currRegion = null;\n    }\n\n    var captionsArray = [];\n    /* Loop thru regions */\n\n    for (r = 0; r < regions.length; ++r) {\n      var region = regions[r];\n      var cueID = 'sub_cea608_' + captionId++;\n      var finalDiv = document.createElement('div');\n      finalDiv.id = cueID;\n      var cueRegionProperties = getRegionProperties(region);\n      finalDiv.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\n      var bodyDiv = document.createElement('div');\n      bodyDiv.className = 'paragraph bodyStyle';\n      bodyDiv.style.cssText = getStyle(videoElement);\n      var cueUniWrapper = document.createElement('div');\n      cueUniWrapper.className = 'cueUniWrapper';\n      cueUniWrapper.style.cssText = 'unicode-bidi: normal; direction: ltr;';\n\n      for (var p = 0; p < region.p.length; ++p) {\n        var ptag = region.p[p];\n        var lastSpanRow = 0;\n\n        for (s = 0; s < ptag.spans.length; ++s) {\n          var span = ptag.spans[s];\n\n          if (span.line.length > 0) {\n            if (s !== 0 && lastSpanRow != span.row) {\n              var brElement = document.createElement('br');\n              brElement.className = 'lineBreak';\n              cueUniWrapper.appendChild(brElement);\n            }\n\n            var sameRow = false;\n\n            if (lastSpanRow === span.row) {\n              sameRow = true;\n            }\n\n            lastSpanRow = span.row;\n            var spanStyle = styleStates[span.name];\n            var spanElement = document.createElement('span');\n            spanElement.className = 'spanPadding ' + span.name + ' customSpanColor';\n            spanElement.style.cssText = getStyle(videoElement, spanStyle);\n            /* If this is not the first span, and it's on the same\n            * row as the last one */\n\n            if (s !== 0 && sameRow) {\n              /* and it's the last span on this row */\n              if (s === ptag.spans.length - 1) {\n                /* trim only the right side */\n                spanElement.textContent = rtrim(span.line);\n              } else {\n                /* don't trim at all */\n                spanElement.textContent = span.line;\n              }\n            } else {\n              /* if there is more than 1 span and this isn't the last span */\n              if (ptag.spans.length > 1 && s < ptag.spans.length - 1) {\n                /* Check if next text is on same row */\n                if (span.row === ptag.spans[s + 1].row) {\n                  /* Next element on same row, trim start */\n                  spanElement.textContent = ltrim(span.line);\n                } else {\n                  /* Different rows, trim both */\n                  spanElement.textContent = span.line.trim();\n                }\n              } else {\n                spanElement.textContent = span.line.trim();\n              }\n            }\n\n            cueUniWrapper.appendChild(spanElement);\n          }\n        }\n      }\n\n      bodyDiv.appendChild(cueUniWrapper);\n      finalDiv.appendChild(bodyDiv);\n      var fontSize = {\n        'bodyStyle': ['%', 90]\n      };\n\n      for (var _s in styleStates) {\n        if (styleStates.hasOwnProperty(_s)) {\n          fontSize[_s] = ['%', 90];\n        }\n      }\n\n      captionsArray.push({\n        type: 'html',\n        start: startTime,\n        end: endTime,\n        cueHTMLElement: finalDiv,\n        cueID: cueID,\n        cellResolution: [32, 15],\n        isFromCEA608: true,\n        fontSize: fontSize,\n        lineHeight: {},\n        linePadding: {}\n      });\n    }\n\n    return captionsArray;\n  }\n\n  instance = {\n    createHTMLCaptionsFromScreen: createHTMLCaptionsFromScreen\n  };\n  return instance;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nEmbeddedTextHtmlRender.__dashjs_factory_name = 'EmbeddedTextHtmlRender';\nexports.default = _FactoryMaker2.default.getSingletonFactory(EmbeddedTextHtmlRender);","map":{"version":3,"sources":["../../../../../src/streaming/text/EmbeddedTextHtmlRender.js"],"names":["captionId","instance","line","c","chars","uc","l","ll","region","Math","color","fontSize","videoElement","style","createRGB","s","currRegion","existingRegion","lastRowHasText","lastRowIndentL","currP","start","end","spans","currentStyle","seenRegions","styleStates","regions","r","row","captionScreen","prevPenState","rowIndent","checkIndent","x","y1","y2","p","currPenState","name","currPenStateString","JSON","captionsArray","cueID","finalDiv","document","cueRegionProperties","getRegionProperties","bodyDiv","getStyle","cueUniWrapper","ptag","lastSpanRow","span","brElement","sameRow","spanStyle","spanElement","rtrim","ltrim","type","cueHTMLElement","cellResolution","isFromCEA608","lineHeight","linePadding","createHTMLCaptionsFromScreen","EmbeddedTextHtmlRender","FactoryMaker"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction EmbeddedTextHtmlRender() {\n\n    let captionId = 0;\n    let instance;\n\n    /* HTML Rendering functions */\n    function checkIndent(chars) {\n        let line = '';\n\n        for (let c = 0; c < chars.length; ++c) {\n            const uc = chars[c];\n            line += uc.uchar;\n        }\n\n        const l = line.length;\n        const ll = line.replace(/^\\s+/,'').length;\n        return l - ll;\n    }\n\n    function getRegionProperties(region) {\n        return 'left: ' + (region.x * 3.125) + '%; top: ' + (region.y1 * 6.66) + '%; width: ' + (100 - (region.x * 3.125)) + '%; height: ' + (Math.max((region.y2 - 1) - region.y1, 1) * 6.66) + '%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;';\n    }\n\n    function createRGB(color) {\n        if (color === 'red') {\n            return 'rgb(255, 0, 0)';\n        } else if (color === 'green') {\n            return 'rgb(0, 255, 0)';\n        } else if (color === 'blue') {\n            return 'rgb(0, 0, 255)';\n        } else if (color === 'cyan') {\n            return 'rgb(0, 255, 255)';\n        } else if (color === 'magenta') {\n            return 'rgb(255, 0, 255)';\n        } else if (color === 'yellow') {\n            return 'rgb(255, 255, 0)';\n        } else if (color === 'white') {\n            return 'rgb(255, 255, 255)';\n        } else if (color === 'black') {\n            return 'rgb(0, 0, 0)';\n        }\n        return color;\n    }\n\n    function getStyle(videoElement, style) {\n        const fontSize = videoElement.videoHeight / 15.0;\n        if (style) {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; color: ' + ((style.foreground) ? createRGB(style.foreground) : 'rgb(255, 255, 255)') + '; font-style: ' + (style.italics ? 'italic' : 'normal') + '; text-decoration: ' + (style.underline ? 'underline' : 'none') + '; white-space: pre; background-color: ' + ((style.background) ? createRGB(style.background) : 'transparent') + ';';\n        } else {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;';\n        }\n    }\n\n    function ltrim(s) {\n        return s.replace(/^\\s+/g, '');\n    }\n\n    function rtrim(s) {\n        return s.replace(/\\s+$/g, '');\n    }\n\n    function createHTMLCaptionsFromScreen(videoElement, startTime, endTime, captionScreen) {\n        let currRegion = null;\n        let existingRegion = null;\n        let lastRowHasText = false;\n        let lastRowIndentL = -1;\n        let currP = {start: startTime, end: endTime, spans: []};\n        let currentStyle = 'style_cea608_white_black';\n        const seenRegions = {};\n        const styleStates = {};\n        const regions = [];\n        let r, s;\n\n        for (r = 0; r < 15; ++r) {\n            const row = captionScreen.rows[r];\n            let line = '';\n            let prevPenState = null;\n\n            if (false === row.isEmpty()) {\n                /* Row is not empty */\n\n                /* Get indentation of this row */\n                const rowIndent = checkIndent(row.chars);\n\n                /* Create a new region is there is none */\n                if (currRegion === null) {\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                /* Check if indentation has changed and we had text of last row */\n                if ((rowIndent !== lastRowIndentL) && lastRowHasText) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                for (let c = 0; c < row.chars.length; ++c) {\n                    const uc = row.chars[c];\n                    const currPenState = uc.penState;\n                    if ((prevPenState === null) || (!currPenState.equals(prevPenState))) {\n                        if (line.trim().length > 0) {\n                            currP.spans.push({ name: currentStyle, line: line, row: r });\n                            line = '';\n                        }\n\n                        let currPenStateString = 'style_cea608_' + currPenState.foreground + '_' + currPenState.background;\n                        if (currPenState.underline) {\n                            currPenStateString += '_underline';\n                        }\n                        if (currPenState.italics) {\n                            currPenStateString += '_italics';\n                        }\n\n                        if (!styleStates.hasOwnProperty(currPenStateString)) {\n                            styleStates[currPenStateString] = JSON.parse(JSON.stringify(currPenState));\n                        }\n\n                        prevPenState = currPenState;\n\n                        currentStyle = currPenStateString;\n                    }\n\n                    line += uc.uchar;\n                }\n\n                if (line.trim().length > 0) {\n                    currP.spans.push({ name: currentStyle, line: line, row: r });\n                }\n\n                lastRowHasText = true;\n                lastRowIndentL = rowIndent;\n            } else {\n                /* Row is empty */\n                lastRowHasText = false;\n                lastRowIndentL = -1;\n\n                if (currRegion) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = null;\n                }\n\n            }\n        }\n\n        if (currRegion) {\n            currRegion.p.push(currP);\n            currRegion.y2 = r + 1;\n            currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n            if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                regions.push(currRegion);\n                seenRegions[currRegion.name] = currRegion;\n            } else {\n                existingRegion = seenRegions[currRegion.name];\n                existingRegion.p.contat(currRegion.p);\n            }\n\n            currRegion = null;\n        }\n\n        const captionsArray = [];\n\n        /* Loop thru regions */\n        for (r = 0; r < regions.length; ++r) {\n            const region = regions[r];\n\n            const cueID = 'sub_cea608_' + (captionId++);\n            const finalDiv = document.createElement('div');\n            finalDiv.id = cueID;\n            const cueRegionProperties = getRegionProperties(region);\n            finalDiv.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\n\n            const bodyDiv = document.createElement('div');\n            bodyDiv.className = 'paragraph bodyStyle';\n            bodyDiv.style.cssText = getStyle(videoElement);\n\n            const cueUniWrapper = document.createElement('div');\n            cueUniWrapper.className = 'cueUniWrapper';\n            cueUniWrapper.style.cssText = 'unicode-bidi: normal; direction: ltr;';\n\n            for (let p = 0; p < region.p.length; ++p) {\n                const ptag = region.p[p];\n                let lastSpanRow = 0;\n                for (s = 0; s < ptag.spans.length; ++s) {\n                    let span = ptag.spans[s];\n                    if (span.line.length > 0) {\n                        if ((s !== 0) && lastSpanRow != span.row) {\n                            const brElement = document.createElement('br');\n                            brElement.className = 'lineBreak';\n                            cueUniWrapper.appendChild(brElement);\n                        }\n                        let sameRow = false;\n                        if (lastSpanRow === span.row) {\n                            sameRow = true;\n                        }\n                        lastSpanRow = span.row;\n                        const spanStyle = styleStates[span.name];\n                        const spanElement = document.createElement('span');\n                        spanElement.className = 'spanPadding ' + span.name + ' customSpanColor';\n                        spanElement.style.cssText = getStyle(videoElement, spanStyle);\n                        /* If this is not the first span, and it's on the same\n                         * row as the last one */\n                        if ((s !== 0) && sameRow) {\n                            /* and it's the last span on this row */\n                            if (s === ptag.spans.length - 1) {\n                                /* trim only the right side */\n                                spanElement.textContent = rtrim(span.line);\n                            } else {\n                                /* don't trim at all */\n                                spanElement.textContent = span.line;\n                            }\n                        } else {\n                            /* if there is more than 1 span and this isn't the last span */\n                            if (ptag.spans.length > 1 && s < (ptag.spans.length - 1)) {\n                                /* Check if next text is on same row */\n                                if (span.row === ptag.spans[s + 1].row) {\n                                    /* Next element on same row, trim start */\n                                    spanElement.textContent = ltrim(span.line);\n                                } else {\n                                    /* Different rows, trim both */\n                                    spanElement.textContent = span.line.trim();\n                                }\n                            } else {\n                                spanElement.textContent = span.line.trim();\n                            }\n                        }\n                        cueUniWrapper.appendChild(spanElement);\n                    }\n                }\n            }\n\n            bodyDiv.appendChild(cueUniWrapper);\n            finalDiv.appendChild(bodyDiv);\n\n            const fontSize = { 'bodyStyle': ['%', 90] };\n            for (const s in styleStates) {\n                if (styleStates.hasOwnProperty(s)) {\n                    fontSize[s] = ['%', 90];\n                }\n            }\n\n            captionsArray.push({ type: 'html',\n                                start: startTime,\n                                end: endTime,\n                                cueHTMLElement: finalDiv,\n                                cueID: cueID,\n                                cellResolution: [32, 15],\n                                isFromCEA608: true,\n                                fontSize: fontSize,\n                                lineHeight: {},\n                                linePadding: {}\n                               });\n        }\n        return captionsArray;\n    }\n\n    instance = {\n        createHTMLCaptionsFromScreen: createHTMLCaptionsFromScreen\n    };\n    return instance;\n}\n\nEmbeddedTextHtmlRender.__dashjs_factory_name = 'EmbeddedTextHtmlRender';\nexport default FactoryMaker.getSingletonFactory(EmbeddedTextHtmlRender);\n"]},"metadata":{},"sourceType":"script"}