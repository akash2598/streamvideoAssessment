{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ObjectIron(mappers) {\n  function mergeValues(parentItem, childItem) {\n    for (var name in parentItem) {\n      if (!childItem.hasOwnProperty(name)) {\n        childItem[name] = parentItem[name];\n      }\n    }\n  }\n\n  function mapProperties(properties, parent, child) {\n    for (var i = 0, len = properties.length; i < len; ++i) {\n      var property = properties[i];\n\n      if (parent[property.name]) {\n        if (child[property.name]) {\n          // check to see if we should merge\n          if (property.merge) {\n            var parentValue = parent[property.name];\n            var childValue = child[property.name]; // complex objects; merge properties\n\n            if ((typeof parentValue === 'undefined' ? 'undefined' : _typeof(parentValue)) === 'object' && (typeof childValue === 'undefined' ? 'undefined' : _typeof(childValue)) === 'object') {\n              mergeValues(parentValue, childValue);\n            } // simple objects; merge them together\n            else {\n                child[property.name] = parentValue + childValue;\n              }\n          }\n        } else {\n          // just add the property\n          child[property.name] = parent[property.name];\n        }\n      }\n    }\n  }\n\n  function mapItem(item, node) {\n    for (var i = 0, len = item.children.length; i < len; ++i) {\n      var childItem = item.children[i];\n      var array = node[childItem.name + '_asArray'];\n\n      if (array) {\n        for (var v = 0, len2 = array.length; v < len2; ++v) {\n          var childNode = array[v];\n          mapProperties(item.properties, node, childNode);\n          mapItem(childItem, childNode);\n        }\n      }\n    }\n  }\n\n  function run(source) {\n    if (source === null || (typeof source === 'undefined' ? 'undefined' : _typeof(source)) !== 'object') {\n      return source;\n    }\n\n    if (source.Period_asArray && 'period' in mappers) {\n      var periodMapper = mappers.period;\n      var periods = source.Period_asArray;\n\n      for (var i = 0, len = periods.length; i < len; ++i) {\n        var period = periods[i];\n        mapItem(periodMapper, period);\n\n        if ('adaptationset' in mappers) {\n          var adaptationSets = period.AdaptationSet_asArray;\n\n          if (adaptationSets) {\n            var adaptationSetMapper = mappers.adaptationset;\n\n            for (var _i = 0, _len = adaptationSets.length; _i < _len; ++_i) {\n              mapItem(adaptationSetMapper, adaptationSets[_i]);\n            }\n          }\n        }\n      }\n    }\n\n    return source;\n  }\n\n  return {\n    run: run\n  };\n}\n\nObjectIron.__dashjs_factory_name = 'ObjectIron';\n\nvar factory = _FactoryMaker2.default.getClassFactory(ObjectIron);\n\nexports.default = factory;","map":{"version":3,"sources":["../../../../../src/dash/parser/objectiron.js"],"names":["childItem","parentItem","i","len","properties","property","parent","child","parentValue","childValue","mergeValues","item","array","node","v","len2","childNode","mapProperties","mapItem","source","periodMapper","mappers","periods","period","adaptationSets","adaptationSetMapper","run","ObjectIron","factory","FactoryMaker"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction ObjectIron(mappers) {\n\n    function mergeValues(parentItem, childItem) {\n        for (let name in parentItem) {\n            if (!childItem.hasOwnProperty(name)) {\n                childItem[name] = parentItem[name];\n            }\n        }\n    }\n\n    function mapProperties(properties, parent, child) {\n        for (let i = 0, len = properties.length; i < len; ++i) {\n            const property = properties[i];\n\n            if (parent[property.name]) {\n                if (child[property.name]) {\n                    // check to see if we should merge\n                    if (property.merge) {\n                        const parentValue = parent[property.name];\n                        const childValue = child[property.name];\n\n                        // complex objects; merge properties\n                        if (typeof parentValue === 'object' && typeof childValue === 'object') {\n                            mergeValues(parentValue, childValue);\n                        }\n                        // simple objects; merge them together\n                        else {\n                            child[property.name] = parentValue + childValue;\n                        }\n                    }\n                } else {\n                    // just add the property\n                    child[property.name] = parent[property.name];\n                }\n            }\n        }\n    }\n\n    function mapItem(item, node) {\n        for (let i = 0, len = item.children.length; i < len; ++i) {\n            const childItem = item.children[i];\n\n            const array = node[childItem.name + '_asArray'];\n            if (array) {\n                for (let v = 0, len2 = array.length; v < len2; ++v) {\n                    const childNode = array[v];\n                    mapProperties(item.properties, node, childNode);\n                    mapItem(childItem, childNode);\n                }\n            }\n        }\n    }\n\n    function run(source) {\n\n        if (source === null || typeof source !== 'object') {\n            return source;\n        }\n\n        if (source.Period_asArray && 'period' in mappers) {\n            const periodMapper = mappers.period;\n            const periods = source.Period_asArray;\n            for (let i = 0, len = periods.length; i < len; ++i) {\n                const period = periods[i];\n                mapItem(periodMapper, period);\n\n                if ('adaptationset' in mappers) {\n                    const adaptationSets = period.AdaptationSet_asArray;\n                    if (adaptationSets) {\n                        const adaptationSetMapper = mappers.adaptationset;\n                        for (let i = 0, len = adaptationSets.length; i < len; ++i) {\n                            mapItem(adaptationSetMapper, adaptationSets[i]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return source;\n    }\n\n    return {\n        run: run\n    };\n}\n\n\nObjectIron.__dashjs_factory_name = 'ObjectIron';\nconst factory = FactoryMaker.getClassFactory(ObjectIron);\nexport default factory;\n"]},"metadata":{},"sourceType":"script"}