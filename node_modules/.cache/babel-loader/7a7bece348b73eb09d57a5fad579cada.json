{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* @class\n* @ignore\n*/\n\n\nvar IsoBox = function () {\n  function IsoBox(boxData) {\n    _classCallCheck(this, IsoBox);\n\n    this.offset = boxData._offset;\n    this.type = boxData.type;\n    this.size = boxData.size;\n    this.boxes = [];\n\n    if (boxData.boxes) {\n      for (var i = 0; i < boxData.boxes.length; i++) {\n        this.boxes.push(new IsoBox(boxData.boxes[i]));\n      }\n    }\n\n    this.isComplete = true;\n\n    switch (boxData.type) {\n      case 'sidx':\n        this.timescale = boxData.timescale;\n        this.earliest_presentation_time = boxData.earliest_presentation_time;\n        this.first_offset = boxData.first_offset;\n        this.references = boxData.references;\n\n        if (boxData.references) {\n          this.references = [];\n\n          for (var _i = 0; _i < boxData.references.length; _i++) {\n            var reference = {\n              reference_type: boxData.references[_i].reference_type,\n              referenced_size: boxData.references[_i].referenced_size,\n              subsegment_duration: boxData.references[_i].subsegment_duration\n            };\n            this.references.push(reference);\n          }\n        }\n\n        break;\n\n      case 'emsg':\n        this.id = boxData.id;\n        this.version = boxData.version === 1 ? 1 : 0;\n        this.value = boxData.value;\n        this.timescale = boxData.timescale;\n        this.scheme_id_uri = boxData.scheme_id_uri;\n        this.presentation_time_delta = boxData.version === 1 ? boxData.presentation_time : boxData.presentation_time_delta;\n        this.event_duration = boxData.event_duration;\n        this.message_data = boxData.message_data;\n        break;\n\n      case 'mdhd':\n        this.timescale = boxData.timescale;\n        break;\n\n      case 'mfhd':\n        this.sequence_number = boxData.sequence_number;\n        break;\n\n      case 'subs':\n        this.entry_count = boxData.entry_count;\n        this.entries = boxData.entries;\n        break;\n\n      case 'tfhd':\n        this.base_data_offset = boxData.base_data_offset;\n        this.sample_description_index = boxData.sample_description_index;\n        this.default_sample_duration = boxData.default_sample_duration;\n        this.default_sample_size = boxData.default_sample_size;\n        this.default_sample_flags = boxData.default_sample_flags;\n        this.flags = boxData.flags;\n        break;\n\n      case 'tfdt':\n        this.version = boxData.version;\n        this.baseMediaDecodeTime = boxData.baseMediaDecodeTime;\n        this.flags = boxData.flags;\n        break;\n\n      case 'trun':\n        this.sample_count = boxData.sample_count;\n        this.first_sample_flags = boxData.first_sample_flags;\n        this.data_offset = boxData.data_offset;\n        this.flags = boxData.flags;\n        this.samples = boxData.samples;\n\n        if (boxData.samples) {\n          this.samples = [];\n\n          for (var _i2 = 0, ln = boxData.samples.length; _i2 < ln; _i2++) {\n            var sample = {\n              sample_size: boxData.samples[_i2].sample_size,\n              sample_duration: boxData.samples[_i2].sample_duration,\n              sample_composition_time_offset: boxData.samples[_i2].sample_composition_time_offset\n            };\n            this.samples.push(sample);\n          }\n        }\n\n        break;\n    }\n  }\n\n  _createClass(IsoBox, [{\n    key: 'getChildBox',\n    value: function getChildBox(type) {\n      for (var i = 0; i < this.boxes.length; i++) {\n        if (this.boxes[i].type === type) {\n          return this.boxes[i];\n        }\n      }\n    }\n  }, {\n    key: 'getChildBoxes',\n    value: function getChildBoxes(type) {\n      var boxes = [];\n\n      for (var i = 0; i < this.boxes.length; i++) {\n        if (this.boxes[i].type === type) {\n          boxes.push(this.boxes[i]);\n        }\n      }\n\n      return boxes;\n    }\n  }]);\n\n  return IsoBox;\n}();\n\nexports.default = IsoBox;","map":{"version":3,"sources":["../../../../../src/streaming/vo/IsoBox.js"],"names":["IsoBox","boxData","i","reference","reference_type","referenced_size","subsegment_duration","ln","sample","sample_size","sample_duration","sample_composition_time_offset","type","boxes"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass IsoBox {\n    constructor(boxData) {\n        this.offset = boxData._offset;\n        this.type = boxData.type;\n        this.size = boxData.size;\n        this.boxes = [];\n        if (boxData.boxes) {\n            for (let i = 0; i < boxData.boxes.length; i++) {\n                this.boxes.push(new IsoBox(boxData.boxes[i]));\n            }\n        }\n        this.isComplete = true;\n\n        switch (boxData.type) {\n            case 'sidx':\n                this.timescale = boxData.timescale;\n                this.earliest_presentation_time = boxData.earliest_presentation_time;\n                this.first_offset = boxData.first_offset;\n                this.references = boxData.references;\n                if (boxData.references) {\n                    this.references = [];\n                    for (let i = 0; i < boxData.references.length; i++) {\n                        let reference = {\n                            reference_type: boxData.references[i].reference_type,\n                            referenced_size: boxData.references[i].referenced_size,\n                            subsegment_duration: boxData.references[i].subsegment_duration\n                        };\n                        this.references.push(reference);\n                    }\n                }\n                break;\n            case 'emsg':\n                this.id = boxData.id;\n                this.version = boxData.version === 1 ? 1 : 0;\n                this.value = boxData.value;\n                this.timescale = boxData.timescale;\n                this.scheme_id_uri = boxData.scheme_id_uri;\n                this.presentation_time_delta = boxData.version === 1 ? boxData.presentation_time : boxData.presentation_time_delta;\n                this.event_duration = boxData.event_duration;\n                this.message_data = boxData.message_data;\n                break;\n            case 'mdhd':\n                this.timescale = boxData.timescale;\n                break;\n            case 'mfhd':\n                this.sequence_number = boxData.sequence_number;\n                break;\n            case 'subs':\n                this.entry_count = boxData.entry_count;\n                this.entries = boxData.entries;\n                break;\n            case 'tfhd':\n                this.base_data_offset = boxData.base_data_offset;\n                this.sample_description_index = boxData.sample_description_index;\n                this.default_sample_duration = boxData.default_sample_duration;\n                this.default_sample_size = boxData.default_sample_size;\n                this.default_sample_flags = boxData.default_sample_flags;\n                this.flags = boxData.flags;\n                break;\n            case 'tfdt':\n                this.version = boxData.version;\n                this.baseMediaDecodeTime = boxData.baseMediaDecodeTime;\n                this.flags = boxData.flags;\n                break;\n            case 'trun':\n                this.sample_count = boxData.sample_count;\n                this.first_sample_flags = boxData.first_sample_flags;\n                this.data_offset = boxData.data_offset;\n                this.flags = boxData.flags;\n                this.samples = boxData.samples;\n                if (boxData.samples) {\n                    this.samples = [];\n                    for (let i = 0, ln = boxData.samples.length; i < ln; i++) {\n                        let sample = {\n                            sample_size: boxData.samples[i].sample_size,\n                            sample_duration: boxData.samples[i].sample_duration,\n                            sample_composition_time_offset: boxData.samples[i].sample_composition_time_offset\n                        };\n                        this.samples.push(sample);\n                    }\n                }\n                break;\n        }\n\n    }\n\n    getChildBox(type) {\n        for (let i = 0; i < this.boxes.length; i++) {\n            if (this.boxes[i].type === type) {\n                return this.boxes[i];\n            }\n        }\n    }\n\n    getChildBoxes(type) {\n        let boxes = [];\n        for (let i = 0; i < this.boxes.length; i++) {\n            if (this.boxes[i].type === type) {\n                boxes.push(this.boxes[i]);\n            }\n        }\n        return boxes;\n    }\n\n}\n\nexport default IsoBox;\n"]},"metadata":{},"sourceType":"script"}