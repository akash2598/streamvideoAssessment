{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _DashJSError = require('./vo/DashJSError');\n\nvar _DashJSError2 = _interopRequireDefault(_DashJSError);\n\nvar _URLLoader = require('./net/URLLoader');\n\nvar _URLLoader2 = _interopRequireDefault(_URLLoader);\n\nvar _HTTPRequest = require('./vo/metrics/HTTPRequest');\n\nvar _TextRequest = require('./vo/TextRequest');\n\nvar _TextRequest2 = _interopRequireDefault(_TextRequest);\n\nvar _EventBus = require('../core/EventBus');\n\nvar _EventBus2 = _interopRequireDefault(_EventBus);\n\nvar _Events = require('../core/events/Events');\n\nvar _Events2 = _interopRequireDefault(_Events);\n\nvar _FactoryMaker = require('../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _Errors = require('../core/errors/Errors');\n\nvar _Errors2 = _interopRequireDefault(_Errors);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nfunction XlinkLoader(config) {\n  config = config || {};\n  var RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n  var context = this.context;\n  var eventBus = (0, _EventBus2.default)(context).getInstance();\n  var urlLoader = (0, _URLLoader2.default)(context).create({\n    errHandler: config.errHandler,\n    dashMetrics: config.dashMetrics,\n    mediaPlayerModel: config.mediaPlayerModel,\n    requestModifier: config.requestModifier,\n    useFetch: config.settings ? config.settings.get().streaming.lowLatencyEnabled : null,\n    errors: _Errors2.default\n  });\n  var instance = void 0;\n\n  function load(url, element, resolveObject) {\n    var report = function report(content, resolveToZero) {\n      element.resolved = true;\n      element.resolvedContent = content ? content : null;\n      eventBus.trigger(_Events2.default.XLINK_ELEMENT_LOADED, {\n        element: element,\n        resolveObject: resolveObject,\n        error: content || resolveToZero ? null : new _DashJSError2.default(_Errors2.default.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE, _Errors2.default.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE + url)\n      });\n    };\n\n    if (url === RESOLVE_TO_ZERO) {\n      report(null, true);\n    } else {\n      var request = new _TextRequest2.default(url, _HTTPRequest.HTTPRequest.XLINK_EXPANSION_TYPE);\n      urlLoader.load({\n        request: request,\n        success: function success(data) {\n          report(data);\n        },\n        error: function error() {\n          report(null);\n        }\n      });\n    }\n  }\n\n  function reset() {\n    if (urlLoader) {\n      urlLoader.abort();\n      urlLoader = null;\n    }\n  }\n\n  instance = {\n    load: load,\n    reset: reset\n  };\n  return instance;\n}\n\nXlinkLoader.__dashjs_factory_name = 'XlinkLoader';\nexports.default = _FactoryMaker2.default.getClassFactory(XlinkLoader);","map":{"version":3,"sources":["../../../../src/streaming/XlinkLoader.js"],"names":["config","RESOLVE_TO_ZERO","context","eventBus","urlLoader","errHandler","dashMetrics","mediaPlayerModel","requestModifier","useFetch","errors","Errors","instance","report","element","content","Events","resolveObject","error","DashJSError","url","request","TextRequest","HTTPRequest","success","load","reset","XlinkLoader","FactoryMaker"],"mappings":";;;;;;AA8BA,IAAA,YAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;;;;;;;AArCA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,SAAA,WAAA,CAAA,MAAA,EAA6B;AAEzBA,EAAAA,MAAAA,GAASA,MAAAA,IAATA,EAAAA;AACA,MAAMC,eAAAA,GAAN,oCAAA;AAEA,MAAMC,OAAAA,GAAW,KAAjB,OAAA;AACA,MAAMC,QAAAA,GAAW,CAAA,GAAA,UAAA,CAAA,OAAA,EAAA,OAAA,EAAjB,WAAiB,EAAjB;AAEA,MAAIC,SAAAA,GAAY,CAAA,GAAA,WAAA,CAAA,OAAA,EAAA,OAAA,EAAA,MAAA,CAA0B;AACtCC,IAAAA,UAAAA,EAAYL,MAAAA,CAD0B,UAAA;AAEtCM,IAAAA,WAAAA,EAAaN,MAAAA,CAFyB,WAAA;AAGtCO,IAAAA,gBAAAA,EAAkBP,MAAAA,CAHoB,gBAAA;AAItCQ,IAAAA,eAAAA,EAAiBR,MAAAA,CAJqB,eAAA;AAKtCS,IAAAA,QAAAA,EAAUT,MAAAA,CAAAA,QAAAA,GAAkBA,MAAAA,CAAAA,QAAAA,CAAAA,GAAAA,GAAAA,SAAAA,CAAlBA,iBAAAA,GAL4B,IAAA;AAMtCU,IAAAA,MAAAA,EAAQC,QAAAA,CANZ;AAA0C,GAA1B,CAAhB;AASA,MAAIC,QAAAA,GAAAA,KAAJ,CAAA;;AAEA,WAAA,IAAA,CAAA,GAAA,EAAA,OAAA,EAAA,aAAA,EAA2C;AACvC,QAAMC,MAAAA,GAAAA,SAAAA,MAAAA,CAAS,OAATA,EAAS,aAATA,EAA2C;AAC7CC,MAAAA,OAAAA,CAAAA,QAAAA,GAAAA,IAAAA;AACAA,MAAAA,OAAAA,CAAAA,eAAAA,GAA0BC,OAAAA,GAAAA,OAAAA,GAA1BD,IAAAA;AAEAX,MAAAA,QAAAA,CAAAA,OAAAA,CAAiBa,QAAAA,CAAAA,OAAAA,CAAjBb,oBAAAA,EAA8C;AAC1CW,QAAAA,OAAAA,EAD0C,OAAA;AAE1CG,QAAAA,aAAAA,EAF0C,aAAA;AAG1CC,QAAAA,KAAAA,EAAOH,OAAAA,IAAAA,aAAAA,GAAAA,IAAAA,GAEH,IAAII,aAAAA,CAAJ,OAAA,CACIR,QAAAA,CAAAA,OAAAA,CADJ,uCAAA,EAEIA,QAAAA,CAAAA,OAAAA,CAAAA,0CAAAA,GAPZR,GAKQ;AALsC,OAA9CA;AAJJ,KAAA;;AAgBA,QAAIiB,GAAAA,KAAJ,eAAA,EAA6B;AACzBP,MAAAA,MAAAA,CAAAA,IAAAA,EAAAA,IAAAA,CAAAA;AADJ,KAAA,MAEO;AACH,UAAMQ,OAAAA,GAAU,IAAIC,aAAAA,CAAJ,OAAA,CAAA,GAAA,EAAqBC,YAAAA,CAAAA,WAAAA,CAArC,oBAAgB,CAAhB;AAEAnB,MAAAA,SAAAA,CAAAA,IAAAA,CAAe;AACXiB,QAAAA,OAAAA,EADW,OAAA;AAEXG,QAAAA,OAAAA,EAAS,SAAA,OAAA,CAAA,IAAA,EAAgB;AACrBX,UAAAA,MAAAA,CAAAA,IAAAA,CAAAA;AAHO,SAAA;AAKXK,QAAAA,KAAAA,EAAO,SAAA,KAAA,GAAY;AACfL,UAAAA,MAAAA,CAAAA,IAAAA,CAAAA;AANRT;AAAe,OAAfA;AAUP;AAED;;AAAA,WAAA,KAAA,GAAiB;AACb,QAAA,SAAA,EAAe;AACXA,MAAAA,SAAAA,CAAAA,KAAAA;AACAA,MAAAA,SAAAA,GAAAA,IAAAA;AAEP;AAEDQ;;AAAAA,EAAAA,QAAAA,GAAW;AACPa,IAAAA,IAAAA,EADO,IAAA;AAEPC,IAAAA,KAAAA,EAFJd;AAAW,GAAXA;AAKA,SAAA,QAAA;AAGJe;;AAAAA,WAAAA,CAAAA,qBAAAA,GAAAA,aAAAA;kBACeC,cAAAA,CAAAA,OAAAA,CAAAA,eAAAA,CAAAA,WAAAA,C","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from './vo/DashJSError';\nimport URLLoader from './net/URLLoader';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport TextRequest from './vo/TextRequest';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Errors from '../core/errors/Errors';\n\nfunction XlinkLoader(config) {\n\n    config = config || {};\n    const RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\n    const context  = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let urlLoader = URLLoader(context).create({\n        errHandler: config.errHandler,\n        dashMetrics: config.dashMetrics,\n        mediaPlayerModel: config.mediaPlayerModel,\n        requestModifier: config.requestModifier,\n        useFetch: config.settings ? config.settings.get().streaming.lowLatencyEnabled : null,\n        errors: Errors\n    });\n\n    let instance;\n\n    function load(url, element, resolveObject) {\n        const report = function (content, resolveToZero) {\n            element.resolved = true;\n            element.resolvedContent = content ? content : null;\n\n            eventBus.trigger(Events.XLINK_ELEMENT_LOADED, {\n                element: element,\n                resolveObject: resolveObject,\n                error: content || resolveToZero ?\n                    null :\n                    new DashJSError(\n                        Errors.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE,\n                        Errors.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE + url\n                    )\n            });\n        };\n\n        if (url === RESOLVE_TO_ZERO) {\n            report(null, true);\n        } else {\n            const request = new TextRequest(url, HTTPRequest.XLINK_EXPANSION_TYPE);\n\n            urlLoader.load({\n                request: request,\n                success: function (data) {\n                    report(data);\n                },\n                error: function () {\n                    report(null);\n                }\n            });\n        }\n    }\n\n    function reset() {\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader = null;\n        }\n    }\n\n    instance = {\n        load: load,\n        reset: reset\n    };\n\n    return instance;\n}\n\nXlinkLoader.__dashjs_factory_name = 'XlinkLoader';\nexport default FactoryMaker.getClassFactory(XlinkLoader);\n"]},"metadata":{},"sourceType":"script"}