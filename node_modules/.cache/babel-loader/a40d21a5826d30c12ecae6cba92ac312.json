{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* Dash constants declaration\n* @class\n* @ignore\n*/\n\n\nvar DashConstants = function () {\n  _createClass(DashConstants, [{\n    key: 'init',\n    value: function init() {\n      this.BASE_URL = 'BaseURL';\n      this.SEGMENT_BASE = 'SegmentBase';\n      this.SEGMENT_TEMPLATE = 'SegmentTemplate';\n      this.SEGMENT_LIST = 'SegmentList';\n      this.SEGMENT_URL = 'SegmentURL';\n      this.SEGMENT_TIMELINE = 'SegmentTimeline';\n      this.SEGMENT_PROFILES = 'segmentProfiles';\n      this.ADAPTATION_SET = 'AdaptationSet';\n      this.REPRESENTATION = 'Representation';\n      this.REPRESENTATION_INDEX = 'RepresentationIndex';\n      this.SUB_REPRESENTATION = 'SubRepresentation';\n      this.INITIALIZATION = 'Initialization';\n      this.INITIALIZATION_MINUS = 'initialization';\n      this.MPD = 'MPD';\n      this.PERIOD = 'Period';\n      this.ASSET_IDENTIFIER = 'AssetIdentifier';\n      this.EVENT_STREAM = 'EventStream';\n      this.ID = 'id';\n      this.PROFILES = 'profiles';\n      this.SERVICE_LOCATION = 'serviceLocation';\n      this.RANGE = 'range';\n      this.INDEX = 'index';\n      this.MEDIA = 'media';\n      this.BYTE_RANGE = 'byteRange';\n      this.INDEX_RANGE = 'indexRange';\n      this.MEDIA_RANGE = 'mediaRange';\n      this.VALUE = 'value';\n      this.CONTENT_TYPE = 'contentType';\n      this.MIME_TYPE = 'mimeType';\n      this.BITSTREAM_SWITCHING = 'BitstreamSwitching';\n      this.BITSTREAM_SWITCHING_MINUS = 'bitstreamSwitching';\n      this.CODECS = 'codecs';\n      this.DEPENDENCY_ID = 'dependencyId';\n      this.MEDIA_STREAM_STRUCTURE_ID = 'mediaStreamStructureId';\n      this.METRICS = 'Metrics';\n      this.METRICS_MINUS = 'metrics';\n      this.REPORTING = 'Reporting';\n      this.WIDTH = 'width';\n      this.HEIGHT = 'height';\n      this.SAR = 'sar';\n      this.FRAMERATE = 'frameRate';\n      this.AUDIO_SAMPLING_RATE = 'audioSamplingRate';\n      this.MAXIMUM_SAP_PERIOD = 'maximumSAPPeriod';\n      this.START_WITH_SAP = 'startWithSAP';\n      this.MAX_PLAYOUT_RATE = 'maxPlayoutRate';\n      this.CODING_DEPENDENCY = 'codingDependency';\n      this.SCAN_TYPE = 'scanType';\n      this.FRAME_PACKING = 'FramePacking';\n      this.AUDIO_CHANNEL_CONFIGURATION = 'AudioChannelConfiguration';\n      this.CONTENT_PROTECTION = 'ContentProtection';\n      this.ESSENTIAL_PROPERTY = 'EssentialProperty';\n      this.SUPPLEMENTAL_PROPERTY = 'SupplementalProperty';\n      this.INBAND_EVENT_STREAM = 'InbandEventStream';\n      this.ACCESSIBILITY = 'Accessibility';\n      this.ROLE = 'Role';\n      this.RATING = 'Rating';\n      this.CONTENT_COMPONENT = 'ContentComponent';\n      this.SUBSET = 'Subset';\n      this.LANG = 'lang';\n      this.VIEWPOINT = 'Viewpoint';\n      this.ROLE_ASARRAY = 'Role_asArray';\n      this.ACCESSIBILITY_ASARRAY = 'Accessibility_asArray';\n      this.AUDIOCHANNELCONFIGURATION_ASARRAY = 'AudioChannelConfiguration_asArray';\n      this.CONTENTPROTECTION_ASARRAY = 'ContentProtection_asArray';\n      this.MAIN = 'main';\n      this.DYNAMIC = 'dynamic';\n      this.STATIC = 'static';\n      this.MEDIA_PRESENTATION_DURATION = 'mediaPresentationDuration';\n      this.MINIMUM_UPDATE_PERIOD = 'minimumUpdatePeriod';\n      this.CODEC_PRIVATE_DATA = 'codecPrivateData';\n      this.BANDWITH = 'bandwidth';\n      this.SOURCE_URL = 'sourceURL';\n      this.TIMESCALE = 'timescale';\n      this.DURATION = 'duration';\n      this.START_NUMBER = 'startNumber';\n      this.PRESENTATION_TIME_OFFSET = 'presentationTimeOffset';\n      this.AVAILABILITY_START_TIME = 'availabilityStartTime';\n      this.AVAILABILITY_END_TIME = 'availabilityEndTime';\n      this.TIMESHIFT_BUFFER_DEPTH = 'timeShiftBufferDepth';\n      this.MAX_SEGMENT_DURATION = 'maxSegmentDuration';\n      this.PRESENTATION_TIME = 'presentationTime';\n      this.MIN_BUFFER_TIME = 'minBufferTime';\n      this.MAX_SUBSEGMENT_DURATION = 'maxSubsegmentDuration';\n      this.START = 'start';\n      this.AVAILABILITY_TIME_OFFSET = 'availabilityTimeOffset';\n      this.AVAILABILITY_TIME_COMPLETE = 'availabilityTimeComplete';\n      this.CENC_DEFAULT_KID = 'cenc:default_KID';\n      this.DVB_PRIORITY = 'dvb:priority';\n      this.DVB_WEIGHT = 'dvb:weight';\n      this.SUGGESTED_PRESENTATION_DELAY = 'suggestedPresentationDelay';\n      this.SERVICE_DESCRIPTION = 'ServiceDescription';\n      this.SERVICE_DESCRIPTION_SCOPE = 'Scope';\n      this.SERVICE_DESCRIPTION_LATENCY = 'Latency';\n      this.SERVICE_DESCRIPTION_PLAYBACK_RATE = 'PlaybackRate';\n      this.PATCH_LOCATION = 'PatchLocation';\n      this.PUBLISH_TIME = 'publishTime';\n      this.ORIGINAL_PUBLISH_TIME = 'originalPublishTime';\n      this.ORIGINAL_MPD_ID = 'mpdId';\n    }\n  }]);\n\n  function DashConstants() {\n    _classCallCheck(this, DashConstants);\n\n    this.init();\n  }\n\n  return DashConstants;\n}();\n\nvar constants = new DashConstants();\nexports.default = constants;","map":{"version":3,"sources":["../../../../../src/dash/constants/DashConstants.js"],"names":["DashConstants","constants"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Dash constants declaration\n * @class\n * @ignore\n */\nclass DashConstants {\n\n    init() {\n        this.BASE_URL = 'BaseURL';\n        this.SEGMENT_BASE = 'SegmentBase';\n        this.SEGMENT_TEMPLATE = 'SegmentTemplate';\n        this.SEGMENT_LIST = 'SegmentList';\n        this.SEGMENT_URL = 'SegmentURL';\n        this.SEGMENT_TIMELINE = 'SegmentTimeline';\n        this.SEGMENT_PROFILES = 'segmentProfiles';\n        this.ADAPTATION_SET = 'AdaptationSet';\n        this.REPRESENTATION = 'Representation';\n        this.REPRESENTATION_INDEX = 'RepresentationIndex';\n        this.SUB_REPRESENTATION = 'SubRepresentation';\n        this.INITIALIZATION = 'Initialization';\n        this.INITIALIZATION_MINUS = 'initialization';\n        this.MPD = 'MPD';\n        this.PERIOD = 'Period';\n        this.ASSET_IDENTIFIER = 'AssetIdentifier';\n        this.EVENT_STREAM = 'EventStream';\n        this.ID = 'id';\n        this.PROFILES = 'profiles';\n        this.SERVICE_LOCATION = 'serviceLocation';\n        this.RANGE = 'range';\n        this.INDEX = 'index';\n        this.MEDIA = 'media';\n        this.BYTE_RANGE = 'byteRange';\n        this.INDEX_RANGE = 'indexRange';\n        this.MEDIA_RANGE = 'mediaRange';\n        this.VALUE = 'value';\n        this.CONTENT_TYPE = 'contentType';\n        this.MIME_TYPE = 'mimeType';\n        this.BITSTREAM_SWITCHING = 'BitstreamSwitching';\n        this.BITSTREAM_SWITCHING_MINUS = 'bitstreamSwitching';\n        this.CODECS = 'codecs';\n        this.DEPENDENCY_ID = 'dependencyId';\n        this.MEDIA_STREAM_STRUCTURE_ID = 'mediaStreamStructureId';\n        this.METRICS = 'Metrics';\n        this.METRICS_MINUS = 'metrics';\n        this.REPORTING = 'Reporting';\n        this.WIDTH = 'width';\n        this.HEIGHT = 'height';\n        this.SAR = 'sar';\n        this.FRAMERATE = 'frameRate';\n        this.AUDIO_SAMPLING_RATE = 'audioSamplingRate';\n        this.MAXIMUM_SAP_PERIOD = 'maximumSAPPeriod';\n        this.START_WITH_SAP = 'startWithSAP';\n        this.MAX_PLAYOUT_RATE = 'maxPlayoutRate';\n        this.CODING_DEPENDENCY = 'codingDependency';\n        this.SCAN_TYPE = 'scanType';\n        this.FRAME_PACKING = 'FramePacking';\n        this.AUDIO_CHANNEL_CONFIGURATION = 'AudioChannelConfiguration';\n        this.CONTENT_PROTECTION = 'ContentProtection';\n        this.ESSENTIAL_PROPERTY = 'EssentialProperty';\n        this.SUPPLEMENTAL_PROPERTY = 'SupplementalProperty';\n        this.INBAND_EVENT_STREAM = 'InbandEventStream';\n        this.ACCESSIBILITY = 'Accessibility';\n        this.ROLE = 'Role';\n        this.RATING = 'Rating';\n        this.CONTENT_COMPONENT = 'ContentComponent';\n        this.SUBSET = 'Subset';\n        this.LANG = 'lang';\n        this.VIEWPOINT = 'Viewpoint';\n        this.ROLE_ASARRAY = 'Role_asArray';\n        this.ACCESSIBILITY_ASARRAY = 'Accessibility_asArray';\n        this.AUDIOCHANNELCONFIGURATION_ASARRAY = 'AudioChannelConfiguration_asArray';\n        this.CONTENTPROTECTION_ASARRAY = 'ContentProtection_asArray';\n        this.MAIN = 'main';\n        this.DYNAMIC = 'dynamic';\n        this.STATIC = 'static';\n        this.MEDIA_PRESENTATION_DURATION = 'mediaPresentationDuration';\n        this.MINIMUM_UPDATE_PERIOD = 'minimumUpdatePeriod';\n        this.CODEC_PRIVATE_DATA = 'codecPrivateData';\n        this.BANDWITH = 'bandwidth';\n        this.SOURCE_URL = 'sourceURL';\n        this.TIMESCALE = 'timescale';\n        this.DURATION = 'duration';\n        this.START_NUMBER = 'startNumber';\n        this.PRESENTATION_TIME_OFFSET = 'presentationTimeOffset';\n        this.AVAILABILITY_START_TIME = 'availabilityStartTime';\n        this.AVAILABILITY_END_TIME = 'availabilityEndTime';\n        this.TIMESHIFT_BUFFER_DEPTH = 'timeShiftBufferDepth';\n        this.MAX_SEGMENT_DURATION = 'maxSegmentDuration';\n        this.PRESENTATION_TIME = 'presentationTime';\n        this.MIN_BUFFER_TIME = 'minBufferTime';\n        this.MAX_SUBSEGMENT_DURATION = 'maxSubsegmentDuration';\n        this.START = 'start';\n        this.AVAILABILITY_TIME_OFFSET = 'availabilityTimeOffset';\n        this.AVAILABILITY_TIME_COMPLETE = 'availabilityTimeComplete';\n        this.CENC_DEFAULT_KID = 'cenc:default_KID';\n        this.DVB_PRIORITY = 'dvb:priority';\n        this.DVB_WEIGHT = 'dvb:weight';\n        this.SUGGESTED_PRESENTATION_DELAY = 'suggestedPresentationDelay';\n        this.SERVICE_DESCRIPTION = 'ServiceDescription';\n        this.SERVICE_DESCRIPTION_SCOPE = 'Scope';\n        this.SERVICE_DESCRIPTION_LATENCY = 'Latency';\n        this.SERVICE_DESCRIPTION_PLAYBACK_RATE = 'PlaybackRate';\n        this.PATCH_LOCATION = 'PatchLocation';\n        this.PUBLISH_TIME = 'publishTime';\n        this.ORIGINAL_PUBLISH_TIME = 'originalPublishTime';\n        this.ORIGINAL_MPD_ID = 'mpdId';\n    }\n\n    constructor () {\n        this.init();\n    }\n}\n\nlet constants = new DashConstants();\nexport default constants;\n"]},"metadata":{},"sourceType":"script"}