{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _SchemeLoaderFactory = require('../../streaming/net/SchemeLoaderFactory');\n\nvar _SchemeLoaderFactory2 = _interopRequireDefault(_SchemeLoaderFactory);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* @class URLLoader\n* @description  Call Offline Loader or Online Loader dependaing on URL\n* @param {Object} cfg - dependances\n* @ignore\n*/\n\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nfunction URLLoader(cfg) {\n  cfg = cfg || {};\n  var context = this.context;\n  var instance = void 0,\n      schemeLoaderFactory = void 0,\n      loader = void 0;\n  schemeLoaderFactory = (0, _SchemeLoaderFactory2.default)(context).getInstance();\n\n  function load(config) {\n    var loaderFactory = schemeLoaderFactory.getLoader(config && config.request ? config.request.url : null);\n    loader = loaderFactory(context).create({\n      errHandler: cfg.errHandler,\n      mediaPlayerModel: cfg.mediaPlayerModel,\n      requestModifier: cfg.requestModifier,\n      useFetch: cfg.useFetch || null,\n      dashMetrics: cfg.dashMetrics,\n      boxParser: cfg.boxParser ? cfg.boxParser : null,\n      constants: cfg.constants ? cfg.constants : null,\n      dashConstants: cfg.dashConstants ? cfg.dashConstants : null,\n      urlUtils: cfg.urlUtils ? cfg.urlUtils : null,\n      requestTimeout: !isNaN(cfg.requestTimeout) ? cfg.requestTimeout : 0,\n      errors: cfg.errors\n    });\n    loader.load(config);\n  }\n\n  function abort() {\n    if (loader) {\n      loader.abort();\n    }\n  }\n\n  instance = {\n    load: load,\n    abort: abort\n  };\n  return instance;\n}\n\nURLLoader.__dashjs_factory_name = 'URLLoader';\n\nvar factory = _FactoryMaker2.default.getClassFactory(URLLoader);\n\nexports.default = factory;","map":{"version":3,"sources":["../../../../../src/streaming/net/URLLoader.js"],"names":["cfg","context","instance","schemeLoaderFactory","loader","loaderFactory","config","errHandler","mediaPlayerModel","requestModifier","useFetch","dashMetrics","boxParser","constants","dashConstants","urlUtils","requestTimeout","isNaN","errors","load","abort","URLLoader","factory","FactoryMaker"],"mappings":";;;;;;AA8BA,IAAA,aAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,yCAAA,CAAA;;;;;;;;AAEA;AAAA;;;;;;;AAjCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,SAAA,SAAA,CAAA,GAAA,EAAwB;AAEpBA,EAAAA,GAAAA,GAAMA,GAAAA,IAANA,EAAAA;AACA,MAAMC,OAAAA,GAAU,KAAhB,OAAA;AAEA,MAAIC,QAAAA,GAAAA,KAAJ,CAAA;AAAA,MACIC,mBAAAA,GAAAA,KADJ,CAAA;AAAA,MAEIC,MAAAA,GAAAA,KAFJ,CAAA;AAIAD,EAAAA,mBAAAA,GAAsB,CAAA,GAAA,qBAAA,CAAA,OAAA,EAAA,OAAA,EAAtBA,WAAsB,EAAtBA;;AAEA,WAAA,IAAA,CAAA,MAAA,EAAsB;AAElB,QAAIE,aAAAA,GAAgBF,mBAAAA,CAAAA,SAAAA,CAA8BG,MAAAA,IAAUA,MAAAA,CAAVA,OAAAA,GAA2BA,MAAAA,CAAAA,OAAAA,CAA3BA,GAAAA,GAAlD,IAAoBH,CAApB;AACAC,IAAAA,MAAAA,GAASC,aAAAA,CAAAA,OAAAA,CAAAA,CAAAA,MAAAA,CAA8B;AACnCE,MAAAA,UAAAA,EAAYP,GAAAA,CADuB,UAAA;AAEnCQ,MAAAA,gBAAAA,EAAkBR,GAAAA,CAFiB,gBAAA;AAGnCS,MAAAA,eAAAA,EAAiBT,GAAAA,CAHkB,eAAA;AAInCU,MAAAA,QAAAA,EAAUV,GAAAA,CAAAA,QAAAA,IAJyB,IAAA;AAKnCW,MAAAA,WAAAA,EAAaX,GAAAA,CALsB,WAAA;AAMnCY,MAAAA,SAAAA,EAAWZ,GAAAA,CAAAA,SAAAA,GAAgBA,GAAAA,CAAhBA,SAAAA,GANwB,IAAA;AAOnCa,MAAAA,SAAAA,EAAWb,GAAAA,CAAAA,SAAAA,GAAgBA,GAAAA,CAAhBA,SAAAA,GAPwB,IAAA;AAQnCc,MAAAA,aAAAA,EAAed,GAAAA,CAAAA,aAAAA,GAAoBA,GAAAA,CAApBA,aAAAA,GARoB,IAAA;AASnCe,MAAAA,QAAAA,EAAUf,GAAAA,CAAAA,QAAAA,GAAeA,GAAAA,CAAfA,QAAAA,GATyB,IAAA;AAUnCgB,MAAAA,cAAAA,EAAgB,CAACC,KAAAA,CAAMjB,GAAAA,CAAP,cAACiB,CAAD,GAA6BjB,GAAAA,CAA7B,cAAA,GAVmB,CAAA;AAWnCkB,MAAAA,MAAAA,EAAQlB,GAAAA,CAXZI;AAAuC,KAA9BC,CAATD;AAcAA,IAAAA,MAAAA,CAAAA,IAAAA,CAAAA,MAAAA;AAGJ;;AAAA,WAAA,KAAA,GAAiB;AACb,QAAA,MAAA,EAAY;AACRA,MAAAA,MAAAA,CAAAA,KAAAA;AAEP;AACDF;;AAAAA,EAAAA,QAAAA,GAAW;AACPiB,IAAAA,IAAAA,EADO,IAAA;AAEPC,IAAAA,KAAAA,EAFJlB;AAAW,GAAXA;AAKA,SAAA,QAAA;AAGJmB;;AAAAA,SAAAA,CAAAA,qBAAAA,GAAAA,WAAAA;;AAEA,IAAMC,OAAAA,GAAUC,cAAAA,CAAAA,OAAAA,CAAAA,eAAAA,CAAhB,SAAgBA,CAAhB;;kBACeD,O","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport SchemeLoaderFactory from '../../streaming/net/SchemeLoaderFactory';\n\n/**\n * @class URLLoader\n * @description  Call Offline Loader or Online Loader dependaing on URL\n * @param {Object} cfg - dependances\n * @ignore\n*/\nfunction URLLoader(cfg) {\n\n    cfg = cfg || {};\n    const context = this.context;\n\n    let instance,\n        schemeLoaderFactory,\n        loader;\n\n    schemeLoaderFactory = SchemeLoaderFactory(context).getInstance();\n\n    function load(config) {\n\n        let loaderFactory = schemeLoaderFactory.getLoader(config && config.request ? config.request.url : null);\n        loader = loaderFactory(context).create({\n            errHandler: cfg.errHandler,\n            mediaPlayerModel: cfg.mediaPlayerModel,\n            requestModifier: cfg.requestModifier,\n            useFetch: cfg.useFetch || null,\n            dashMetrics: cfg.dashMetrics,\n            boxParser: cfg.boxParser ? cfg.boxParser : null,\n            constants: cfg.constants ? cfg.constants : null,\n            dashConstants: cfg.dashConstants ? cfg.dashConstants : null,\n            urlUtils: cfg.urlUtils ? cfg.urlUtils : null,\n            requestTimeout: !isNaN(cfg.requestTimeout) ? cfg.requestTimeout : 0,\n            errors: cfg.errors\n        });\n\n        loader.load(config);\n    }\n\n    function abort() {\n        if (loader) {\n            loader.abort();\n        }\n    }\n    instance = {\n        load: load,\n        abort: abort\n    };\n\n    return instance;\n\n}\nURLLoader.__dashjs_factory_name = 'URLLoader';\n\nconst factory = FactoryMaker.getClassFactory(URLLoader);\nexport default factory;\n"]},"metadata":{},"sourceType":"script"}