{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _BaseURLTreeModel = require('../models/BaseURLTreeModel');\n\nvar _BaseURLTreeModel2 = _interopRequireDefault(_BaseURLTreeModel);\n\nvar _BaseURLSelector = require('../utils/BaseURLSelector');\n\nvar _BaseURLSelector2 = _interopRequireDefault(_BaseURLSelector);\n\nvar _URLUtils = require('../utils/URLUtils');\n\nvar _URLUtils2 = _interopRequireDefault(_URLUtils);\n\nvar _BaseURL = require('../../dash/vo/BaseURL');\n\nvar _BaseURL2 = _interopRequireDefault(_BaseURL);\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _EventBus = require('../../core/EventBus');\n\nvar _EventBus2 = _interopRequireDefault(_EventBus);\n\nvar _Events = require('../../core/events/Events');\n\nvar _Events2 = _interopRequireDefault(_Events);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction BaseURLController() {\n  var instance = void 0,\n      adapter = void 0;\n  var context = this.context;\n  var eventBus = (0, _EventBus2.default)(context).getInstance();\n  var urlUtils = (0, _URLUtils2.default)(context).getInstance();\n  var baseURLTreeModel = void 0,\n      baseURLSelector = void 0;\n\n  function onBlackListChanged(e) {\n    baseURLTreeModel.invalidateSelectedIndexes(e.entry);\n  }\n\n  function setup() {\n    baseURLTreeModel = (0, _BaseURLTreeModel2.default)(context).create();\n    baseURLSelector = (0, _BaseURLSelector2.default)(context).create();\n    eventBus.on(_Events2.default.SERVICE_LOCATION_BLACKLIST_CHANGED, onBlackListChanged, instance);\n  }\n\n  function setConfig(config) {\n    if (config.baseURLTreeModel) {\n      baseURLTreeModel = config.baseURLTreeModel;\n    }\n\n    if (config.baseURLSelector) {\n      baseURLSelector = config.baseURLSelector;\n    }\n\n    if (config.adapter) {\n      adapter = config.adapter;\n    }\n  }\n\n  function update(manifest) {\n    baseURLTreeModel.update(manifest);\n    baseURLSelector.chooseSelector(adapter.getIsDVB(manifest));\n  }\n\n  function resolve(path) {\n    var baseUrls = baseURLTreeModel.getForPath(path);\n    var baseUrl = baseUrls.reduce(function (p, c) {\n      var b = baseURLSelector.select(c);\n\n      if (b) {\n        if (!urlUtils.isRelative(b.url)) {\n          p.url = b.url;\n          p.serviceLocation = b.serviceLocation;\n        } else {\n          p.url = urlUtils.resolve(b.url, p.url);\n        }\n\n        p.availabilityTimeOffset = b.availabilityTimeOffset;\n        p.availabilityTimeComplete = b.availabilityTimeComplete;\n      } else {\n        return new _BaseURL2.default();\n      }\n\n      return p;\n    }, new _BaseURL2.default());\n\n    if (!urlUtils.isRelative(baseUrl.url)) {\n      return baseUrl;\n    }\n  }\n\n  function reset() {\n    baseURLTreeModel.reset();\n    baseURLSelector.reset();\n  }\n\n  function initialize(data) {\n    // report config to baseURLTreeModel and baseURLSelector\n    baseURLTreeModel.setConfig({\n      adapter: adapter\n    });\n    update(data);\n  }\n\n  instance = {\n    reset: reset,\n    initialize: initialize,\n    resolve: resolve,\n    setConfig: setConfig\n  };\n  setup();\n  return instance;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nBaseURLController.__dashjs_factory_name = 'BaseURLController';\nexports.default = _FactoryMaker2.default.getClassFactory(BaseURLController);","map":{"version":3,"sources":["../../../../../src/streaming/controllers/BaseURLController.js"],"names":["instance","adapter","context","eventBus","urlUtils","baseURLTreeModel","baseURLSelector","e","Events","config","baseUrls","baseUrl","b","p","BaseURL","update","reset","initialize","resolve","setConfig","setup","BaseURLController","FactoryMaker"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseURLTreeModel from '../models/BaseURLTreeModel';\nimport BaseURLSelector from '../utils/BaseURLSelector';\nimport URLUtils from '../utils/URLUtils';\nimport BaseURL from '../../dash/vo/BaseURL';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\n\nfunction BaseURLController() {\n\n    let instance,\n        adapter;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let baseURLTreeModel,\n        baseURLSelector;\n\n    function onBlackListChanged(e) {\n        baseURLTreeModel.invalidateSelectedIndexes(e.entry);\n    }\n\n    function setup() {\n        baseURLTreeModel = BaseURLTreeModel(context).create();\n        baseURLSelector = BaseURLSelector(context).create();\n\n        eventBus.on(Events.SERVICE_LOCATION_BLACKLIST_CHANGED, onBlackListChanged, instance);\n    }\n\n    function setConfig(config) {\n        if (config.baseURLTreeModel) {\n            baseURLTreeModel = config.baseURLTreeModel;\n        }\n\n        if (config.baseURLSelector) {\n            baseURLSelector = config.baseURLSelector;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n    }\n\n    function update(manifest) {\n        baseURLTreeModel.update(manifest);\n        baseURLSelector.chooseSelector(adapter.getIsDVB(manifest));\n    }\n\n    function resolve(path) {\n        const baseUrls = baseURLTreeModel.getForPath(path);\n\n        const baseUrl = baseUrls.reduce((p, c) => {\n            const b = baseURLSelector.select(c);\n\n            if (b) {\n                if (!urlUtils.isRelative(b.url)) {\n                    p.url = b.url;\n                    p.serviceLocation = b.serviceLocation;\n                } else {\n                    p.url = urlUtils.resolve(b.url, p.url);\n                }\n                p.availabilityTimeOffset = b.availabilityTimeOffset;\n                p.availabilityTimeComplete = b.availabilityTimeComplete;\n            } else {\n                return new BaseURL();\n            }\n\n            return p;\n        }, new BaseURL());\n\n        if (!urlUtils.isRelative(baseUrl.url)) {\n            return baseUrl;\n        }\n    }\n\n    function reset() {\n        baseURLTreeModel.reset();\n        baseURLSelector.reset();\n    }\n\n    function initialize(data) {\n\n        // report config to baseURLTreeModel and baseURLSelector\n        baseURLTreeModel.setConfig({\n            adapter: adapter\n        });\n\n        update(data);\n    }\n\n    instance = {\n        reset: reset,\n        initialize: initialize,\n        resolve: resolve,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLController.__dashjs_factory_name = 'BaseURLController';\nexport default FactoryMaker.getClassFactory(BaseURLController);\n"]},"metadata":{},"sourceType":"script"}