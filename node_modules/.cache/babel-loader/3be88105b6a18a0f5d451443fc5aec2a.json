{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _DefaultURLUtils = require('./DefaultURLUtils');\n\nvar _DefaultURLUtils2 = _interopRequireDefault(_DefaultURLUtils);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* @module URLUtils\n* @ignore\n* @description Provides utility functions for operating on URLs.\n* Initially this is simply a method to determine the Base URL of a URL, but\n* should probably include other things provided all over the place such as\n* determining whether a URL is relative/absolute, resolving two paths etc.\n*/\n\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nfunction URLUtils() {\n  var instance = void 0;\n  var defaultURLUtils = void 0;\n  var regexUtils = [];\n  var context = this.context;\n\n  function getUtils(url) {\n    var i = void 0;\n\n    for (i = 0; i < regexUtils.length; i++) {\n      var regex = regexUtils[i].regex;\n\n      if (regex.test(url)) {\n        return regexUtils[i].utils;\n      }\n    }\n\n    return defaultURLUtils;\n  }\n\n  function setup() {\n    defaultURLUtils = (0, _DefaultURLUtils2.default)(context).getInstance();\n  }\n  /**\n  * Register a module to handle specific url.\n  * @param {regex} regex - url regex\n  * @param {object} utils - object that handles the regex\n  * @memberof module:URLUtils\n  * @instance\n  */\n\n\n  function registerUrlRegex(regex, utils) {\n    regexUtils.push({\n      regex: regex,\n      utils: utils\n    });\n  }\n\n  function internalCall(functionName, url, baseUrl) {\n    var utils = getUtils(baseUrl || url);\n    return utils && typeof utils[functionName] === 'function' ? utils[functionName](url, baseUrl) : defaultURLUtils[functionName](url, baseUrl);\n  }\n  /**\n  * Returns a string that contains the Base URL of a URL, if determinable.\n  * @param {string} url - full url\n  * @return {string}\n  * @memberof module:URLUtils\n  * @instance\n  */\n\n\n  function parseBaseUrl(url) {\n    return internalCall('parseBaseUrl', url);\n  }\n  /**\n  * Returns a string that contains the scheme and origin of a URL,\n  * if determinable.\n  * @param {string} url - full url\n  * @return {string}\n  * @memberof module:URLUtils\n  * @instance\n  */\n\n\n  function parseOrigin(url) {\n    return internalCall('parseOrigin', url);\n  }\n  /**\n  * Returns a string that contains the fragment of a URL without scheme,\n  * if determinable.\n  * @param {string} url - full url\n  * @return {string}\n  * @memberof module:URLUtils\n  * @instance\n  */\n\n\n  function removeHostname(url) {\n    return internalCall('removeHostname', url);\n  }\n  /**\n  * Returns a string that contains the scheme of a URL, if determinable.\n  * @param {string} url - full url\n  * @return {string}\n  * @memberof module:URLUtils\n  * @instance\n  */\n\n\n  function parseScheme(url) {\n    return internalCall('parseScheme', url);\n  }\n  /**\n  * Determines whether the url is relative.\n  * @return {boolean}\n  * @param {string} url\n  * @memberof module:URLUtils\n  * @instance\n  */\n\n\n  function isRelative(url) {\n    return internalCall('isRelative', url);\n  }\n  /**\n  * Determines whether the url is path-absolute.\n  * @return {bool}\n  * @param {string} url\n  * @memberof module:URLUtils\n  * @instance\n  */\n\n\n  function isPathAbsolute(url) {\n    return internalCall('isPathAbsolute', url);\n  }\n  /**\n  * Determines whether the url is scheme-relative.\n  * @return {bool}\n  * @param {string} url\n  * @memberof module:URLUtils\n  * @instance\n  */\n\n\n  function isSchemeRelative(url) {\n    return internalCall('isSchemeRelative', url);\n  }\n  /**\n  * Determines whether the url is an HTTP-URL as defined in ISO/IEC\n  * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\n  * @return {bool}\n  * @param {string} url\n  * @memberof module:URLUtils\n  * @instance\n  */\n\n\n  function isHTTPURL(url) {\n    return internalCall('isHTTPURL', url);\n  }\n  /**\n  * Determines whether the supplied url has https scheme\n  * @return {bool}\n  * @param {string} url\n  * @memberof module:URLUtils\n  * @instance\n  */\n\n\n  function isHTTPS(url) {\n    return internalCall('isHTTPS', url);\n  }\n  /**\n  * Resolves a url given an optional base url\n  * @return {string}\n  * @param {string} url\n  * @param {string} [baseUrl]\n  * @memberof module:URLUtils\n  * @instance\n  */\n\n\n  function resolve(url, baseUrl) {\n    return internalCall('resolve', url, baseUrl);\n  }\n\n  setup();\n  instance = {\n    registerUrlRegex: registerUrlRegex,\n    parseBaseUrl: parseBaseUrl,\n    parseOrigin: parseOrigin,\n    parseScheme: parseScheme,\n    isRelative: isRelative,\n    isPathAbsolute: isPathAbsolute,\n    isSchemeRelative: isSchemeRelative,\n    isHTTPURL: isHTTPURL,\n    isHTTPS: isHTTPS,\n    removeHostname: removeHostname,\n    resolve: resolve\n  };\n  return instance;\n}\n\nURLUtils.__dashjs_factory_name = 'URLUtils';\n\nvar factory = _FactoryMaker2.default.getSingletonFactory(URLUtils);\n\nexports.default = factory;","map":{"version":3,"sources":["../../../../../src/streaming/utils/URLUtils.js"],"names":["instance","defaultURLUtils","regexUtils","context","i","regex","utils","getUtils","baseUrl","internalCall","setup","registerUrlRegex","parseBaseUrl","parseOrigin","parseScheme","isRelative","isPathAbsolute","isSchemeRelative","isHTTPURL","isHTTPS","removeHostname","resolve","URLUtils","factory","FactoryMaker"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport DefaultURLUtils from './DefaultURLUtils';\n\n/**\n * @module URLUtils\n * @ignore\n * @description Provides utility functions for operating on URLs.\n * Initially this is simply a method to determine the Base URL of a URL, but\n * should probably include other things provided all over the place such as\n * determining whether a URL is relative/absolute, resolving two paths etc.\n */\nfunction URLUtils() {\n\n    let instance;\n    let defaultURLUtils;\n    let regexUtils = [];\n    const context = this.context;\n\n    function getUtils(url) {\n        let i;\n        for (i = 0; i < regexUtils.length; i++) {\n            let regex = regexUtils[i].regex;\n            if (regex.test(url)) {\n                return regexUtils[i].utils;\n            }\n        }\n        return defaultURLUtils;\n    }\n\n    function setup() {\n        defaultURLUtils = DefaultURLUtils(context).getInstance();\n    }\n\n    /**\n     * Register a module to handle specific url.\n     * @param {regex} regex - url regex\n     * @param {object} utils - object that handles the regex\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function registerUrlRegex(regex, utils) {\n        regexUtils.push({regex: regex, utils: utils});\n    }\n\n    function internalCall(functionName, url, baseUrl) {\n        let utils = getUtils(baseUrl || url);\n        return utils && typeof (utils[functionName]) === 'function' ? utils[functionName](url, baseUrl) : defaultURLUtils[functionName](url, baseUrl);\n    }\n\n    /**\n     * Returns a string that contains the Base URL of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseBaseUrl(url) {\n        return internalCall('parseBaseUrl', url);\n    }\n\n    /**\n     * Returns a string that contains the scheme and origin of a URL,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseOrigin(url) {\n        return internalCall('parseOrigin', url);\n    }\n\n    /**\n     * Returns a string that contains the fragment of a URL without scheme,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function removeHostname(url) {\n        return internalCall('removeHostname', url);\n    }\n\n    /**\n     * Returns a string that contains the scheme of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseScheme(url) {\n        return internalCall('parseScheme', url);\n    }\n\n    /**\n     * Determines whether the url is relative.\n     * @return {boolean}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isRelative(url) {\n        return internalCall('isRelative', url);\n    }\n\n    /**\n     * Determines whether the url is path-absolute.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isPathAbsolute(url) {\n        return internalCall('isPathAbsolute', url);\n    }\n\n    /**\n     * Determines whether the url is scheme-relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isSchemeRelative(url) {\n        return internalCall('isSchemeRelative', url);\n    }\n\n    /**\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPURL(url) {\n        return internalCall('isHTTPURL', url);\n    }\n\n    /**\n     * Determines whether the supplied url has https scheme\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPS(url) {\n        return internalCall('isHTTPS', url);\n    }\n\n    /**\n     * Resolves a url given an optional base url\n     * @return {string}\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function resolve(url, baseUrl) {\n        return internalCall('resolve', url, baseUrl);\n    }\n\n    setup();\n    instance = {\n        registerUrlRegex:   registerUrlRegex,\n        parseBaseUrl:       parseBaseUrl,\n        parseOrigin:        parseOrigin,\n        parseScheme:        parseScheme,\n        isRelative:         isRelative,\n        isPathAbsolute:     isPathAbsolute,\n        isSchemeRelative:   isSchemeRelative,\n        isHTTPURL:          isHTTPURL,\n        isHTTPS:            isHTTPS,\n        removeHostname:     removeHostname,\n        resolve:            resolve\n    };\n\n    return instance;\n}\n\nURLUtils.__dashjs_factory_name = 'URLUtils';\nconst factory = FactoryMaker.getSingletonFactory(URLUtils);\nexport default factory;\n"]},"metadata":{},"sourceType":"script"}