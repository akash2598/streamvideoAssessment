{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ErrorsBase2 = require('../../../core/errors/ErrorsBase');\n\nvar _ErrorsBase3 = _interopRequireDefault(_ErrorsBase2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* @class\n*/\n\n\nvar ProtectionErrors = function (_ErrorsBase) {\n  _inherits(ProtectionErrors, _ErrorsBase);\n\n  function ProtectionErrors() {\n    _classCallCheck(this, ProtectionErrors);\n    /**\n    *  Generid key Error code\n    */\n\n\n    var _this = _possibleConstructorReturn(this, (ProtectionErrors.__proto__ || Object.getPrototypeOf(ProtectionErrors)).call(this));\n\n    _this.MEDIA_KEYERR_CODE = 100;\n    /**\n    *  Error code returned by keyerror api for ProtectionModel_01b\n    */\n\n    _this.MEDIA_KEYERR_UNKNOWN_CODE = 101;\n    /**\n    *  Error code returned by keyerror api for ProtectionModel_01b\n    */\n\n    _this.MEDIA_KEYERR_CLIENT_CODE = 102;\n    /**\n    *  Error code returned by keyerror api for ProtectionModel_01b\n    */\n\n    _this.MEDIA_KEYERR_SERVICE_CODE = 103;\n    /**\n    *  Error code returned by keyerror api for ProtectionModel_01b\n    */\n\n    _this.MEDIA_KEYERR_OUTPUT_CODE = 104;\n    /**\n    *  Error code returned by keyerror api for ProtectionModel_01b\n    */\n\n    _this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105;\n    /**\n    *  Error code returned by keyerror api for ProtectionModel_01b\n    */\n\n    _this.MEDIA_KEYERR_DOMAIN_CODE = 106;\n    /**\n    *  Error code returned when an error occured in keymessage event for ProtectionModel_01b\n    */\n\n    _this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107;\n    /**\n    *  Error code returned when challenge is invalid in keymessage event (event triggered by CDM)\n    */\n\n    _this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108;\n    /**\n    *  Error code returned when License server certificate has not been successfully updated\n    */\n\n    _this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109;\n    /**\n    *  Error code returned when license validity has expired\n    */\n\n    _this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110;\n    /**\n    *  Error code returned when no licenser url is defined\n    */\n\n    _this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111;\n    /**\n    *  Error code returned when key system access is denied\n    */\n\n    _this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112;\n    /**\n    *  Error code returned when key session has not been successfully created\n    */\n\n    _this.KEY_SESSION_CREATED_ERROR_CODE = 113;\n    /**\n    *  Error code returned when license request failed after a keymessage event has been triggered\n    */\n\n    _this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114;\n    _this.MEDIA_KEYERR_UNKNOWN_MESSAGE = 'An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\n    _this.MEDIA_KEYERR_CLIENT_MESSAGE = 'The Key System could not be installed or updated.';\n    _this.MEDIA_KEYERR_SERVICE_MESSAGE = 'The message passed into update indicated an error from the license service.';\n    _this.MEDIA_KEYERR_OUTPUT_MESSAGE = 'There is no available output device with the required characteristics for the content protection system.';\n    _this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE = 'A hardware configuration change caused a content protection error.';\n    _this.MEDIA_KEYERR_DOMAIN_MESSAGE = 'An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\n    _this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE = 'Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!';\n    _this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = 'DRM: Empty key message from CDM';\n    _this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = 'Error updating server certificate -- ';\n    _this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE = 'DRM: KeyStatusChange error! -- License has expired';\n    _this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE = 'DRM: No license server URL specified!';\n    _this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = 'DRM: KeySystem Access Denied! -- ';\n    _this.KEY_SESSION_CREATED_ERROR_MESSAGE = 'DRM: unable to create session! --';\n    _this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = 'DRM: licenser error! --';\n    return _this;\n  }\n\n  return ProtectionErrors;\n}(_ErrorsBase3.default);\n\nvar protectionErrors = new ProtectionErrors();\nexports.default = protectionErrors;","map":{"version":3,"sources":["../../../../../../src/streaming/protection/errors/ProtectionErrors.js"],"names":["ProtectionErrors","ErrorsBase","protectionErrors"],"mappings":";;;;;;AA8BA,IAAA,YAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA9BA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;AAGMA,IAAAA,gB;;;AACL,WAAA,gBAAA,GAAe;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,gBAAA,CAAA;AAGR;;;;;AAHQ,QAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,CAAA,gBAAA,CAAA,SAAA,IAAA,MAAA,CAAA,cAAA,CAAA,gBAAA,CAAA,EAAA,IAAA,CAAA,IAAA,CAAA,CAAA;;AAMR,IAAA,KAAA,CAAA,iBAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,yBAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,wBAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,yBAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,wBAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,gCAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,wBAAA,GAAA,GAAA;AAEA;;;;AAGA,IAAA,KAAA,CAAA,4BAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,yCAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,qCAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,qCAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,kDAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,mCAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,8BAAA,GAAA,GAAA;AACA;;;;AAGA,IAAA,KAAA,CAAA,qCAAA,GAAA,GAAA;AAEA,IAAA,KAAA,CAAA,4BAAA,GAAA,wGAAA;AACA,IAAA,KAAA,CAAA,2BAAA,GAAA,mDAAA;AACA,IAAA,KAAA,CAAA,4BAAA,GAAA,6EAAA;AACA,IAAA,KAAA,CAAA,2BAAA,GAAA,0GAAA;AACA,IAAA,KAAA,CAAA,mCAAA,GAAA,oEAAA;AACA,IAAA,KAAA,CAAA,2BAAA,GAAA,4HAAA;AACA,IAAA,KAAA,CAAA,+BAAA,GAAA,uHAAA;AACA,IAAA,KAAA,CAAA,4CAAA,GAAA,iCAAA;AACA,IAAA,KAAA,CAAA,wCAAA,GAAA,uCAAA;AACA,IAAA,KAAA,CAAA,wCAAA,GAAA,oDAAA;AACA,IAAA,KAAA,CAAA,qDAAA,GAAA,uCAAA;AACA,IAAA,KAAA,CAAA,sCAAA,GAAA,mCAAA;AACA,IAAA,KAAA,CAAA,iCAAA,GAAA,mCAAA;AACA,IAAA,KAAA,CAAA,wCAAA,GAAA,yBAAA;AA9EQ,WAAA,KAAA;;;;EADeC,YAAAA,CAAAA,O,CAAzBD;;AAmFN,IAAIE,gBAAAA,GAAmB,IAAvB,gBAAuB,EAAvB;kBACeA,gB","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from '../../../core/errors/ErrorsBase';\n/**\n * @class\n */\nclass ProtectionErrors extends ErrorsBase {\n\tconstructor () {\n        super();\n\n        /**\n         *  Generid key Error code\n         */\n        this.MEDIA_KEYERR_CODE = 100;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_UNKNOWN_CODE = 101;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_CLIENT_CODE = 102;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_SERVICE_CODE = 103;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_OUTPUT_CODE = 104;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_DOMAIN_CODE = 106;\n\n        /**\n         *  Error code returned when an error occured in keymessage event for ProtectionModel_01b\n         */\n        this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107;\n        /**\n         *  Error code returned when challenge is invalid in keymessage event (event triggered by CDM)\n         */\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108;\n        /**\n         *  Error code returned when License server certificate has not been successfully updated\n         */\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109;\n        /**\n         *  Error code returned when license validity has expired\n         */\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110;\n        /**\n         *  Error code returned when no licenser url is defined\n         */\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111;\n        /**\n         *  Error code returned when key system access is denied\n         */\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112;\n        /**\n         *  Error code returned when key session has not been successfully created\n         */\n        this.KEY_SESSION_CREATED_ERROR_CODE = 113;\n        /**\n         *  Error code returned when license request failed after a keymessage event has been triggered\n         */\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114;\n\n        this.MEDIA_KEYERR_UNKNOWN_MESSAGE = 'An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\n        this.MEDIA_KEYERR_CLIENT_MESSAGE = 'The Key System could not be installed or updated.';\n        this.MEDIA_KEYERR_SERVICE_MESSAGE = 'The message passed into update indicated an error from the license service.';\n        this.MEDIA_KEYERR_OUTPUT_MESSAGE = 'There is no available output device with the required characteristics for the content protection system.';\n        this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE = 'A hardware configuration change caused a content protection error.';\n        this.MEDIA_KEYERR_DOMAIN_MESSAGE = 'An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\n        this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE = 'Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!';\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = 'DRM: Empty key message from CDM';\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = 'Error updating server certificate -- ';\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE = 'DRM: KeyStatusChange error! -- License has expired';\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE = 'DRM: No license server URL specified!';\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = 'DRM: KeySystem Access Denied! -- ';\n        this.KEY_SESSION_CREATED_ERROR_MESSAGE = 'DRM: unable to create session! --';\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = 'DRM: licenser error! --';\n    }\n}\n\nlet protectionErrors = new ProtectionErrors();\nexport default protectionErrors;"]},"metadata":{},"sourceType":"script"}