{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _UTCTiming = require('../../dash/vo/UTCTiming');\n\nvar _UTCTiming2 = _interopRequireDefault(_UTCTiming);\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _Constants = require('../constants/Constants');\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nvar _ABRRulesCollection = require('../rules/abr/ABRRulesCollection');\n\nvar _ABRRulesCollection2 = _interopRequireDefault(_ABRRulesCollection);\n\nvar _Settings = require('../../core/Settings');\n\nvar _Settings2 = _interopRequireDefault(_Settings);\n\nvar _SupervisorTools = require('../utils/SupervisorTools');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nvar DEFAULT_MIN_BUFFER_TIME = 12;\nvar DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH = 20;\nvar DEFAULT_LOW_LATENCY_LIVE_DELAY = 3.0;\nvar LOW_LATENCY_REDUCTION_FACTOR = 10;\nvar LOW_LATENCY_MULTIPLY_FACTOR = 5;\nvar DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR = 4;\nvar MINIMUM_LIVE_LATENCY_CATCHUP = 5;\nvar DEFAULT_XHR_WITH_CREDENTIALS = false;\n\nfunction MediaPlayerModel() {\n  var instance = void 0,\n      UTCTimingSources = void 0,\n      xhrWithCredentials = void 0,\n      customABRRule = void 0;\n  var context = this.context;\n  var settings = (0, _Settings2.default)(context).getInstance();\n\n  function setup() {\n    UTCTimingSources = [];\n    xhrWithCredentials = {\n      default: DEFAULT_XHR_WITH_CREDENTIALS\n    };\n    customABRRule = [];\n  } //TODO Should we use Object.define to have setters/getters? makes more readable code on other side.\n\n\n  function findABRCustomRuleIndex(rulename) {\n    var i = void 0;\n\n    for (i = 0; i < customABRRule.length; i++) {\n      if (customABRRule[i].rulename === rulename) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  function getABRCustomRules() {\n    return customABRRule;\n  }\n\n  function addABRCustomRule(type, rulename, rule) {\n    if (typeof type !== 'string' || type !== _ABRRulesCollection2.default.ABANDON_FRAGMENT_RULES && type !== _ABRRulesCollection2.default.QUALITY_SWITCH_RULES || typeof rulename !== 'string') {\n      throw _Constants2.default.BAD_ARGUMENT_ERROR;\n    }\n\n    var index = findABRCustomRuleIndex(rulename);\n\n    if (index === -1) {\n      // add rule\n      customABRRule.push({\n        type: type,\n        rulename: rulename,\n        rule: rule\n      });\n    } else {\n      // update rule\n      customABRRule[index].type = type;\n      customABRRule[index].rule = rule;\n    }\n  }\n\n  function removeABRCustomRule(rulename) {\n    if (rulename) {\n      var index = findABRCustomRuleIndex(rulename); //if no rulename custom rule has been found, do nothing\n\n      if (index !== -1) {\n        // remove rule\n        customABRRule.splice(index, 1);\n      }\n    } else {\n      //if no rulename is defined, remove all ABR custome rules\n      customABRRule = [];\n    }\n  }\n\n  function getStableBufferTime() {\n    if (settings.get().streaming.lowLatencyEnabled) {\n      return getLiveDelay() * 0.6;\n    }\n\n    var stableBufferTime = settings.get().streaming.stableBufferTime;\n    return stableBufferTime > -1 ? stableBufferTime : settings.get().streaming.fastSwitchEnabled ? DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH : DEFAULT_MIN_BUFFER_TIME;\n  }\n\n  function getRetryAttemptsForType(type) {\n    var lowLatencyMultiplyFactor = !isNaN(settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor) ? settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor : LOW_LATENCY_MULTIPLY_FACTOR;\n    return settings.get().streaming.lowLatencyEnabled ? settings.get().streaming.retryAttempts[type] * lowLatencyMultiplyFactor : settings.get().streaming.retryAttempts[type];\n  }\n\n  function getRetryIntervalsForType(type) {\n    var lowLatencyReductionFactor = !isNaN(settings.get().streaming.retryIntervals.lowLatencyReductionFactor) ? settings.get().streaming.retryIntervals.lowLatencyReductionFactor : LOW_LATENCY_REDUCTION_FACTOR;\n    return settings.get().streaming.lowLatencyEnabled ? settings.get().streaming.retryIntervals[type] / lowLatencyReductionFactor : settings.get().streaming.retryIntervals[type];\n  }\n\n  function getLiveDelay() {\n    if (settings.get().streaming.lowLatencyEnabled) {\n      return settings.get().streaming.liveDelay || DEFAULT_LOW_LATENCY_LIVE_DELAY;\n    }\n\n    return settings.get().streaming.liveDelay;\n  }\n\n  function getLiveCatchupLatencyThreshold() {\n    try {\n      var liveCatchupLatencyThreshold = settings.get().streaming.liveCatchup.latencyThreshold;\n      var liveDelay = getLiveDelay();\n\n      if (liveCatchupLatencyThreshold !== null && !isNaN(liveCatchupLatencyThreshold)) {\n        return Math.max(liveCatchupLatencyThreshold, liveDelay);\n      }\n\n      var liveCatchupMinDrift = settings.get().streaming.liveCatchup.minDrift;\n      var maximumLiveDelay = !isNaN(liveDelay) && liveDelay ? !isNaN(liveCatchupMinDrift) ? settings.get().streaming.liveCatchup.minDrift + getLiveDelay() : getLiveDelay() : NaN;\n\n      if (maximumLiveDelay && !isNaN(maximumLiveDelay)) {\n        return Math.max(maximumLiveDelay * DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR, MINIMUM_LIVE_LATENCY_CATCHUP);\n      }\n\n      return NaN;\n    } catch (e) {\n      return NaN;\n    }\n  }\n\n  function addUTCTimingSource(schemeIdUri, value) {\n    removeUTCTimingSource(schemeIdUri, value); //check if it already exists and remove if so.\n\n    var vo = new _UTCTiming2.default();\n    vo.schemeIdUri = schemeIdUri;\n    vo.value = value;\n    UTCTimingSources.push(vo);\n  }\n\n  function getUTCTimingSources() {\n    return UTCTimingSources;\n  }\n\n  function removeUTCTimingSource(schemeIdUri, value) {\n    (0, _SupervisorTools.checkParameterType)(schemeIdUri, 'string');\n    (0, _SupervisorTools.checkParameterType)(value, 'string');\n    UTCTimingSources.forEach(function (obj, idx) {\n      if (obj.schemeIdUri === schemeIdUri && obj.value === value) {\n        UTCTimingSources.splice(idx, 1);\n      }\n    });\n  }\n\n  function clearDefaultUTCTimingSources() {\n    UTCTimingSources = [];\n  }\n\n  function restoreDefaultUTCTimingSources() {\n    var defaultUtcTimingSource = settings.get().streaming.utcSynchronization.defaultTimingSource;\n    addUTCTimingSource(defaultUtcTimingSource.scheme, defaultUtcTimingSource.value);\n  }\n\n  function setXHRWithCredentialsForType(type, value) {\n    if (!type) {\n      Object.keys(xhrWithCredentials).forEach(function (key) {\n        setXHRWithCredentialsForType(key, value);\n      });\n    } else {\n      xhrWithCredentials[type] = !!value;\n    }\n  }\n\n  function getXHRWithCredentialsForType(type) {\n    var useCreds = xhrWithCredentials[type];\n    return useCreds === undefined ? xhrWithCredentials.default : useCreds;\n  }\n\n  function getDefaultUtcTimingSource() {\n    return settings.get().streaming.utcSynchronization.defaultTimingSource;\n  }\n\n  function reset() {//TODO need to figure out what props to persist across sessions and which to reset if any.\n    //setup();\n  }\n\n  instance = {\n    getABRCustomRules: getABRCustomRules,\n    addABRCustomRule: addABRCustomRule,\n    removeABRCustomRule: removeABRCustomRule,\n    getStableBufferTime: getStableBufferTime,\n    getRetryAttemptsForType: getRetryAttemptsForType,\n    getRetryIntervalsForType: getRetryIntervalsForType,\n    getLiveDelay: getLiveDelay,\n    getLiveCatchupLatencyThreshold: getLiveCatchupLatencyThreshold,\n    addUTCTimingSource: addUTCTimingSource,\n    removeUTCTimingSource: removeUTCTimingSource,\n    getUTCTimingSources: getUTCTimingSources,\n    clearDefaultUTCTimingSources: clearDefaultUTCTimingSources,\n    restoreDefaultUTCTimingSources: restoreDefaultUTCTimingSources,\n    setXHRWithCredentialsForType: setXHRWithCredentialsForType,\n    getXHRWithCredentialsForType: getXHRWithCredentialsForType,\n    getDefaultUtcTimingSource: getDefaultUtcTimingSource,\n    reset: reset\n  };\n  setup();\n  return instance;\n} //TODO see if you can move this and not export and just getter to get default value.\n\n\nMediaPlayerModel.__dashjs_factory_name = 'MediaPlayerModel';\nexports.default = _FactoryMaker2.default.getSingletonFactory(MediaPlayerModel);","map":{"version":3,"sources":["../../../../../src/streaming/models/MediaPlayerModel.js"],"names":["DEFAULT_MIN_BUFFER_TIME","DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH","DEFAULT_LOW_LATENCY_LIVE_DELAY","LOW_LATENCY_REDUCTION_FACTOR","LOW_LATENCY_MULTIPLY_FACTOR","DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR","MINIMUM_LIVE_LATENCY_CATCHUP","DEFAULT_XHR_WITH_CREDENTIALS","instance","UTCTimingSources","xhrWithCredentials","customABRRule","context","settings","default","i","type","ABRRulesCollection","Constants","index","findABRCustomRuleIndex","rulename","rule","getLiveDelay","stableBufferTime","lowLatencyMultiplyFactor","isNaN","lowLatencyReductionFactor","liveCatchupLatencyThreshold","liveDelay","Math","liveCatchupMinDrift","maximumLiveDelay","removeUTCTimingSource","vo","UTCTiming","obj","defaultUtcTimingSource","addUTCTimingSource","Object","setXHRWithCredentialsForType","useCreds","getABRCustomRules","addABRCustomRule","removeABRCustomRule","getStableBufferTime","getRetryAttemptsForType","getRetryIntervalsForType","getLiveCatchupLatencyThreshold","getUTCTimingSources","clearDefaultUTCTimingSources","restoreDefaultUTCTimingSources","getXHRWithCredentialsForType","getDefaultUtcTimingSource","reset","setup","MediaPlayerModel","FactoryMaker"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport UTCTiming from '../../dash/vo/UTCTiming';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Constants from '../constants/Constants';\nimport ABRRulesCollection from '../rules/abr/ABRRulesCollection';\nimport Settings from '../../core/Settings';\nimport {checkParameterType} from '../utils/SupervisorTools';\n\n\nconst DEFAULT_MIN_BUFFER_TIME = 12;\nconst DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH = 20;\n\nconst DEFAULT_LOW_LATENCY_LIVE_DELAY = 3.0;\nconst LOW_LATENCY_REDUCTION_FACTOR = 10;\nconst LOW_LATENCY_MULTIPLY_FACTOR = 5;\nconst DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR = 4;\nconst MINIMUM_LIVE_LATENCY_CATCHUP = 5;\n\nconst DEFAULT_XHR_WITH_CREDENTIALS = false;\n\nfunction MediaPlayerModel() {\n\n    let instance,\n        UTCTimingSources,\n        xhrWithCredentials,\n        customABRRule;\n\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n\n    function setup() {\n        UTCTimingSources = [];\n        xhrWithCredentials = {\n            default: DEFAULT_XHR_WITH_CREDENTIALS\n        };\n        customABRRule = [];\n    }\n\n    //TODO Should we use Object.define to have setters/getters? makes more readable code on other side.\n    function findABRCustomRuleIndex(rulename) {\n        let i;\n        for (i = 0; i < customABRRule.length; i++) {\n            if (customABRRule[i].rulename === rulename) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function getABRCustomRules() {\n        return customABRRule;\n    }\n\n    function addABRCustomRule(type, rulename, rule) {\n        if (typeof type !== 'string' || (type !== ABRRulesCollection.ABANDON_FRAGMENT_RULES && type !== ABRRulesCollection.QUALITY_SWITCH_RULES) ||\n            typeof rulename !== 'string') {\n            throw Constants.BAD_ARGUMENT_ERROR;\n        }\n        let index = findABRCustomRuleIndex(rulename);\n        if (index === -1) {\n            // add rule\n            customABRRule.push({\n                type: type,\n                rulename: rulename,\n                rule: rule\n            });\n        } else {\n            // update rule\n            customABRRule[index].type = type;\n            customABRRule[index].rule = rule;\n        }\n    }\n\n    function removeABRCustomRule(rulename) {\n        if (rulename) {\n            let index = findABRCustomRuleIndex(rulename);\n            //if no rulename custom rule has been found, do nothing\n            if (index !== -1) {\n                // remove rule\n                customABRRule.splice(index, 1);\n            }\n        } else {\n            //if no rulename is defined, remove all ABR custome rules\n            customABRRule = [];\n        }\n    }\n\n    function getStableBufferTime() {\n        if (settings.get().streaming.lowLatencyEnabled) {\n            return getLiveDelay() * 0.6;\n        }\n\n        const stableBufferTime = settings.get().streaming.stableBufferTime;\n        return stableBufferTime > -1 ? stableBufferTime : settings.get().streaming.fastSwitchEnabled ? DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH : DEFAULT_MIN_BUFFER_TIME;\n    }\n\n    function getRetryAttemptsForType(type) {\n        const lowLatencyMultiplyFactor = !isNaN(settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor) ? settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor : LOW_LATENCY_MULTIPLY_FACTOR;\n\n        return settings.get().streaming.lowLatencyEnabled ? settings.get().streaming.retryAttempts[type] * lowLatencyMultiplyFactor : settings.get().streaming.retryAttempts[type];\n    }\n\n    function getRetryIntervalsForType(type) {\n        const lowLatencyReductionFactor = !isNaN(settings.get().streaming.retryIntervals.lowLatencyReductionFactor) ? settings.get().streaming.retryIntervals.lowLatencyReductionFactor : LOW_LATENCY_REDUCTION_FACTOR;\n\n        return settings.get().streaming.lowLatencyEnabled ? settings.get().streaming.retryIntervals[type] / lowLatencyReductionFactor : settings.get().streaming.retryIntervals[type];\n    }\n\n    function getLiveDelay() {\n        if (settings.get().streaming.lowLatencyEnabled) {\n            return settings.get().streaming.liveDelay || DEFAULT_LOW_LATENCY_LIVE_DELAY;\n        }\n        return settings.get().streaming.liveDelay;\n    }\n\n    function getLiveCatchupLatencyThreshold() {\n        try {\n            const liveCatchupLatencyThreshold = settings.get().streaming.liveCatchup.latencyThreshold;\n            const liveDelay = getLiveDelay();\n\n            if (liveCatchupLatencyThreshold !== null && !isNaN(liveCatchupLatencyThreshold)) {\n                return Math.max(liveCatchupLatencyThreshold, liveDelay);\n            }\n\n\n            const liveCatchupMinDrift = settings.get().streaming.liveCatchup.minDrift;\n            const maximumLiveDelay = !isNaN(liveDelay) && liveDelay ? !isNaN(liveCatchupMinDrift) ? settings.get().streaming.liveCatchup.minDrift + getLiveDelay() : getLiveDelay() : NaN;\n\n            if (maximumLiveDelay && !isNaN(maximumLiveDelay)) {\n                return Math.max(maximumLiveDelay * DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR, MINIMUM_LIVE_LATENCY_CATCHUP);\n            }\n\n            return NaN;\n\n        } catch (e) {\n            return NaN;\n        }\n    }\n\n    function addUTCTimingSource(schemeIdUri, value) {\n        removeUTCTimingSource(schemeIdUri, value); //check if it already exists and remove if so.\n        let vo = new UTCTiming();\n        vo.schemeIdUri = schemeIdUri;\n        vo.value = value;\n        UTCTimingSources.push(vo);\n    }\n\n    function getUTCTimingSources() {\n        return UTCTimingSources;\n    }\n\n    function removeUTCTimingSource(schemeIdUri, value) {\n        checkParameterType(schemeIdUri, 'string');\n        checkParameterType(value, 'string');\n        UTCTimingSources.forEach(function (obj, idx) {\n            if (obj.schemeIdUri === schemeIdUri && obj.value === value) {\n                UTCTimingSources.splice(idx, 1);\n            }\n        });\n    }\n\n    function clearDefaultUTCTimingSources() {\n        UTCTimingSources = [];\n    }\n\n    function restoreDefaultUTCTimingSources() {\n        let defaultUtcTimingSource = settings.get().streaming.utcSynchronization.defaultTimingSource;\n        addUTCTimingSource(defaultUtcTimingSource.scheme, defaultUtcTimingSource.value);\n    }\n\n    function setXHRWithCredentialsForType(type, value) {\n        if (!type) {\n            Object.keys(xhrWithCredentials).forEach(key => {\n                setXHRWithCredentialsForType(key, value);\n            });\n        } else {\n            xhrWithCredentials[type] = !!value;\n        }\n    }\n\n    function getXHRWithCredentialsForType(type) {\n        const useCreds = xhrWithCredentials[type];\n\n        return useCreds === undefined ? xhrWithCredentials.default : useCreds;\n    }\n\n    function getDefaultUtcTimingSource() {\n        return settings.get().streaming.utcSynchronization.defaultTimingSource;\n    }\n\n    function reset() {\n        //TODO need to figure out what props to persist across sessions and which to reset if any.\n        //setup();\n    }\n\n    instance = {\n        getABRCustomRules,\n        addABRCustomRule,\n        removeABRCustomRule,\n        getStableBufferTime,\n        getRetryAttemptsForType,\n        getRetryIntervalsForType,\n        getLiveDelay,\n        getLiveCatchupLatencyThreshold,\n        addUTCTimingSource,\n        removeUTCTimingSource,\n        getUTCTimingSources,\n        clearDefaultUTCTimingSources,\n        restoreDefaultUTCTimingSources,\n        setXHRWithCredentialsForType,\n        getXHRWithCredentialsForType,\n        getDefaultUtcTimingSource,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\n//TODO see if you can move this and not export and just getter to get default value.\nMediaPlayerModel.__dashjs_factory_name = 'MediaPlayerModel';\nexport default FactoryMaker.getSingletonFactory(MediaPlayerModel);\n"]},"metadata":{},"sourceType":"script"}