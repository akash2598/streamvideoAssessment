{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Constants = require('../constants/Constants');\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nvar _EventBus = require('../../core/EventBus');\n\nvar _EventBus2 = _interopRequireDefault(_EventBus);\n\nvar _Events = require('../../core/events/Events');\n\nvar _Events2 = _interopRequireDefault(_Events);\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _Debug = require('../../core/Debug');\n\nvar _Debug2 = _interopRequireDefault(_Debug);\n\nvar _imsc = require('imsc');\n\nvar _SupervisorTools = require('../utils/SupervisorTools');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction TextTracks() {\n  var context = this.context;\n  var eventBus = (0, _EventBus2.default)(context).getInstance();\n  var instance = void 0,\n      logger = void 0,\n      Cue = void 0,\n      videoModel = void 0,\n      textTrackQueue = void 0,\n      trackElementArr = void 0,\n      currentTrackIdx = void 0,\n      actualVideoLeft = void 0,\n      actualVideoTop = void 0,\n      actualVideoWidth = void 0,\n      actualVideoHeight = void 0,\n      captionContainer = void 0,\n      videoSizeCheckInterval = void 0,\n      fullscreenAttribute = void 0,\n      displayCCOnTop = void 0,\n      previousISDState = void 0,\n      topZIndex = void 0,\n      resizeObserver = void 0;\n\n  function setup() {\n    logger = (0, _Debug2.default)(context).getInstance().getLogger(instance);\n  }\n\n  function initialize() {\n    if (typeof window === 'undefined' || typeof navigator === 'undefined') {\n      return;\n    }\n\n    Cue = window.VTTCue || window.TextTrackCue;\n    textTrackQueue = [];\n    trackElementArr = [];\n    currentTrackIdx = -1;\n    actualVideoLeft = 0;\n    actualVideoTop = 0;\n    actualVideoWidth = 0;\n    actualVideoHeight = 0;\n    captionContainer = null;\n    videoSizeCheckInterval = null;\n    displayCCOnTop = false;\n    topZIndex = 2147483647;\n    previousISDState = null;\n\n    if (document.fullscreenElement !== undefined) {\n      fullscreenAttribute = 'fullscreenElement'; // Standard and Edge\n    } else if (document.webkitIsFullScreen !== undefined) {\n      fullscreenAttribute = 'webkitIsFullScreen'; // Chrome and Safari (and Edge)\n    } else if (document.msFullscreenElement) {\n      // IE11\n      fullscreenAttribute = 'msFullscreenElement';\n    } else if (document.mozFullScreen) {\n      // Firefox\n      fullscreenAttribute = 'mozFullScreen';\n    }\n  }\n\n  function createTrackForUserAgent(i) {\n    var kind = textTrackQueue[i].kind;\n    var label = textTrackQueue[i].id !== undefined ? textTrackQueue[i].id : textTrackQueue[i].lang;\n    var lang = textTrackQueue[i].lang;\n    var isTTML = textTrackQueue[i].isTTML;\n    var isEmbedded = textTrackQueue[i].isEmbedded;\n    var track = videoModel.addTextTrack(kind, label, lang, isTTML, isEmbedded);\n    return track;\n  }\n\n  function setDisplayCConTop(value) {\n    (0, _SupervisorTools.checkParameterType)(value, 'boolean');\n    displayCCOnTop = value;\n\n    if (!captionContainer || document[fullscreenAttribute]) {\n      return;\n    }\n\n    captionContainer.style.zIndex = value ? topZIndex : null;\n  }\n\n  function addTextTrack(textTrackInfoVO, totalTextTracks) {\n    if (textTrackQueue.length === totalTextTracks) {\n      logger.error('Trying to add too many tracks.');\n      return;\n    }\n\n    textTrackQueue.push(textTrackInfoVO);\n\n    if (textTrackQueue.length === totalTextTracks) {\n      textTrackQueue.sort(function (a, b) {\n        //Sort in same order as in manifest\n        return a.index - b.index;\n      });\n      captionContainer = videoModel.getTTMLRenderingDiv();\n      var defaultIndex = -1;\n\n      for (var i = 0; i < textTrackQueue.length; i++) {\n        var track = createTrackForUserAgent.call(this, i);\n        trackElementArr.push(track); //used to remove tracks from video element when added manually\n\n        if (textTrackQueue[i].defaultTrack) {\n          // track.default is an object property identifier that is a reserved word\n          // The following jshint directive is used to suppressed the warning \"Expected an identifier and instead saw 'default' (a reserved word)\"\n\n          /*jshint -W024 */\n          track.default = true;\n          defaultIndex = i;\n        }\n\n        var textTrack = getTrackByIdx(i);\n\n        if (textTrack) {\n          //each time a track is created, its mode should be showing by default\n          //sometime, it's not on Chrome\n          textTrack.mode = _Constants2.default.TEXT_SHOWING;\n\n          if (captionContainer && (textTrackQueue[i].isTTML || textTrackQueue[i].isEmbedded)) {\n            textTrack.renderingType = 'html';\n          } else {\n            textTrack.renderingType = 'default';\n          }\n        }\n\n        this.addCaptions(i, 0, textTrackQueue[i].captionData);\n        eventBus.trigger(_Events2.default.TEXT_TRACK_ADDED);\n      } //set current track index in textTrackQueue array\n\n\n      setCurrentTrackIdx.call(this, defaultIndex);\n\n      if (defaultIndex >= 0) {\n        var onMetadataLoaded = function onMetadataLoaded() {\n          var track = getTrackByIdx(defaultIndex);\n\n          if (track) {\n            checkVideoSize.call(this, track, true);\n          }\n\n          eventBus.off(_Events2.default.PLAYBACK_METADATA_LOADED, onMetadataLoaded, this);\n        };\n\n        eventBus.on(_Events2.default.PLAYBACK_METADATA_LOADED, onMetadataLoaded, this);\n\n        for (var idx = 0; idx < textTrackQueue.length; idx++) {\n          var videoTextTrack = getTrackByIdx(idx);\n\n          if (videoTextTrack) {\n            videoTextTrack.mode = idx === defaultIndex ? _Constants2.default.TEXT_SHOWING : _Constants2.default.TEXT_HIDDEN;\n          }\n        }\n      }\n\n      eventBus.trigger(_Events2.default.TEXT_TRACKS_QUEUE_INITIALIZED, {\n        index: currentTrackIdx,\n        tracks: textTrackQueue\n      }); //send default idx.\n    }\n  }\n\n  function getVideoVisibleVideoSize(viewWidth, viewHeight, videoWidth, videoHeight, aspectRatio, use80Percent) {\n    var viewAspectRatio = viewWidth / viewHeight;\n    var videoAspectRatio = videoWidth / videoHeight;\n    var videoPictureWidth = 0;\n    var videoPictureHeight = 0;\n\n    if (viewAspectRatio > videoAspectRatio) {\n      videoPictureHeight = viewHeight;\n      videoPictureWidth = videoPictureHeight / videoHeight * videoWidth;\n    } else {\n      videoPictureWidth = viewWidth;\n      videoPictureHeight = videoPictureWidth / videoWidth * videoHeight;\n    }\n\n    var videoPictureXAspect = 0;\n    var videoPictureYAspect = 0;\n    var videoPictureWidthAspect = 0;\n    var videoPictureHeightAspect = 0;\n    var videoPictureAspect = videoPictureWidth / videoPictureHeight;\n\n    if (videoPictureAspect > aspectRatio) {\n      videoPictureHeightAspect = videoPictureHeight;\n      videoPictureWidthAspect = videoPictureHeight * aspectRatio;\n    } else {\n      videoPictureWidthAspect = videoPictureWidth;\n      videoPictureHeightAspect = videoPictureWidth / aspectRatio;\n    }\n\n    videoPictureXAspect = (viewWidth - videoPictureWidthAspect) / 2;\n    videoPictureYAspect = (viewHeight - videoPictureHeightAspect) / 2;\n\n    if (use80Percent) {\n      return {\n        x: videoPictureXAspect + videoPictureWidthAspect * 0.1,\n        y: videoPictureYAspect + videoPictureHeightAspect * 0.1,\n        w: videoPictureWidthAspect * 0.8,\n        h: videoPictureHeightAspect * 0.8\n      };\n      /* Maximal picture size in videos aspect ratio */\n    } else {\n      return {\n        x: videoPictureXAspect,\n        y: videoPictureYAspect,\n        w: videoPictureWidthAspect,\n        h: videoPictureHeightAspect\n      };\n      /* Maximal picture size in videos aspect ratio */\n    }\n  }\n\n  function checkVideoSize(track, forceDrawing) {\n    var clientWidth = videoModel.getClientWidth();\n    var clientHeight = videoModel.getClientHeight();\n    var videoWidth = videoModel.getVideoWidth();\n    var videoHeight = videoModel.getVideoHeight();\n    var videoOffsetTop = videoModel.getVideoRelativeOffsetTop();\n    var videoOffsetLeft = videoModel.getVideoRelativeOffsetLeft();\n\n    if (videoWidth !== 0 && videoHeight !== 0) {\n      var aspectRatio = videoWidth / videoHeight;\n      var use80Percent = false;\n\n      if (track.isFromCEA608) {\n        // If this is CEA608 then use predefined aspect ratio\n        aspectRatio = 3.5 / 3.0;\n        use80Percent = true;\n      }\n\n      var realVideoSize = getVideoVisibleVideoSize.call(this, clientWidth, clientHeight, videoWidth, videoHeight, aspectRatio, use80Percent);\n      var newVideoWidth = realVideoSize.w;\n      var newVideoHeight = realVideoSize.h;\n      var newVideoLeft = realVideoSize.x;\n      var newVideoTop = realVideoSize.y;\n\n      if (newVideoWidth != actualVideoWidth || newVideoHeight != actualVideoHeight || newVideoLeft != actualVideoLeft || newVideoTop != actualVideoTop || forceDrawing) {\n        actualVideoLeft = newVideoLeft + videoOffsetLeft;\n        actualVideoTop = newVideoTop + videoOffsetTop;\n        actualVideoWidth = newVideoWidth;\n        actualVideoHeight = newVideoHeight;\n\n        if (captionContainer) {\n          var containerStyle = captionContainer.style;\n\n          if (containerStyle) {\n            containerStyle.left = actualVideoLeft + 'px';\n            containerStyle.top = actualVideoTop + 'px';\n            containerStyle.width = actualVideoWidth + 'px';\n            containerStyle.height = actualVideoHeight + 'px';\n            containerStyle.zIndex = fullscreenAttribute && document[fullscreenAttribute] || displayCCOnTop ? topZIndex : null;\n            eventBus.trigger(_Events2.default.CAPTION_CONTAINER_RESIZE);\n          }\n        } // Video view has changed size, so resize any active cues\n\n\n        var activeCues = track.activeCues;\n\n        if (activeCues) {\n          var len = activeCues.length;\n\n          for (var i = 0; i < len; ++i) {\n            var cue = activeCues[i];\n            cue.scaleCue(cue);\n          }\n        }\n      }\n    }\n  }\n\n  function scaleCue(activeCue) {\n    var videoWidth = actualVideoWidth;\n    var videoHeight = actualVideoHeight;\n    var key = void 0,\n        replaceValue = void 0,\n        valueFontSize = void 0,\n        valueLineHeight = void 0,\n        elements = void 0;\n\n    if (activeCue.cellResolution) {\n      var cellUnit = [videoWidth / activeCue.cellResolution[0], videoHeight / activeCue.cellResolution[1]];\n\n      if (activeCue.linePadding) {\n        for (key in activeCue.linePadding) {\n          if (activeCue.linePadding.hasOwnProperty(key)) {\n            var valueLinePadding = activeCue.linePadding[key];\n            replaceValue = (valueLinePadding * cellUnit[0]).toString(); // Compute the CellResolution unit in order to process properties using sizing (fontSize, linePadding, etc).\n\n            var elementsSpan = document.getElementsByClassName('spanPadding');\n\n            for (var i = 0; i < elementsSpan.length; i++) {\n              elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-left\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n              elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-right\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n            }\n          }\n        }\n      }\n\n      if (activeCue.fontSize) {\n        for (key in activeCue.fontSize) {\n          if (activeCue.fontSize.hasOwnProperty(key)) {\n            if (activeCue.fontSize[key][0] === '%') {\n              valueFontSize = activeCue.fontSize[key][1] / 100;\n            } else if (activeCue.fontSize[key][0] === 'c') {\n              valueFontSize = activeCue.fontSize[key][1];\n            }\n\n            replaceValue = (valueFontSize * cellUnit[1]).toString();\n\n            if (key !== 'defaultFontSize') {\n              elements = document.getElementsByClassName(key);\n            } else {\n              elements = document.getElementsByClassName('paragraph');\n            }\n\n            for (var j = 0; j < elements.length; j++) {\n              elements[j].style.cssText = elements[j].style.cssText.replace(/(font-size\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n            }\n          }\n        }\n\n        if (activeCue.lineHeight) {\n          for (key in activeCue.lineHeight) {\n            if (activeCue.lineHeight.hasOwnProperty(key)) {\n              if (activeCue.lineHeight[key][0] === '%') {\n                valueLineHeight = activeCue.lineHeight[key][1] / 100;\n              } else if (activeCue.fontSize[key][0] === 'c') {\n                valueLineHeight = activeCue.lineHeight[key][1];\n              }\n\n              replaceValue = (valueLineHeight * cellUnit[1]).toString();\n              elements = document.getElementsByClassName(key);\n\n              for (var k = 0; k < elements.length; k++) {\n                elements[k].style.cssText = elements[k].style.cssText.replace(/(line-height\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (activeCue.isd) {\n      var htmlCaptionDiv = document.getElementById(activeCue.cueID);\n\n      if (htmlCaptionDiv) {\n        captionContainer.removeChild(htmlCaptionDiv);\n      }\n\n      renderCaption(activeCue);\n    }\n  }\n\n  function renderCaption(cue) {\n    if (captionContainer) {\n      var finalCue = document.createElement('div');\n      captionContainer.appendChild(finalCue);\n      previousISDState = (0, _imsc.renderHTML)(cue.isd, finalCue, function (uri) {\n        var imsc1ImgUrnTester = /^(urn:)(mpeg:[a-z0-9][a-z0-9-]{0,31}:)(subs:)([0-9]+)$/;\n        var smpteImgUrnTester = /^#(.*)$/;\n\n        if (imsc1ImgUrnTester.test(uri)) {\n          var match = imsc1ImgUrnTester.exec(uri);\n          var imageId = parseInt(match[4], 10) - 1;\n          var imageData = btoa(cue.images[imageId]);\n          var dataUrl = 'data:image/png;base64,' + imageData;\n          return dataUrl;\n        } else if (smpteImgUrnTester.test(uri)) {\n          var _match = smpteImgUrnTester.exec(uri);\n\n          var _imageId = _match[1];\n\n          var _dataUrl = 'data:image/png;base64,' + cue.embeddedImages[_imageId];\n\n          return _dataUrl;\n        } else {\n          return null;\n        }\n      }, captionContainer.clientHeight, captionContainer.clientWidth, false\n      /*displayForcedOnlyMode*/\n      , function (err) {\n        logger.info('renderCaption :', err); //TODO add ErrorHandler management\n      }, previousISDState, true\n      /*enableRollUp*/\n      );\n      finalCue.id = cue.cueID;\n      eventBus.trigger(_Events2.default.CAPTION_RENDERED, {\n        captionDiv: finalCue,\n        currentTrackIdx: currentTrackIdx\n      });\n    }\n  }\n  /*\n  * Add captions to track, store for later adding, or add captions added before\n  */\n\n\n  function addCaptions(trackIdx, timeOffset, captionData) {\n    var track = getTrackByIdx(trackIdx);\n    var self = this;\n\n    if (!track) {\n      return;\n    }\n\n    if (!Array.isArray(captionData) || captionData.length === 0) {\n      return;\n    }\n\n    for (var item = 0; item < captionData.length; item++) {\n      var cue = void 0;\n      var currentItem = captionData[item];\n      track.cellResolution = currentItem.cellResolution;\n      track.isFromCEA608 = currentItem.isFromCEA608;\n\n      if (currentItem.type === 'html' && captionContainer) {\n        cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, '');\n        cue.cueHTMLElement = currentItem.cueHTMLElement;\n        cue.isd = currentItem.isd;\n        cue.images = currentItem.images;\n        cue.embeddedImages = currentItem.embeddedImages;\n        cue.cueID = currentItem.cueID;\n        cue.scaleCue = scaleCue.bind(self); //useful parameters for cea608 subtitles, not for TTML one.\n\n        cue.cellResolution = currentItem.cellResolution;\n        cue.lineHeight = currentItem.lineHeight;\n        cue.linePadding = currentItem.linePadding;\n        cue.fontSize = currentItem.fontSize;\n        captionContainer.style.left = actualVideoLeft + 'px';\n        captionContainer.style.top = actualVideoTop + 'px';\n        captionContainer.style.width = actualVideoWidth + 'px';\n        captionContainer.style.height = actualVideoHeight + 'px';\n\n        cue.onenter = function () {\n          if (track.mode === _Constants2.default.TEXT_SHOWING) {\n            if (this.isd) {\n              renderCaption(this);\n              logger.debug('Cue enter id:' + this.cueID);\n            } else {\n              captionContainer.appendChild(this.cueHTMLElement);\n              scaleCue.call(self, this);\n              eventBus.trigger(_Events2.default.CAPTION_RENDERED, {\n                captionDiv: this.cueHTMLElement,\n                currentTrackIdx: currentTrackIdx\n              });\n            }\n          }\n        };\n\n        cue.onexit = function () {\n          if (captionContainer) {\n            var divs = captionContainer.childNodes;\n\n            for (var i = 0; i < divs.length; ++i) {\n              if (divs[i].id === this.cueID) {\n                logger.debug('Cue exit id:' + divs[i].id);\n                captionContainer.removeChild(divs[i]);\n                --i;\n              }\n            }\n          }\n        };\n      } else {\n        if (currentItem.data) {\n          cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, currentItem.data);\n\n          if (currentItem.styles) {\n            if (currentItem.styles.align !== undefined && 'align' in cue) {\n              cue.align = currentItem.styles.align;\n            }\n\n            if (currentItem.styles.line !== undefined && 'line' in cue) {\n              cue.line = currentItem.styles.line;\n            }\n\n            if (currentItem.styles.position !== undefined && 'position' in cue) {\n              cue.position = currentItem.styles.position;\n            }\n\n            if (currentItem.styles.size !== undefined && 'size' in cue) {\n              cue.size = currentItem.styles.size;\n            }\n          }\n\n          cue.onenter = function () {\n            if (track.mode === _Constants2.default.TEXT_SHOWING) {\n              eventBus.trigger(_Events2.default.CAPTION_RENDERED, {\n                currentTrackIdx: currentTrackIdx\n              });\n            }\n          };\n        }\n      }\n\n      try {\n        if (cue) {\n          track.addCue(cue);\n        } else {\n          logger.error('impossible to display subtitles.');\n        }\n      } catch (e) {\n        // Edge crash, delete everything and start adding again\n        // @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11979877/\n        deleteTrackCues(track);\n        track.addCue(cue);\n        throw e;\n      }\n    }\n  }\n\n  function getTrackByIdx(idx) {\n    return idx >= 0 && textTrackQueue[idx] ? videoModel.getTextTrack(textTrackQueue[idx].kind, textTrackQueue[idx].id, textTrackQueue[idx].lang, textTrackQueue[idx].isTTML, textTrackQueue[idx].isEmbedded) : null;\n  }\n\n  function getCurrentTrackIdx() {\n    return currentTrackIdx;\n  }\n\n  function getTrackIdxForId(trackId) {\n    var idx = -1;\n\n    for (var i = 0; i < textTrackQueue.length; i++) {\n      if (textTrackQueue[i].id === trackId) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  function setCurrentTrackIdx(idx) {\n    var _this = this;\n\n    if (idx === currentTrackIdx) {\n      return;\n    }\n\n    currentTrackIdx = idx;\n    var track = getTrackByIdx(currentTrackIdx);\n    setCueStyleOnTrack.call(this, track);\n\n    if (videoSizeCheckInterval) {\n      clearInterval(videoSizeCheckInterval);\n      videoSizeCheckInterval = null;\n    }\n\n    if (track && track.renderingType === 'html') {\n      checkVideoSize.call(this, track, true);\n\n      if (window.ResizeObserver) {\n        resizeObserver = new window.ResizeObserver(function () {\n          checkVideoSize.call(_this, track, true);\n        });\n        resizeObserver.observe(videoModel.getElement());\n      } else {\n        videoSizeCheckInterval = setInterval(checkVideoSize.bind(this, track), 500);\n      }\n    }\n  }\n\n  function setCueStyleOnTrack(track) {\n    clearCaptionContainer.call(this);\n\n    if (track) {\n      if (track.renderingType === 'html') {\n        setNativeCueStyle.call(this);\n      } else {\n        removeNativeCueStyle.call(this);\n      }\n    } else {\n      removeNativeCueStyle.call(this);\n    }\n  }\n\n  function cueInRange(cue, start, end) {\n    return (isNaN(start) || cue.startTime >= start) && (isNaN(end) || cue.endTime <= end);\n  }\n\n  function deleteTrackCues(track, start, end) {\n    if (track.cues) {\n      var cues = track.cues;\n      var lastIdx = cues.length - 1;\n\n      for (var r = lastIdx; r >= 0; r--) {\n        if (cueInRange(cues[r], start, end)) {\n          track.removeCue(cues[r]);\n        }\n      }\n    }\n  }\n\n  function deleteCuesFromTrackIdx(trackIdx, start, end) {\n    var track = getTrackByIdx(trackIdx);\n\n    if (track) {\n      deleteTrackCues(track, start, end);\n    }\n  }\n\n  function deleteAllTextTracks() {\n    var ln = trackElementArr ? trackElementArr.length : 0;\n\n    for (var i = 0; i < ln; i++) {\n      var track = getTrackByIdx(i);\n\n      if (track) {\n        deleteTrackCues.call(this, track);\n        track.mode = 'disabled';\n      }\n    }\n\n    trackElementArr = [];\n    textTrackQueue = [];\n\n    if (videoSizeCheckInterval) {\n      clearInterval(videoSizeCheckInterval);\n      videoSizeCheckInterval = null;\n    }\n\n    if (resizeObserver && videoModel) {\n      resizeObserver.unobserve(videoModel.getElement());\n      resizeObserver = null;\n    }\n\n    currentTrackIdx = -1;\n    clearCaptionContainer.call(this);\n  }\n\n  function deleteTextTrack(idx) {\n    videoModel.removeChild(trackElementArr[idx]);\n    trackElementArr.splice(idx, 1);\n  }\n  /* Set native cue style to transparent background to avoid it being displayed. */\n\n\n  function setNativeCueStyle() {\n    var styleElement = document.getElementById('native-cue-style');\n\n    if (styleElement) {\n      return; //Already set\n    }\n\n    styleElement = document.createElement('style');\n    styleElement.id = 'native-cue-style';\n    document.head.appendChild(styleElement);\n    var stylesheet = styleElement.sheet;\n    var video = videoModel.getElement();\n\n    try {\n      if (video) {\n        if (video.id) {\n          stylesheet.insertRule('#' + video.id + '::cue {background: transparent}', 0);\n        } else if (video.classList.length !== 0) {\n          stylesheet.insertRule('.' + video.className + '::cue {background: transparent}', 0);\n        } else {\n          stylesheet.insertRule('video::cue {background: transparent}', 0);\n        }\n      }\n    } catch (e) {\n      logger.info('' + e.message);\n    }\n  }\n  /* Remove the extra cue style with transparent background for native cues. */\n\n\n  function removeNativeCueStyle() {\n    var styleElement = document.getElementById('native-cue-style');\n\n    if (styleElement) {\n      document.head.removeChild(styleElement);\n    }\n  }\n\n  function clearCaptionContainer() {\n    if (captionContainer) {\n      while (captionContainer.firstChild) {\n        captionContainer.removeChild(captionContainer.firstChild);\n      }\n    }\n  }\n\n  function setConfig(config) {\n    if (!config) {\n      return;\n    }\n\n    if (config.videoModel) {\n      videoModel = config.videoModel;\n    }\n  }\n\n  function setModeForTrackIdx(idx, mode) {\n    var track = getTrackByIdx(idx);\n\n    if (track && track.mode !== mode) {\n      track.mode = mode;\n    }\n  }\n\n  function getCurrentTrackInfo() {\n    return textTrackQueue[currentTrackIdx];\n  }\n\n  instance = {\n    initialize: initialize,\n    setDisplayCConTop: setDisplayCConTop,\n    addTextTrack: addTextTrack,\n    addCaptions: addCaptions,\n    getCurrentTrackIdx: getCurrentTrackIdx,\n    setCurrentTrackIdx: setCurrentTrackIdx,\n    getTrackIdxForId: getTrackIdxForId,\n    getCurrentTrackInfo: getCurrentTrackInfo,\n    setModeForTrackIdx: setModeForTrackIdx,\n    deleteCuesFromTrackIdx: deleteCuesFromTrackIdx,\n    deleteAllTextTracks: deleteAllTextTracks,\n    deleteTextTrack: deleteTextTrack,\n    setConfig: setConfig\n  };\n  setup();\n  return instance;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nTextTracks.__dashjs_factory_name = 'TextTracks';\nexports.default = _FactoryMaker2.default.getSingletonFactory(TextTracks);","map":{"version":3,"sources":["../../../../../src/streaming/text/TextTracks.js"],"names":["context","eventBus","instance","logger","Cue","videoModel","textTrackQueue","trackElementArr","currentTrackIdx","actualVideoLeft","actualVideoTop","actualVideoWidth","actualVideoHeight","captionContainer","videoSizeCheckInterval","fullscreenAttribute","displayCCOnTop","previousISDState","topZIndex","resizeObserver","window","document","kind","label","lang","isTTML","isEmbedded","track","value","a","b","defaultIndex","i","createTrackForUserAgent","textTrack","getTrackByIdx","Constants","Events","setCurrentTrackIdx","onMetadataLoaded","checkVideoSize","idx","videoTextTrack","index","tracks","viewAspectRatio","viewWidth","videoAspectRatio","videoWidth","videoPictureWidth","videoPictureHeight","videoPictureXAspect","videoPictureYAspect","videoPictureWidthAspect","videoPictureHeightAspect","videoPictureAspect","viewHeight","x","y","w","h","clientWidth","clientHeight","videoHeight","videoOffsetTop","videoOffsetLeft","aspectRatio","use80Percent","realVideoSize","getVideoVisibleVideoSize","newVideoWidth","newVideoHeight","newVideoLeft","newVideoTop","containerStyle","activeCues","len","cue","key","replaceValue","valueFontSize","valueLineHeight","elements","activeCue","cellUnit","valueLinePadding","elementsSpan","j","k","htmlCaptionDiv","renderCaption","finalCue","imsc1ImgUrnTester","smpteImgUrnTester","match","imageId","parseInt","imageData","btoa","dataUrl","captionDiv","self","Array","captionData","item","currentItem","scaleCue","divs","deleteTrackCues","setCueStyleOnTrack","clearInterval","setInterval","clearCaptionContainer","setNativeCueStyle","removeNativeCueStyle","isNaN","cues","lastIdx","r","cueInRange","ln","styleElement","stylesheet","video","e","config","initialize","setDisplayCConTop","addTextTrack","addCaptions","getCurrentTrackIdx","getTrackIdxForId","getCurrentTrackInfo","setModeForTrackIdx","deleteCuesFromTrackIdx","deleteAllTextTracks","deleteTextTrack","setConfig","setup","TextTracks","FactoryMaker"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport { renderHTML } from 'imsc';\nimport { checkParameterType } from '../utils/SupervisorTools';\n\nfunction TextTracks() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        Cue,\n        videoModel,\n        textTrackQueue,\n        trackElementArr,\n        currentTrackIdx,\n        actualVideoLeft,\n        actualVideoTop,\n        actualVideoWidth,\n        actualVideoHeight,\n        captionContainer,\n        videoSizeCheckInterval,\n        fullscreenAttribute,\n        displayCCOnTop,\n        previousISDState,\n        topZIndex,\n        resizeObserver;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function initialize() {\n        if (typeof window === 'undefined' || typeof navigator === 'undefined') {\n            return;\n        }\n\n        Cue = window.VTTCue || window.TextTrackCue;\n        textTrackQueue = [];\n        trackElementArr = [];\n        currentTrackIdx = -1;\n        actualVideoLeft = 0;\n        actualVideoTop = 0;\n        actualVideoWidth = 0;\n        actualVideoHeight = 0;\n        captionContainer = null;\n        videoSizeCheckInterval = null;\n        displayCCOnTop = false;\n        topZIndex = 2147483647;\n        previousISDState = null;\n\n        if (document.fullscreenElement !== undefined) {\n            fullscreenAttribute = 'fullscreenElement'; // Standard and Edge\n        } else if (document.webkitIsFullScreen !== undefined) {\n            fullscreenAttribute = 'webkitIsFullScreen'; // Chrome and Safari (and Edge)\n        } else if (document.msFullscreenElement) { // IE11\n            fullscreenAttribute = 'msFullscreenElement';\n        } else if (document.mozFullScreen) { // Firefox\n            fullscreenAttribute = 'mozFullScreen';\n        }\n    }\n\n    function createTrackForUserAgent (i) {\n        const kind = textTrackQueue[i].kind;\n        const label = textTrackQueue[i].id !== undefined ? textTrackQueue[i].id : textTrackQueue[i].lang;\n        const lang = textTrackQueue[i].lang;\n        const isTTML = textTrackQueue[i].isTTML;\n        const isEmbedded = textTrackQueue[i].isEmbedded;\n        const track = videoModel.addTextTrack(kind, label, lang, isTTML, isEmbedded);\n        return track;\n    }\n\n    function setDisplayCConTop(value) {\n        checkParameterType(value, 'boolean');\n        displayCCOnTop = value;\n        if (!captionContainer || document[fullscreenAttribute]) {\n            return;\n        }\n        captionContainer.style.zIndex = value ? topZIndex : null;\n    }\n\n    function addTextTrack(textTrackInfoVO, totalTextTracks) {\n        if (textTrackQueue.length === totalTextTracks) {\n            logger.error('Trying to add too many tracks.');\n            return;\n        }\n\n        textTrackQueue.push(textTrackInfoVO);\n\n        if (textTrackQueue.length === totalTextTracks) {\n            textTrackQueue.sort(function (a, b) { //Sort in same order as in manifest\n                return a.index - b.index;\n            });\n            captionContainer = videoModel.getTTMLRenderingDiv();\n            let defaultIndex = -1;\n            for (let i = 0 ; i < textTrackQueue.length; i++) {\n                const track = createTrackForUserAgent.call(this, i);\n                trackElementArr.push(track); //used to remove tracks from video element when added manually\n\n                if (textTrackQueue[i].defaultTrack) {\n                    // track.default is an object property identifier that is a reserved word\n                    // The following jshint directive is used to suppressed the warning \"Expected an identifier and instead saw 'default' (a reserved word)\"\n                    /*jshint -W024 */\n                    track.default = true;\n                    defaultIndex = i;\n                }\n\n                const textTrack = getTrackByIdx(i);\n                if (textTrack) {\n                    //each time a track is created, its mode should be showing by default\n                    //sometime, it's not on Chrome\n                    textTrack.mode = Constants.TEXT_SHOWING;\n                    if (captionContainer && (textTrackQueue[i].isTTML || textTrackQueue[i].isEmbedded)) {\n                        textTrack.renderingType = 'html';\n                    } else {\n                        textTrack.renderingType = 'default';\n                    }\n                }\n                this.addCaptions(i, 0, textTrackQueue[i].captionData);\n                eventBus.trigger(Events.TEXT_TRACK_ADDED);\n            }\n\n            //set current track index in textTrackQueue array\n            setCurrentTrackIdx.call(this, defaultIndex);\n\n            if (defaultIndex >= 0) {\n\n                let onMetadataLoaded = function () {\n                    const track = getTrackByIdx(defaultIndex);\n                    if (track) {\n                        checkVideoSize.call(this, track, true);\n                    }\n                    eventBus.off(Events.PLAYBACK_METADATA_LOADED, onMetadataLoaded, this);\n                };\n\n                eventBus.on(Events.PLAYBACK_METADATA_LOADED, onMetadataLoaded, this);\n\n                for (let idx = 0; idx < textTrackQueue.length; idx++) {\n                    const videoTextTrack = getTrackByIdx(idx);\n                    if (videoTextTrack) {\n                        videoTextTrack.mode = (idx === defaultIndex) ? Constants.TEXT_SHOWING : Constants.TEXT_HIDDEN;\n                    }\n                }\n            }\n\n            eventBus.trigger(Events.TEXT_TRACKS_QUEUE_INITIALIZED, {\n                index: currentTrackIdx,\n                tracks: textTrackQueue\n            }); //send default idx.\n        }\n    }\n\n    function getVideoVisibleVideoSize(viewWidth, viewHeight, videoWidth, videoHeight, aspectRatio, use80Percent) {\n        const viewAspectRatio = viewWidth / viewHeight;\n        const videoAspectRatio = videoWidth / videoHeight;\n\n        let videoPictureWidth = 0;\n        let videoPictureHeight = 0;\n\n        if (viewAspectRatio > videoAspectRatio) {\n            videoPictureHeight = viewHeight;\n            videoPictureWidth = (videoPictureHeight / videoHeight) * videoWidth;\n        } else {\n            videoPictureWidth = viewWidth;\n            videoPictureHeight = (videoPictureWidth / videoWidth) * videoHeight;\n        }\n\n        let videoPictureXAspect = 0;\n        let videoPictureYAspect = 0;\n        let videoPictureWidthAspect = 0;\n        let videoPictureHeightAspect = 0;\n        const videoPictureAspect = videoPictureWidth / videoPictureHeight;\n\n        if (videoPictureAspect > aspectRatio) {\n            videoPictureHeightAspect = videoPictureHeight;\n            videoPictureWidthAspect = videoPictureHeight * aspectRatio;\n        } else {\n            videoPictureWidthAspect = videoPictureWidth;\n            videoPictureHeightAspect = videoPictureWidth / aspectRatio;\n        }\n        videoPictureXAspect = (viewWidth - videoPictureWidthAspect) / 2;\n        videoPictureYAspect = (viewHeight - videoPictureHeightAspect) / 2;\n\n        if (use80Percent) {\n            return {\n                x: videoPictureXAspect + (videoPictureWidthAspect * 0.1),\n                y: videoPictureYAspect + (videoPictureHeightAspect * 0.1),\n                w: videoPictureWidthAspect * 0.8,\n                h: videoPictureHeightAspect * 0.8\n            }; /* Maximal picture size in videos aspect ratio */\n        } else {\n            return {\n                x: videoPictureXAspect,\n                y: videoPictureYAspect,\n                w: videoPictureWidthAspect,\n                h: videoPictureHeightAspect\n            }; /* Maximal picture size in videos aspect ratio */\n        }\n    }\n\n    function checkVideoSize(track, forceDrawing) {\n        const clientWidth = videoModel.getClientWidth();\n        const clientHeight = videoModel.getClientHeight();\n        const videoWidth = videoModel.getVideoWidth();\n        const videoHeight = videoModel.getVideoHeight();\n        const videoOffsetTop = videoModel.getVideoRelativeOffsetTop();\n        const videoOffsetLeft = videoModel.getVideoRelativeOffsetLeft();\n\n        if (videoWidth !== 0 && videoHeight !== 0) {\n\n            let aspectRatio =  videoWidth / videoHeight;\n            let use80Percent = false;\n            if (track.isFromCEA608) {\n                // If this is CEA608 then use predefined aspect ratio\n                aspectRatio = 3.5 / 3.0;\n                use80Percent = true;\n            }\n\n            const realVideoSize = getVideoVisibleVideoSize.call(this, clientWidth, clientHeight, videoWidth, videoHeight, aspectRatio, use80Percent);\n\n            const newVideoWidth = realVideoSize.w;\n            const newVideoHeight = realVideoSize.h;\n            const newVideoLeft = realVideoSize.x;\n            const newVideoTop = realVideoSize.y;\n\n            if (newVideoWidth != actualVideoWidth || newVideoHeight != actualVideoHeight || newVideoLeft != actualVideoLeft || newVideoTop != actualVideoTop || forceDrawing) {\n                actualVideoLeft = newVideoLeft + videoOffsetLeft;\n                actualVideoTop = newVideoTop + videoOffsetTop;\n                actualVideoWidth = newVideoWidth;\n                actualVideoHeight = newVideoHeight;\n\n                if (captionContainer) {\n                    const containerStyle = captionContainer.style;\n                    if (containerStyle) {\n                        containerStyle.left = actualVideoLeft + 'px';\n                        containerStyle.top = actualVideoTop + 'px';\n                        containerStyle.width = actualVideoWidth + 'px';\n                        containerStyle.height = actualVideoHeight + 'px';\n                        containerStyle.zIndex = (fullscreenAttribute && document[fullscreenAttribute]) || displayCCOnTop ? topZIndex : null;\n                        eventBus.trigger(Events.CAPTION_CONTAINER_RESIZE);\n                    }\n                }\n\n                // Video view has changed size, so resize any active cues\n                const activeCues = track.activeCues;\n                if (activeCues) {\n                    const len = activeCues.length;\n                    for (let i = 0; i < len; ++i) {\n                        const cue = activeCues[i];\n                        cue.scaleCue(cue);\n                    }\n                }\n            }\n        }\n    }\n\n    function scaleCue(activeCue) {\n        const videoWidth = actualVideoWidth;\n        const videoHeight = actualVideoHeight;\n        let key,\n            replaceValue,\n            valueFontSize,\n            valueLineHeight,\n            elements;\n\n        if (activeCue.cellResolution) {\n            const cellUnit = [videoWidth / activeCue.cellResolution[0], videoHeight / activeCue.cellResolution[1]];\n            if (activeCue.linePadding) {\n                for (key in activeCue.linePadding) {\n                    if (activeCue.linePadding.hasOwnProperty(key)) {\n                        const valueLinePadding = activeCue.linePadding[key];\n                        replaceValue = (valueLinePadding * cellUnit[0]).toString();\n                        // Compute the CellResolution unit in order to process properties using sizing (fontSize, linePadding, etc).\n                        const elementsSpan = document.getElementsByClassName('spanPadding');\n                        for (let i = 0; i < elementsSpan.length; i++) {\n                            elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-left\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                            elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-right\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                        }\n                    }\n                }\n            }\n\n            if (activeCue.fontSize) {\n                for (key in activeCue.fontSize) {\n                    if (activeCue.fontSize.hasOwnProperty(key)) {\n                        if (activeCue.fontSize[key][0] === '%') {\n                            valueFontSize = activeCue.fontSize[key][1] / 100;\n                        } else if (activeCue.fontSize[key][0] === 'c') {\n                            valueFontSize = activeCue.fontSize[key][1];\n                        }\n\n                        replaceValue = (valueFontSize * cellUnit[1]).toString();\n\n                        if (key !== 'defaultFontSize') {\n                            elements = document.getElementsByClassName(key);\n                        } else {\n                            elements = document.getElementsByClassName('paragraph');\n                        }\n\n                        for (let j = 0; j < elements.length; j++) {\n                            elements[j].style.cssText = elements[j].style.cssText.replace(/(font-size\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                        }\n                    }\n                }\n\n                if (activeCue.lineHeight) {\n                    for (key in activeCue.lineHeight) {\n                        if (activeCue.lineHeight.hasOwnProperty(key)) {\n                            if (activeCue.lineHeight[key][0] === '%') {\n                                valueLineHeight = activeCue.lineHeight[key][1] / 100;\n                            } else if (activeCue.fontSize[key][0] === 'c') {\n                                valueLineHeight = activeCue.lineHeight[key][1];\n                            }\n\n                            replaceValue = (valueLineHeight * cellUnit[1]).toString();\n                            elements = document.getElementsByClassName(key);\n                            for (let k = 0; k < elements.length; k++) {\n                                elements[k].style.cssText = elements[k].style.cssText.replace(/(line-height\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (activeCue.isd) {\n            let htmlCaptionDiv = document.getElementById(activeCue.cueID);\n            if (htmlCaptionDiv) {\n                captionContainer.removeChild(htmlCaptionDiv);\n            }\n            renderCaption(activeCue);\n        }\n    }\n\n    function renderCaption(cue) {\n        if (captionContainer) {\n            const finalCue = document.createElement('div');\n            captionContainer.appendChild(finalCue);\n            previousISDState = renderHTML(cue.isd, finalCue, function (uri) {\n                const imsc1ImgUrnTester = /^(urn:)(mpeg:[a-z0-9][a-z0-9-]{0,31}:)(subs:)([0-9]+)$/;\n                const smpteImgUrnTester = /^#(.*)$/;\n                if (imsc1ImgUrnTester.test(uri)) {\n                    const match = imsc1ImgUrnTester.exec(uri);\n                    const imageId = parseInt(match[4], 10) - 1;\n                    const imageData = btoa(cue.images[imageId]);\n                    const dataUrl = 'data:image/png;base64,' + imageData;\n                    return dataUrl;\n                } else if (smpteImgUrnTester.test(uri)) {\n                    const match = smpteImgUrnTester.exec(uri);\n                    const imageId = match[1];\n                    const dataUrl = 'data:image/png;base64,' + cue.embeddedImages[imageId];\n                    return dataUrl;\n                } else {\n                    return null;\n                }\n            }, captionContainer.clientHeight, captionContainer.clientWidth, false/*displayForcedOnlyMode*/, function (err) {\n                logger.info('renderCaption :', err);\n                //TODO add ErrorHandler management\n            }, previousISDState, true /*enableRollUp*/);\n            finalCue.id = cue.cueID;\n            eventBus.trigger(Events.CAPTION_RENDERED, { captionDiv: finalCue, currentTrackIdx });\n        }\n    }\n\n    /*\n     * Add captions to track, store for later adding, or add captions added before\n     */\n    function addCaptions(trackIdx, timeOffset, captionData) {\n        const track = getTrackByIdx(trackIdx);\n        const self = this;\n\n        if (!track) {\n            return;\n        }\n\n        if (!Array.isArray(captionData) || captionData.length === 0) {\n            return;\n        }\n\n        for (let item = 0; item < captionData.length; item++) {\n            let cue;\n            const currentItem = captionData[item];\n\n            track.cellResolution = currentItem.cellResolution;\n            track.isFromCEA608 = currentItem.isFromCEA608;\n\n            if (currentItem.type === 'html' && captionContainer) {\n                cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, '');\n                cue.cueHTMLElement = currentItem.cueHTMLElement;\n                cue.isd = currentItem.isd;\n                cue.images = currentItem.images;\n                cue.embeddedImages = currentItem.embeddedImages;\n                cue.cueID = currentItem.cueID;\n                cue.scaleCue = scaleCue.bind(self);\n                //useful parameters for cea608 subtitles, not for TTML one.\n                cue.cellResolution = currentItem.cellResolution;\n                cue.lineHeight = currentItem.lineHeight;\n                cue.linePadding = currentItem.linePadding;\n                cue.fontSize = currentItem.fontSize;\n\n                captionContainer.style.left = actualVideoLeft + 'px';\n                captionContainer.style.top = actualVideoTop + 'px';\n                captionContainer.style.width = actualVideoWidth + 'px';\n                captionContainer.style.height = actualVideoHeight + 'px';\n\n                cue.onenter = function () {\n                    if (track.mode === Constants.TEXT_SHOWING) {\n                        if (this.isd) {\n                            renderCaption(this);\n                            logger.debug('Cue enter id:' + this.cueID);\n                        } else {\n                            captionContainer.appendChild(this.cueHTMLElement);\n                            scaleCue.call(self, this);\n                            eventBus.trigger(Events.CAPTION_RENDERED, { captionDiv: this.cueHTMLElement, currentTrackIdx });\n                        }\n                    }\n                };\n\n                cue.onexit = function () {\n                    if (captionContainer) {\n                        const divs = captionContainer.childNodes;\n                        for (let i = 0; i < divs.length; ++i) {\n                            if (divs[i].id === this.cueID) {\n                                logger.debug('Cue exit id:' + divs[i].id);\n                                captionContainer.removeChild(divs[i]);\n                                --i;\n                            }\n                        }\n                    }\n                };\n            } else {\n                if (currentItem.data) {\n                    cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, currentItem.data);\n                    if (currentItem.styles) {\n                        if (currentItem.styles.align !== undefined && 'align' in cue) {\n                            cue.align = currentItem.styles.align;\n                        }\n                        if (currentItem.styles.line !== undefined && 'line' in cue) {\n                            cue.line = currentItem.styles.line;\n                        }\n                        if (currentItem.styles.position !== undefined && 'position' in cue) {\n                            cue.position = currentItem.styles.position;\n                        }\n                        if (currentItem.styles.size !== undefined && 'size' in cue) {\n                            cue.size = currentItem.styles.size;\n                        }\n                    }\n                    cue.onenter = function () {\n                        if (track.mode === Constants.TEXT_SHOWING) {\n                            eventBus.trigger(Events.CAPTION_RENDERED, { currentTrackIdx });\n                        }\n                    };\n                }\n            }\n            try {\n                if (cue) {\n                    track.addCue(cue);\n                } else {\n                    logger.error('impossible to display subtitles.');\n                }\n            } catch (e) {\n                // Edge crash, delete everything and start adding again\n                // @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11979877/\n                deleteTrackCues(track);\n                track.addCue(cue);\n                throw e;\n            }\n        }\n    }\n\n    function getTrackByIdx(idx) {\n        return idx >= 0 && textTrackQueue[idx] ?\n            videoModel.getTextTrack(textTrackQueue[idx].kind, textTrackQueue[idx].id, textTrackQueue[idx].lang, textTrackQueue[idx].isTTML, textTrackQueue[idx].isEmbedded) : null;\n    }\n\n    function getCurrentTrackIdx() {\n        return currentTrackIdx;\n    }\n\n    function getTrackIdxForId(trackId) {\n        let idx = -1;\n        for (let i = 0; i < textTrackQueue.length; i++) {\n            if (textTrackQueue[i].id === trackId) {\n                idx = i;\n                break;\n            }\n        }\n\n        return idx;\n    }\n\n    function setCurrentTrackIdx(idx) {\n        if (idx === currentTrackIdx) {\n            return;\n        }\n        currentTrackIdx = idx;\n        const track = getTrackByIdx(currentTrackIdx);\n        setCueStyleOnTrack.call(this, track);\n\n        if (videoSizeCheckInterval) {\n            clearInterval(videoSizeCheckInterval);\n            videoSizeCheckInterval = null;\n        }\n\n        if (track && track.renderingType === 'html') {\n            checkVideoSize.call(this, track, true);\n            if (window.ResizeObserver) {\n                resizeObserver = new window.ResizeObserver(() => {\n                    checkVideoSize.call(this, track, true);\n                });\n                resizeObserver.observe(videoModel.getElement());\n            } else {\n                videoSizeCheckInterval = setInterval(checkVideoSize.bind(this, track), 500);\n            }\n        }\n    }\n\n    function setCueStyleOnTrack(track) {\n        clearCaptionContainer.call(this);\n        if (track) {\n            if (track.renderingType === 'html') {\n                setNativeCueStyle.call(this);\n            } else {\n                removeNativeCueStyle.call(this);\n            }\n        } else {\n            removeNativeCueStyle.call(this);\n        }\n    }\n\n    function cueInRange(cue, start, end) {\n        return (isNaN(start) || cue.startTime >= start) && (isNaN(end) || cue.endTime <= end);\n    }\n\n    function deleteTrackCues(track, start, end) {\n        if (track.cues) {\n            const cues = track.cues;\n            const lastIdx = cues.length - 1;\n\n            for (let r = lastIdx; r >= 0 ; r--) {\n                if (cueInRange(cues[r], start, end)) {\n                    track.removeCue(cues[r]);\n                }\n            }\n        }\n    }\n\n    function deleteCuesFromTrackIdx(trackIdx, start, end) {\n        const track = getTrackByIdx(trackIdx);\n        if (track) {\n            deleteTrackCues(track, start, end);\n        }\n    }\n\n    function deleteAllTextTracks() {\n        const ln = trackElementArr ? trackElementArr.length : 0;\n        for (let i = 0; i < ln; i++) {\n            const track = getTrackByIdx(i);\n            if (track) {\n                deleteTrackCues.call(this, track);\n                track.mode = 'disabled';\n            }\n        }\n        trackElementArr = [];\n        textTrackQueue = [];\n        if (videoSizeCheckInterval) {\n            clearInterval(videoSizeCheckInterval);\n            videoSizeCheckInterval = null;\n        }\n        if (resizeObserver && videoModel) {\n            resizeObserver.unobserve(videoModel.getElement());\n            resizeObserver = null;\n        }\n        currentTrackIdx = -1;\n        clearCaptionContainer.call(this);\n    }\n\n    function deleteTextTrack(idx) {\n        videoModel.removeChild(trackElementArr[idx]);\n        trackElementArr.splice(idx, 1);\n    }\n\n    /* Set native cue style to transparent background to avoid it being displayed. */\n    function setNativeCueStyle() {\n        let styleElement = document.getElementById('native-cue-style');\n        if (styleElement) {\n            return; //Already set\n        }\n\n        styleElement = document.createElement('style');\n        styleElement.id = 'native-cue-style';\n        document.head.appendChild(styleElement);\n        const stylesheet = styleElement.sheet;\n        const video = videoModel.getElement();\n        try {\n            if (video) {\n                if (video.id) {\n                    stylesheet.insertRule('#' + video.id + '::cue {background: transparent}', 0);\n                } else if (video.classList.length !== 0) {\n                    stylesheet.insertRule('.' + video.className + '::cue {background: transparent}', 0);\n                } else {\n                    stylesheet.insertRule('video::cue {background: transparent}', 0);\n                }\n            }\n        } catch (e) {\n            logger.info('' + e.message);\n        }\n    }\n\n    /* Remove the extra cue style with transparent background for native cues. */\n    function removeNativeCueStyle() {\n        const styleElement = document.getElementById('native-cue-style');\n        if (styleElement) {\n            document.head.removeChild(styleElement);\n        }\n    }\n\n    function clearCaptionContainer() {\n        if (captionContainer) {\n            while (captionContainer.firstChild) {\n                captionContainer.removeChild(captionContainer.firstChild);\n            }\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    function setModeForTrackIdx(idx, mode) {\n        const track = getTrackByIdx(idx);\n        if (track && track.mode !== mode) {\n            track.mode = mode;\n        }\n    }\n\n    function getCurrentTrackInfo() {\n        return textTrackQueue[currentTrackIdx];\n    }\n\n    instance = {\n        initialize: initialize,\n        setDisplayCConTop: setDisplayCConTop,\n        addTextTrack: addTextTrack,\n        addCaptions: addCaptions,\n        getCurrentTrackIdx: getCurrentTrackIdx,\n        setCurrentTrackIdx: setCurrentTrackIdx,\n        getTrackIdxForId: getTrackIdxForId,\n        getCurrentTrackInfo: getCurrentTrackInfo,\n        setModeForTrackIdx: setModeForTrackIdx,\n        deleteCuesFromTrackIdx: deleteCuesFromTrackIdx,\n        deleteAllTextTracks: deleteAllTextTracks,\n        deleteTextTrack: deleteTextTrack,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nTextTracks.__dashjs_factory_name = 'TextTracks';\nexport default FactoryMaker.getSingletonFactory(TextTracks);\n"]},"metadata":{},"sourceType":"script"}