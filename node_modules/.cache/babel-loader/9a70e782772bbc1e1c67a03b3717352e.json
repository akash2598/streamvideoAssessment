{"ast":null,"code":"/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\n\n/**\r\n * @module imscHTML\r\n */\n;\n\n(function (imscHTML, imscNames, imscStyles) {\n  /**\r\n   * Function that maps <pre>smpte:background</pre> URIs to URLs resolving to image resource\r\n   * @callback IMGResolver\r\n   * @param {string} <pre>smpte:background</pre> URI\r\n   * @return {string} PNG resource URL\r\n   */\n\n  /**\r\n   * Renders an ISD object (returned by <pre>generateISD()</pre>) into a \r\n   * parent element, that must be attached to the DOM. The ISD will be rendered\r\n   * into a child <pre>div</pre>\r\n   * with heigh and width equal to the clientHeight and clientWidth of the element,\r\n   * unless explicitly specified otherwise by the caller. Images URIs specified \r\n   * by <pre>smpte:background</pre> attributes are mapped to image resource URLs\r\n   * by an <pre>imgResolver</pre> function. The latter takes the value of <code>smpte:background</code>\r\n   * attribute and an <code>img</code> DOM element as input, and is expected to\r\n   * set the <code>src</code> attribute of the <code>img</code> to the absolute URI of the image.\r\n   * <pre>displayForcedOnlyMode</pre> sets the (boolean)\r\n   * value of the IMSC1 displayForcedOnlyMode parameter. The function returns\r\n   * an opaque object that should passed in <code>previousISDState</code> when this function\r\n   * is called for the next ISD, otherwise <code>previousISDState</code> should be set to \r\n   * <code>null</code>.\r\n   * \r\n   * @param {Object} isd ISD to be rendered\r\n   * @param {Object} element Element into which the ISD is rendered\r\n   * @param {?IMGResolver} imgResolver Resolve <pre>smpte:background</pre> URIs into URLs.\r\n   * @param {?number} eheight Height (in pixel) of the child <div>div</div> or null \r\n   *                  to use clientHeight of the parent element\r\n   * @param {?number} ewidth Width (in pixel) of the child <div>div</div> or null\r\n   *                  to use clientWidth of the parent element\r\n   * @param {?boolean} displayForcedOnlyMode Value of the IMSC1 displayForcedOnlyMode parameter,\r\n   *                   or false if null         \r\n   * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback\r\n   * @param {Object} previousISDState State saved during processing of the previous ISD, or null if initial call\r\n   * @param {?boolean} enableRollUp Enables roll-up animations (see CEA 708)\r\n   * @return {Object} ISD state to be provided when this funtion is called for the next ISD\r\n   */\n  imscHTML.render = function (isd, element, imgResolver, eheight, ewidth, displayForcedOnlyMode, errorHandler, previousISDState, enableRollUp) {\n    /* maintain aspect ratio if specified */\n    var height = eheight || element.clientHeight;\n    var width = ewidth || element.clientWidth;\n\n    if (isd.aspectRatio !== null) {\n      var twidth = height * isd.aspectRatio;\n\n      if (twidth > width) {\n        height = Math.round(width / isd.aspectRatio);\n      } else {\n        width = twidth;\n      }\n    }\n\n    var rootcontainer = document.createElement(\"div\");\n    rootcontainer.style.position = \"relative\";\n    rootcontainer.style.width = width + \"px\";\n    rootcontainer.style.height = height + \"px\";\n    rootcontainer.style.margin = \"auto\";\n    rootcontainer.style.top = 0;\n    rootcontainer.style.bottom = 0;\n    rootcontainer.style.left = 0;\n    rootcontainer.style.right = 0;\n    rootcontainer.style.zIndex = 0;\n    var context = {\n      h: height,\n      w: width,\n      regionH: null,\n      regionW: null,\n      imgResolver: imgResolver,\n      displayForcedOnlyMode: displayForcedOnlyMode || false,\n      isd: isd,\n      errorHandler: errorHandler,\n      previousISDState: previousISDState,\n      enableRollUp: enableRollUp || false,\n      currentISDState: {},\n      flg: null,\n\n      /* current fillLineGap value if active, null otherwise */\n      lp: null,\n\n      /* current linePadding value if active, null otherwise */\n      mra: null,\n\n      /* current multiRowAlign value if active, null otherwise */\n      ipd: null,\n\n      /* inline progression direction (lr, rl, tb) */\n      bpd: null,\n\n      /* block progression direction (lr, rl, tb) */\n      ruby: null,\n\n      /* is ruby present in a <p> */\n      textEmphasis: null,\n\n      /* is textEmphasis present in a <p> */\n      rubyReserve: null\n      /* is rubyReserve applicable to a <p> */\n\n    };\n    element.appendChild(rootcontainer);\n\n    for (var i in isd.contents) {\n      processElement(context, rootcontainer, isd.contents[i], isd);\n    }\n\n    return context.currentISDState;\n  };\n\n  function processElement(context, dom_parent, isd_element, isd_parent) {\n    var e;\n\n    if (isd_element.kind === 'region') {\n      e = document.createElement(\"div\");\n      e.style.position = \"absolute\";\n    } else if (isd_element.kind === 'body') {\n      e = document.createElement(\"div\");\n    } else if (isd_element.kind === 'div') {\n      e = document.createElement(\"div\");\n    } else if (isd_element.kind === 'image') {\n      e = document.createElement(\"img\");\n\n      if (context.imgResolver !== null && isd_element.src !== null) {\n        var uri = context.imgResolver(isd_element.src, e);\n        if (uri) e.src = uri;\n        e.height = context.regionH;\n        e.width = context.regionW;\n      }\n    } else if (isd_element.kind === 'p') {\n      e = document.createElement(\"p\");\n    } else if (isd_element.kind === 'span') {\n      if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"container\") {\n        e = document.createElement(\"ruby\");\n        context.ruby = true;\n      } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"base\") {\n        e = document.createElement(\"rb\");\n      } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"text\") {\n        e = document.createElement(\"rt\");\n      } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"baseContainer\") {\n        e = document.createElement(\"rbc\");\n      } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"textContainer\") {\n        e = document.createElement(\"rtc\");\n      } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"delimiter\") {\n        /* ignore rp */\n        return;\n      } else {\n        e = document.createElement(\"span\");\n      } //e.textContent = isd_element.text;\n\n    } else if (isd_element.kind === 'br') {\n      e = document.createElement(\"br\");\n    }\n\n    if (!e) {\n      reportError(context.errorHandler, \"Error processing ISD element kind: \" + isd_element.kind);\n      return;\n    }\n    /* set language */\n\n\n    if (isd_element.lang) {\n      if (isd_element.kind === 'region' || isd_element.lang !== isd_parent.lang) {\n        e.lang = isd_element.lang;\n      }\n    }\n    /* add to parent */\n\n\n    dom_parent.appendChild(e);\n    /* override UA default margin */\n\n    /* TODO: should apply to <p> only */\n\n    e.style.margin = \"0\";\n    /* determine ipd and bpd */\n\n    if (isd_element.kind === \"region\") {\n      var wdir = isd_element.styleAttrs[imscStyles.byName.writingMode.qname];\n\n      if (wdir === \"lrtb\" || wdir === \"lr\") {\n        context.ipd = \"lr\";\n        context.bpd = \"tb\";\n      } else if (wdir === \"rltb\" || wdir === \"rl\") {\n        context.ipd = \"rl\";\n        context.bpd = \"tb\";\n      } else if (wdir === \"tblr\") {\n        context.ipd = \"tb\";\n        context.bpd = \"lr\";\n      } else if (wdir === \"tbrl\" || wdir === \"tb\") {\n        context.ipd = \"tb\";\n        context.bpd = \"rl\";\n      }\n    } else if (isd_element.kind === \"p\" && context.bpd === \"tb\") {\n      var pdir = isd_element.styleAttrs[imscStyles.byName.direction.qname];\n      context.ipd = pdir === \"ltr\" ? \"lr\" : \"rl\";\n    }\n    /* tranform TTML styles to CSS styles */\n\n\n    for (var i in STYLING_MAP_DEFS) {\n      var sm = STYLING_MAP_DEFS[i];\n      var attr = isd_element.styleAttrs[sm.qname];\n\n      if (attr !== undefined && sm.map !== null) {\n        sm.map(context, e, isd_element, attr);\n      }\n    }\n\n    var proc_e = e;\n    /* do we have linePadding ? */\n\n    var lp = isd_element.styleAttrs[imscStyles.byName.linePadding.qname];\n\n    if (lp && !lp.isZero()) {\n      var plength = lp.toUsedLength(context.w, context.h);\n\n      if (plength > 0) {\n        /* apply padding to the <p> so that line padding does not cause line wraps */\n        var padmeasure = Math.ceil(plength) + \"px\";\n\n        if (context.bpd === \"tb\") {\n          proc_e.style.paddingLeft = padmeasure;\n          proc_e.style.paddingRight = padmeasure;\n        } else {\n          proc_e.style.paddingTop = padmeasure;\n          proc_e.style.paddingBottom = padmeasure;\n        }\n\n        context.lp = lp;\n      }\n    } // do we have multiRowAlign?\n\n\n    var mra = isd_element.styleAttrs[imscStyles.byName.multiRowAlign.qname];\n\n    if (mra && mra !== \"auto\") {\n      /* create inline block to handle multirowAlign */\n      var s = document.createElement(\"span\");\n      s.style.display = \"inline-block\";\n      s.style.textAlign = mra;\n      e.appendChild(s);\n      proc_e = s;\n      context.mra = mra;\n    }\n    /* do we have rubyReserve? */\n\n\n    var rr = isd_element.styleAttrs[imscStyles.byName.rubyReserve.qname];\n\n    if (rr && rr[0] !== \"none\") {\n      context.rubyReserve = rr;\n    }\n    /* remember we are filling line gaps */\n\n\n    if (isd_element.styleAttrs[imscStyles.byName.fillLineGap.qname]) {\n      context.flg = true;\n    }\n\n    if (isd_element.kind === \"span\" && isd_element.text) {\n      var te = isd_element.styleAttrs[imscStyles.byName.textEmphasis.qname];\n\n      if (te && te.style !== \"none\") {\n        context.textEmphasis = true;\n      }\n\n      if (imscStyles.byName.textCombine.qname in isd_element.styleAttrs && isd_element.styleAttrs[imscStyles.byName.textCombine.qname] === \"all\") {\n        /* ignore tate-chu-yoku since line break cannot happen within */\n        e.textContent = isd_element.text;\n\n        if (te) {\n          applyTextEmphasis(context, e, isd_element, te);\n        }\n\n        ;\n      } else {\n        // wrap characters in spans to find the line wrap locations\n        var cbuf = '';\n\n        for (var j = 0; j < isd_element.text.length; j++) {\n          cbuf += isd_element.text.charAt(j);\n          var cc = isd_element.text.charCodeAt(j);\n\n          if (cc < 0xD800 || cc > 0xDBFF || j === isd_element.text.length) {\n            /* wrap the character(s) in a span unless it is a high surrogate */\n            var span = document.createElement(\"span\");\n            span.textContent = cbuf;\n            /* apply textEmphasis */\n\n            if (te) {\n              applyTextEmphasis(context, span, isd_element, te);\n            }\n\n            ;\n            e.appendChild(span);\n            cbuf = '';\n          }\n        }\n      }\n    }\n    /* process the children of the ISD element */\n\n\n    for (var k in isd_element.contents) {\n      processElement(context, proc_e, isd_element.contents[k], isd_element);\n    }\n    /* list of lines */\n\n\n    var linelist = [];\n    /* paragraph processing */\n\n    /* TODO: linePadding only supported for horizontal scripts */\n\n    if ((context.lp || context.mra || context.flg || context.ruby || context.textEmphasis || context.rubyReserve) && isd_element.kind === \"p\") {\n      constructLineList(context, proc_e, linelist, null);\n      /* apply rubyReserve */\n\n      if (context.rubyReserve) {\n        applyRubyReserve(linelist, context);\n        context.rubyReserve = null;\n      }\n      /* apply tts:rubyPosition=\"outside\" */\n\n\n      if (context.ruby || context.rubyReserve) {\n        applyRubyPosition(linelist, context);\n        context.ruby = null;\n      }\n      /* apply text emphasis \"outside\" position */\n\n\n      if (context.textEmphasis) {\n        applyTextEmphasisOutside(linelist, context);\n        context.textEmphasis = null;\n      }\n      /* insert line breaks for multirowalign */\n\n\n      if (context.mra) {\n        applyMultiRowAlign(linelist);\n        context.mra = null;\n      }\n      /* add linepadding */\n\n\n      if (context.lp) {\n        applyLinePadding(linelist, context.lp.toUsedLength(context.w, context.h), context);\n        context.lp = null;\n      }\n      /* fill line gaps linepadding */\n\n\n      if (context.flg) {\n        var par_edges = rect2edges(proc_e.getBoundingClientRect(), context);\n        applyFillLineGap(linelist, par_edges.before, par_edges.after, context);\n        context.flg = null;\n      }\n    }\n    /* region processing */\n\n\n    if (isd_element.kind === \"region\") {\n      /* build line list */\n      constructLineList(context, proc_e, linelist);\n      /* perform roll up if needed */\n\n      if (context.bpd === \"tb\" && context.enableRollUp && isd_element.contents.length > 0 && isd_element.styleAttrs[imscStyles.byName.displayAlign.qname] === 'after') {\n        /* horrible hack, perhaps default region id should be underscore everywhere? */\n        var rid = isd_element.id === '' ? '_' : isd_element.id;\n        var rb = new RegionPBuffer(rid, linelist);\n        context.currentISDState[rb.id] = rb;\n\n        if (context.previousISDState && rb.id in context.previousISDState && context.previousISDState[rb.id].plist.length > 0 && rb.plist.length > 1 && rb.plist[rb.plist.length - 2].text === context.previousISDState[rb.id].plist[context.previousISDState[rb.id].plist.length - 1].text) {\n          var body_elem = e.firstElementChild;\n          var h = rb.plist[rb.plist.length - 1].after - rb.plist[rb.plist.length - 1].before;\n          body_elem.style.bottom = \"-\" + h + \"px\";\n          body_elem.style.transition = \"transform 0.4s\";\n          body_elem.style.position = \"relative\";\n          body_elem.style.transform = \"translateY(-\" + h + \"px)\";\n        }\n      }\n      /* TODO: clean-up the spans ? */\n\n    }\n  }\n\n  function applyLinePadding(lineList, lp, context) {\n    for (var i in lineList) {\n      var l = lineList[i].elements.length;\n      var se = lineList[i].elements[lineList[i].start_elem];\n      var ee = lineList[i].elements[lineList[i].end_elem];\n      var pospadpxlen = Math.ceil(lp) + \"px\";\n      var negpadpxlen = \"-\" + Math.ceil(lp) + \"px\";\n\n      if (l !== 0) {\n        if (context.ipd === \"lr\") {\n          se.node.style.borderLeftColor = se.bgcolor || \"#00000000\";\n          se.node.style.borderLeftStyle = \"solid\";\n          se.node.style.borderLeftWidth = pospadpxlen;\n          se.node.style.marginLeft = negpadpxlen;\n        } else if (context.ipd === \"rl\") {\n          se.node.style.borderRightColor = se.bgcolor || \"#00000000\";\n          se.node.style.borderRightStyle = \"solid\";\n          se.node.style.borderRightWidth = pospadpxlen;\n          se.node.style.marginRight = negpadpxlen;\n        } else if (context.ipd === \"tb\") {\n          se.node.style.borderTopColor = se.bgcolor || \"#00000000\";\n          se.node.style.borderTopStyle = \"solid\";\n          se.node.style.borderTopWidth = pospadpxlen;\n          se.node.style.marginTop = negpadpxlen;\n        }\n\n        if (context.ipd === \"lr\") {\n          ee.node.style.borderRightColor = ee.bgcolor || \"#00000000\";\n          ee.node.style.borderRightStyle = \"solid\";\n          ee.node.style.borderRightWidth = pospadpxlen;\n          ee.node.style.marginRight = negpadpxlen;\n        } else if (context.ipd === \"rl\") {\n          ee.node.style.borderLeftColor = ee.bgcolor || \"#00000000\";\n          ee.node.style.borderLeftStyle = \"solid\";\n          ee.node.style.borderLeftWidth = pospadpxlen;\n          ee.node.style.marginLeft = negpadpxlen;\n        } else if (context.ipd === \"tb\") {\n          ee.node.style.borderBottomColor = ee.bgcolor || \"#00000000\";\n          ee.node.style.borderBottomStyle = \"solid\";\n          ee.node.style.borderBottomWidth = pospadpxlen;\n          ee.node.style.marginBottom = negpadpxlen;\n        }\n      }\n    }\n  }\n\n  function applyMultiRowAlign(lineList) {\n    /* apply an explicit br to all but the last line */\n    for (var i = 0; i < lineList.length - 1; i++) {\n      var l = lineList[i].elements.length;\n\n      if (l !== 0 && lineList[i].br === false) {\n        var br = document.createElement(\"br\");\n        var lastnode = lineList[i].elements[l - 1].node;\n        lastnode.parentElement.insertBefore(br, lastnode.nextSibling);\n      }\n    }\n  }\n\n  function applyTextEmphasisOutside(lineList, context) {\n    /* supports \"outside\" only */\n    for (var i = 0; i < lineList.length; i++) {\n      for (var j = 0; j < lineList[i].te.length; j++) {\n        /* skip if position already set */\n        if (lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] && lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] !== \"none\") continue;\n        var pos;\n\n        if (context.bpd === \"tb\") {\n          pos = i === 0 ? \"left over\" : \"left under\";\n        } else {\n          if (context.bpd === \"rl\") {\n            pos = i === 0 ? \"right under\" : \"left under\";\n          } else {\n            pos = i === 0 ? \"left under\" : \"right under\";\n          }\n        }\n\n        lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] = pos;\n      }\n    }\n  }\n\n  function applyRubyPosition(lineList, context) {\n    for (var i = 0; i < lineList.length; i++) {\n      for (var j = 0; j < lineList[i].rbc.length; j++) {\n        /* skip if ruby-position already set */\n        if (lineList[i].rbc[j].style[RUBYPOSITION_PROP]) continue;\n        var pos;\n\n        if (RUBYPOSITION_ISWK) {\n          /* WebKit exception */\n          pos = i === 0 ? \"before\" : \"after\";\n        } else if (context.bpd === \"tb\") {\n          pos = i === 0 ? \"over\" : \"under\";\n        } else {\n          if (context.bpd === \"rl\") {\n            pos = i === 0 ? \"over\" : \"under\";\n          } else {\n            pos = i === 0 ? \"under\" : \"over\";\n          }\n        }\n\n        lineList[i].rbc[j].style[RUBYPOSITION_PROP] = pos;\n      }\n    }\n  }\n\n  function applyRubyReserve(lineList, context) {\n    for (var i = 0; i < lineList.length; i++) {\n      var ruby = document.createElement(\"ruby\");\n      var rb = document.createElement(\"rb\");\n      rb.textContent = \"\\u200B\";\n      ruby.appendChild(rb);\n      var rt1;\n      var rt2;\n      var fs = context.rubyReserve[1].toUsedLength(context.w, context.h) + \"px\";\n\n      if (context.rubyReserve[0] === \"both\" || context.rubyReserve[0] === \"outside\" && lineList.length == 1) {\n        rt1 = document.createElement(\"rtc\");\n        rt1.style[RUBYPOSITION_PROP] = RUBYPOSITION_ISWK ? \"after\" : \"under\";\n        rt1.textContent = \"\\u200B\";\n        rt1.style.fontSize = fs;\n        rt2 = document.createElement(\"rtc\");\n        rt2.style[RUBYPOSITION_PROP] = RUBYPOSITION_ISWK ? \"before\" : \"over\";\n        rt2.textContent = \"\\u200B\";\n        rt2.style.fontSize = fs;\n        ruby.appendChild(rt1);\n        ruby.appendChild(rt2);\n      } else {\n        rt1 = document.createElement(\"rtc\");\n        rt1.textContent = \"\\u200B\";\n        rt1.style.fontSize = fs;\n        var pos;\n\n        if (context.rubyReserve[0] === \"after\" || context.rubyReserve[0] === \"outside\" && i > 0) {\n          pos = RUBYPOSITION_ISWK ? \"after\" : context.bpd === \"tb\" || context.bpd === \"rl\" ? \"under\" : \"over\";\n        } else {\n          pos = RUBYPOSITION_ISWK ? \"before\" : context.bpd === \"tb\" || context.bpd === \"rl\" ? \"over\" : \"under\";\n        }\n\n        rt1.style[RUBYPOSITION_PROP] = pos;\n        ruby.appendChild(rt1);\n      }\n      /* add in front of the first ruby element of the line, if it exists */\n\n\n      var sib = null;\n\n      for (var j = 0; j < lineList[i].rbc.length; j++) {\n        if (lineList[i].rbc[j].localName === 'ruby') {\n          sib = lineList[i].rbc[j];\n          /* copy specified style properties from the sibling ruby container */\n\n          for (var k = 0; k < sib.style.length; k++) {\n            ruby.style.setProperty(sib.style.item(k), sib.style.getPropertyValue(sib.style.item(k)));\n          }\n\n          break;\n        }\n      }\n      /* otherwise add before first span */\n\n\n      sib = sib || lineList[i].elements[0].node;\n      sib.parentElement.insertBefore(ruby, sib);\n    }\n  }\n\n  function applyFillLineGap(lineList, par_before, par_after, context) {\n    /* positive for BPD = lr and tb, negative for BPD = rl */\n    var s = Math.sign(par_after - par_before);\n\n    for (var i = 0; i <= lineList.length; i++) {\n      /* compute frontier between lines */\n      var frontier;\n\n      if (i === 0) {\n        frontier = par_before;\n      } else if (i === lineList.length) {\n        frontier = par_after;\n      } else {\n        frontier = (lineList[i].before + lineList[i - 1].after) / 2;\n      }\n      /* padding amount */\n\n\n      var pad;\n      /* current element */\n\n      var e;\n      /* before line */\n\n      if (i > 0) {\n        for (var j = 0; j < lineList[i - 1].elements.length; j++) {\n          if (lineList[i - 1].elements[j].bgcolor === null) continue;\n          e = lineList[i - 1].elements[j];\n\n          if (s * (e.after - frontier) < 0) {\n            pad = Math.ceil(Math.abs(frontier - e.after)) + \"px\";\n            e.node.style.backgroundColor = e.bgcolor;\n\n            if (context.bpd === \"lr\") {\n              e.node.style.paddingRight = pad;\n            } else if (context.bpd === \"rl\") {\n              e.node.style.paddingLeft = pad;\n            } else if (context.bpd === \"tb\") {\n              e.node.style.paddingBottom = pad;\n            }\n          }\n        }\n      }\n      /* after line */\n\n\n      if (i < lineList.length) {\n        for (var k = 0; k < lineList[i].elements.length; k++) {\n          e = lineList[i].elements[k];\n          if (e.bgcolor === null) continue;\n\n          if (s * (e.before - frontier) > 0) {\n            pad = Math.ceil(Math.abs(e.before - frontier)) + \"px\";\n            e.node.style.backgroundColor = e.bgcolor;\n\n            if (context.bpd === \"lr\") {\n              e.node.style.paddingLeft = pad;\n            } else if (context.bpd === \"rl\") {\n              e.node.style.paddingRight = pad;\n            } else if (context.bpd === \"tb\") {\n              e.node.style.paddingTop = pad;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function RegionPBuffer(id, lineList) {\n    this.id = id;\n    this.plist = lineList;\n  }\n\n  function rect2edges(rect, context) {\n    var edges = {\n      before: null,\n      after: null,\n      start: null,\n      end: null\n    };\n\n    if (context.bpd === \"tb\") {\n      edges.before = rect.top;\n      edges.after = rect.bottom;\n\n      if (context.ipd === \"lr\") {\n        edges.start = rect.left;\n        edges.end = rect.right;\n      } else {\n        edges.start = rect.right;\n        edges.end = rect.left;\n      }\n    } else if (context.bpd === \"lr\") {\n      edges.before = rect.left;\n      edges.after = rect.right;\n      edges.start = rect.top;\n      edges.end = rect.bottom;\n    } else if (context.bpd === \"rl\") {\n      edges.before = rect.right;\n      edges.after = rect.left;\n      edges.start = rect.top;\n      edges.end = rect.bottom;\n    }\n\n    return edges;\n  }\n\n  function constructLineList(context, element, llist, bgcolor) {\n    if (element.localName === \"rt\" || element.localName === \"rtc\") {\n      /* skip ruby annotations */\n      return;\n    }\n\n    var curbgcolor = element.style.backgroundColor || bgcolor;\n\n    if (element.childElementCount === 0) {\n      if (element.localName === 'span' || element.localName === 'rb') {\n        var r = element.getBoundingClientRect();\n        /* skip if span is not displayed */\n\n        if (r.height === 0 || r.width === 0) return;\n        var edges = rect2edges(r, context);\n\n        if (llist.length === 0 || !isSameLine(edges.before, edges.after, llist[llist.length - 1].before, llist[llist.length - 1].after)) {\n          llist.push({\n            before: edges.before,\n            after: edges.after,\n            start: edges.start,\n            end: edges.end,\n            start_elem: 0,\n            end_elem: 0,\n            elements: [],\n            rbc: [],\n            te: [],\n            text: \"\",\n            br: false\n          });\n        } else {\n          /* positive for BPD = lr and tb, negative for BPD = rl */\n          var bpd_dir = Math.sign(edges.after - edges.before);\n          /* positive for IPD = lr and tb, negative for IPD = rl */\n\n          var ipd_dir = Math.sign(edges.end - edges.start);\n          /* check if the line height has increased */\n\n          if (bpd_dir * (edges.before - llist[llist.length - 1].before) < 0) {\n            llist[llist.length - 1].before = edges.before;\n          }\n\n          if (bpd_dir * (edges.after - llist[llist.length - 1].after) > 0) {\n            llist[llist.length - 1].after = edges.after;\n          }\n\n          if (ipd_dir * (edges.start - llist[llist.length - 1].start) < 0) {\n            llist[llist.length - 1].start = edges.start;\n            llist[llist.length - 1].start_elem = llist[llist.length - 1].elements.length;\n          }\n\n          if (ipd_dir * (edges.end - llist[llist.length - 1].end) > 0) {\n            llist[llist.length - 1].end = edges.end;\n            llist[llist.length - 1].end_elem = llist[llist.length - 1].elements.length;\n          }\n        }\n\n        llist[llist.length - 1].text += element.textContent;\n        llist[llist.length - 1].elements.push({\n          node: element,\n          bgcolor: curbgcolor,\n          before: edges.before,\n          after: edges.after\n        });\n      } else if (element.localName === 'br' && llist.length !== 0) {\n        llist[llist.length - 1].br = true;\n      }\n    } else {\n      var child = element.firstChild;\n\n      while (child) {\n        if (child.nodeType === Node.ELEMENT_NODE) {\n          constructLineList(context, child, llist, curbgcolor);\n\n          if (child.localName === 'ruby' || child.localName === 'rtc') {\n            /* remember non-empty ruby and rtc elements so that tts:rubyPosition can be applied */\n            if (llist.length > 0) {\n              llist[llist.length - 1].rbc.push(child);\n            }\n          } else if (child.localName === 'span' && child.style[TEXTEMPHASISSTYLE_PROP] && child.style[TEXTEMPHASISSTYLE_PROP] !== \"none\") {\n            /* remember non-empty span elements with textEmphasis */\n            if (llist.length > 0) {\n              llist[llist.length - 1].te.push(child);\n            }\n          }\n        }\n\n        child = child.nextSibling;\n      }\n    }\n  }\n\n  function isSameLine(before1, after1, before2, after2) {\n    return after1 < after2 && before1 > before2 || after2 <= after1 && before2 >= before1;\n  }\n\n  function applyTextEmphasis(context, dom_element, isd_element, attr) {\n    /* ignore color (not used in IMSC 1.1) */\n    if (attr.style === \"none\") {\n      /* text-emphasis is not inherited and the default is none, so nothing to do */\n      return;\n    } else if (attr.style === \"auto\") {\n      dom_element.style[TEXTEMPHASISSTYLE_PROP] = \"filled\";\n    } else {\n      dom_element.style[TEXTEMPHASISSTYLE_PROP] = attr.style + \" \" + attr.symbol;\n    }\n    /* ignore \"outside\" position (set in postprocessing) */\n\n\n    if (attr.position === \"before\" || attr.position === \"after\") {\n      var pos;\n\n      if (context.bpd === \"tb\") {\n        pos = attr.position === \"before\" ? \"left over\" : \"left under\";\n      } else {\n        if (context.bpd === \"rl\") {\n          pos = attr.position === \"before\" ? \"right under\" : \"left under\";\n        } else {\n          pos = attr.position === \"before\" ? \"left under\" : \"right under\";\n        }\n      }\n\n      dom_element.style[TEXTEMPHASISPOSITION_PROP] = pos;\n    }\n  }\n\n  function HTMLStylingMapDefinition(qName, mapFunc) {\n    this.qname = qName;\n    this.map = mapFunc;\n  }\n\n  var STYLING_MAP_DEFS = [new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling backgroundColor\", function (context, dom_element, isd_element, attr) {\n    /* skip if transparent */\n    if (attr[3] === 0) return;\n    dom_element.style.backgroundColor = \"rgba(\" + attr[0].toString() + \",\" + attr[1].toString() + \",\" + attr[2].toString() + \",\" + (attr[3] / 255).toString() + \")\";\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling color\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.color = \"rgba(\" + attr[0].toString() + \",\" + attr[1].toString() + \",\" + attr[2].toString() + \",\" + (attr[3] / 255).toString() + \")\";\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling direction\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.direction = attr;\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling display\", function (context, dom_element, isd_element, attr) {}), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling displayAlign\", function (context, dom_element, isd_element, attr) {\n    /* see https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */\n\n    /* TODO: is this affected by writing direction? */\n    dom_element.style.display = \"flex\";\n    dom_element.style.flexDirection = \"column\";\n\n    if (attr === \"before\") {\n      dom_element.style.justifyContent = \"flex-start\";\n    } else if (attr === \"center\") {\n      dom_element.style.justifyContent = \"center\";\n    } else if (attr === \"after\") {\n      dom_element.style.justifyContent = \"flex-end\";\n    }\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling extent\", function (context, dom_element, isd_element, attr) {\n    /* TODO: this is super ugly */\n    context.regionH = attr.h.toUsedLength(context.w, context.h);\n    context.regionW = attr.w.toUsedLength(context.w, context.h);\n    /* \r\n     * CSS height/width are measured against the content rectangle,\r\n     * whereas TTML height/width include padding\r\n     */\n\n    var hdelta = 0;\n    var wdelta = 0;\n    var p = isd_element.styleAttrs[\"http://www.w3.org/ns/ttml#styling padding\"];\n\n    if (!p) {\n      /* error */\n    } else {\n      hdelta = p[0].toUsedLength(context.w, context.h) + p[2].toUsedLength(context.w, context.h);\n      wdelta = p[1].toUsedLength(context.w, context.h) + p[3].toUsedLength(context.w, context.h);\n    }\n\n    dom_element.style.height = context.regionH - hdelta + \"px\";\n    dom_element.style.width = context.regionW - wdelta + \"px\";\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling fontFamily\", function (context, dom_element, isd_element, attr) {\n    var rslt = [];\n    /* per IMSC1 */\n\n    for (var i in attr) {\n      if (attr[i] === \"monospaceSerif\") {\n        rslt.push(\"Courier New\");\n        rslt.push('\"Liberation Mono\"');\n        rslt.push(\"Courier\");\n        rslt.push(\"monospace\");\n      } else if (attr[i] === \"proportionalSansSerif\") {\n        rslt.push(\"Arial\");\n        rslt.push(\"Helvetica\");\n        rslt.push('\"Liberation Sans\"');\n        rslt.push(\"sans-serif\");\n      } else if (attr[i] === \"monospace\") {\n        rslt.push(\"monospace\");\n      } else if (attr[i] === \"sansSerif\") {\n        rslt.push(\"sans-serif\");\n      } else if (attr[i] === \"serif\") {\n        rslt.push(\"serif\");\n      } else if (attr[i] === \"monospaceSansSerif\") {\n        rslt.push(\"Consolas\");\n        rslt.push(\"monospace\");\n      } else if (attr[i] === \"proportionalSerif\") {\n        rslt.push(\"serif\");\n      } else {\n        rslt.push(attr[i]);\n      }\n    }\n\n    dom_element.style.fontFamily = rslt.join(\",\");\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling shear\", function (context, dom_element, isd_element, attr) {\n    /* return immediately if tts:shear is 0% since CSS transforms are not inherited*/\n    if (attr === 0) return;\n    var angle = attr * -0.9;\n    /* context.bpd is needed since writing mode is not inherited and sets the inline progression */\n\n    if (context.bpd === \"tb\") {\n      dom_element.style.transform = \"skewX(\" + angle + \"deg)\";\n    } else {\n      dom_element.style.transform = \"skewY(\" + angle + \"deg)\";\n    }\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling fontSize\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.fontSize = attr.toUsedLength(context.w, context.h) + \"px\";\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling fontStyle\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.fontStyle = attr;\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling fontWeight\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.fontWeight = attr;\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling lineHeight\", function (context, dom_element, isd_element, attr) {\n    if (attr === \"normal\") {\n      dom_element.style.lineHeight = \"normal\";\n    } else {\n      dom_element.style.lineHeight = attr.toUsedLength(context.w, context.h) + \"px\";\n    }\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling opacity\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.opacity = attr;\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling origin\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.top = attr.h.toUsedLength(context.w, context.h) + \"px\";\n    dom_element.style.left = attr.w.toUsedLength(context.w, context.h) + \"px\";\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling overflow\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.overflow = attr;\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling padding\", function (context, dom_element, isd_element, attr) {\n    /* attr: top,left,bottom,right*/\n\n    /* style: top right bottom left*/\n    var rslt = [];\n    rslt[0] = attr[0].toUsedLength(context.w, context.h) + \"px\";\n    rslt[1] = attr[3].toUsedLength(context.w, context.h) + \"px\";\n    rslt[2] = attr[2].toUsedLength(context.w, context.h) + \"px\";\n    rslt[3] = attr[1].toUsedLength(context.w, context.h) + \"px\";\n    dom_element.style.padding = rslt.join(\" \");\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling position\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.top = attr.h.toUsedLength(context.w, context.h) + \"px\";\n    dom_element.style.left = attr.w.toUsedLength(context.w, context.h) + \"px\";\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling rubyAlign\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.rubyAlign = attr === \"spaceAround\" ? \"space-around\" : \"center\";\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling rubyPosition\", function (context, dom_element, isd_element, attr) {\n    /* skip if \"outside\", which is handled by applyRubyPosition() */\n    if (attr === \"before\" || attr === \"after\") {\n      var pos;\n\n      if (RUBYPOSITION_ISWK) {\n        /* WebKit exception */\n        pos = attr;\n      } else if (context.bpd === \"tb\") {\n        pos = attr === \"before\" ? \"over\" : \"under\";\n      } else {\n        if (context.bpd === \"rl\") {\n          pos = attr === \"before\" ? \"over\" : \"under\";\n        } else {\n          pos = attr === \"before\" ? \"under\" : \"over\";\n        }\n      }\n      /* apply position to the parent dom_element, i.e. ruby or rtc */\n\n\n      dom_element.parentElement.style[RUBYPOSITION_PROP] = pos;\n    }\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling showBackground\", null), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling textAlign\", function (context, dom_element, isd_element, attr) {\n    var ta;\n    /* handle UAs that do not understand start or end */\n\n    if (attr === \"start\") {\n      ta = context.ipd === \"rl\" ? \"right\" : \"left\";\n    } else if (attr === \"end\") {\n      ta = context.ipd === \"rl\" ? \"left\" : \"right\";\n    } else {\n      ta = attr;\n    }\n\n    dom_element.style.textAlign = ta;\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling textDecoration\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.textDecoration = attr.join(\" \").replace(\"lineThrough\", \"line-through\");\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling textOutline\", function (context, dom_element, isd_element, attr) {\n    /* defer to tts:textShadow */\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling textShadow\", function (context, dom_element, isd_element, attr) {\n    var txto = isd_element.styleAttrs[imscStyles.byName.textOutline.qname];\n\n    if (attr === \"none\" && txto === \"none\") {\n      dom_element.style.textShadow = \"\";\n    } else {\n      var s = [];\n\n      if (txto !== \"none\") {\n        /* emulate text outline */\n        var to_color = \"rgba(\" + txto.color[0].toString() + \",\" + txto.color[1].toString() + \",\" + txto.color[2].toString() + \",\" + (txto.color[3] / 255).toString() + \")\";\n        s.push(\"1px 1px 1px \" + to_color);\n        s.push(\"-1px 1px 1px \" + to_color);\n        s.push(\"1px -1px 1px \" + to_color);\n        s.push(\"-1px -1px 1px \" + to_color);\n      }\n      /* add text shadow */\n\n\n      if (attr !== \"none\") {\n        for (var i in attr) {\n          s.push(attr[i].x_off.toUsedLength(context.w, context.h) + \"px \" + attr[i].y_off.toUsedLength(context.w, context.h) + \"px \" + attr[i].b_radius.toUsedLength(context.w, context.h) + \"px \" + \"rgba(\" + attr[i].color[0].toString() + \",\" + attr[i].color[1].toString() + \",\" + attr[i].color[2].toString() + \",\" + (attr[i].color[3] / 255).toString() + \")\");\n        }\n      }\n\n      dom_element.style.textShadow = s.join(\",\");\n    }\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling textCombine\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.textCombineUpright = attr;\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling textEmphasis\", function (context, dom_element, isd_element, attr) {\n    /* applied as part of HTML document construction */\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling unicodeBidi\", function (context, dom_element, isd_element, attr) {\n    var ub;\n\n    if (attr === 'bidiOverride') {\n      ub = \"bidi-override\";\n    } else {\n      ub = attr;\n    }\n\n    dom_element.style.unicodeBidi = ub;\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling visibility\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.visibility = attr;\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling wrapOption\", function (context, dom_element, isd_element, attr) {\n    if (attr === \"wrap\") {\n      if (isd_element.space === \"preserve\") {\n        dom_element.style.whiteSpace = \"pre-wrap\";\n      } else {\n        dom_element.style.whiteSpace = \"normal\";\n      }\n    } else {\n      if (isd_element.space === \"preserve\") {\n        dom_element.style.whiteSpace = \"pre\";\n      } else {\n        dom_element.style.whiteSpace = \"noWrap\";\n      }\n    }\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling writingMode\", function (context, dom_element, isd_element, attr) {\n    var wm;\n\n    if (attr === \"lrtb\" || attr === \"lr\") {\n      dom_element.style.writingMode = \"horizontal-tb\";\n    } else if (attr === \"rltb\" || attr === \"rl\") {\n      dom_element.style.writingMode = \"horizontal-tb\";\n    } else if (attr === \"tblr\") {\n      dom_element.style.writingMode = \"vertical-lr\";\n    } else if (attr === \"tbrl\" || attr === \"tb\") {\n      dom_element.style.writingMode = \"vertical-rl\";\n    }\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml#styling zIndex\", function (context, dom_element, isd_element, attr) {\n    dom_element.style.zIndex = attr;\n  }), new HTMLStylingMapDefinition(\"http://www.w3.org/ns/ttml/profile/imsc1#styling forcedDisplay\", function (context, dom_element, isd_element, attr) {\n    if (context.displayForcedOnlyMode && attr === false) {\n      dom_element.style.visibility = \"hidden\";\n    }\n  })];\n  var STYLMAP_BY_QNAME = {};\n\n  for (var i in STYLING_MAP_DEFS) {\n    STYLMAP_BY_QNAME[STYLING_MAP_DEFS[i].qname] = STYLING_MAP_DEFS[i];\n  }\n  /* CSS property names */\n\n\n  var RUBYPOSITION_ISWK = (\"webkitRubyPosition\" in window.getComputedStyle(document.documentElement));\n  var RUBYPOSITION_PROP = RUBYPOSITION_ISWK ? \"webkitRubyPosition\" : \"rubyPosition\";\n  var TEXTEMPHASISSTYLE_PROP = \"webkitTextEmphasisStyle\" in window.getComputedStyle(document.documentElement) ? \"webkitTextEmphasisStyle\" : \"textEmphasisStyle\";\n  var TEXTEMPHASISPOSITION_PROP = \"webkitTextEmphasisPosition\" in window.getComputedStyle(document.documentElement) ? \"webkitTextEmphasisPosition\" : \"textEmphasisPosition\";\n  /* error utilities */\n\n  function reportError(errorHandler, msg) {\n    if (errorHandler && errorHandler.error && errorHandler.error(msg)) throw msg;\n  }\n})(typeof exports === 'undefined' ? this.imscHTML = {} : exports, typeof imscNames === 'undefined' ? require(\"./names\") : imscNames, typeof imscStyles === 'undefined' ? require(\"./styles\") : imscStyles, typeof imscUtils === 'undefined' ? require(\"./utils\") : imscUtils);","map":{"version":3,"sources":["/Users/webwerks1/Documents/Project/React Js Training/streamvideo/node_modules/imsc/src/main/js/html.js"],"names":["imscHTML","imscNames","imscStyles","render","isd","element","imgResolver","eheight","ewidth","displayForcedOnlyMode","errorHandler","previousISDState","enableRollUp","height","clientHeight","width","clientWidth","aspectRatio","twidth","Math","round","rootcontainer","document","createElement","style","position","margin","top","bottom","left","right","zIndex","context","h","w","regionH","regionW","currentISDState","flg","lp","mra","ipd","bpd","ruby","textEmphasis","rubyReserve","appendChild","i","contents","processElement","dom_parent","isd_element","isd_parent","e","kind","src","uri","styleAttrs","byName","qname","reportError","lang","wdir","writingMode","pdir","direction","STYLING_MAP_DEFS","sm","attr","undefined","map","proc_e","linePadding","isZero","plength","toUsedLength","padmeasure","ceil","paddingLeft","paddingRight","paddingTop","paddingBottom","multiRowAlign","s","display","textAlign","rr","fillLineGap","text","te","textCombine","textContent","applyTextEmphasis","cbuf","j","length","charAt","cc","charCodeAt","span","k","linelist","constructLineList","applyRubyReserve","applyRubyPosition","applyTextEmphasisOutside","applyMultiRowAlign","applyLinePadding","par_edges","rect2edges","getBoundingClientRect","applyFillLineGap","before","after","displayAlign","rid","id","rb","RegionPBuffer","plist","body_elem","firstElementChild","transition","transform","lineList","l","elements","se","start_elem","ee","end_elem","pospadpxlen","negpadpxlen","node","borderLeftColor","bgcolor","borderLeftStyle","borderLeftWidth","marginLeft","borderRightColor","borderRightStyle","borderRightWidth","marginRight","borderTopColor","borderTopStyle","borderTopWidth","marginTop","borderBottomColor","borderBottomStyle","borderBottomWidth","marginBottom","br","lastnode","parentElement","insertBefore","nextSibling","TEXTEMPHASISPOSITION_PROP","pos","rbc","RUBYPOSITION_PROP","RUBYPOSITION_ISWK","rt1","rt2","fs","fontSize","sib","localName","setProperty","item","getPropertyValue","par_before","par_after","sign","frontier","pad","abs","backgroundColor","rect","edges","start","end","llist","curbgcolor","childElementCount","r","isSameLine","push","bpd_dir","ipd_dir","child","firstChild","nodeType","Node","ELEMENT_NODE","TEXTEMPHASISSTYLE_PROP","before1","after1","before2","after2","dom_element","symbol","HTMLStylingMapDefinition","qName","mapFunc","toString","color","flexDirection","justifyContent","hdelta","wdelta","p","rslt","fontFamily","join","angle","fontStyle","fontWeight","lineHeight","opacity","overflow","padding","rubyAlign","ta","textDecoration","replace","txto","textOutline","textShadow","to_color","x_off","y_off","b_radius","textCombineUpright","ub","unicodeBidi","visibility","space","whiteSpace","wm","STYLMAP_BY_QNAME","window","getComputedStyle","documentElement","msg","error","exports","require","imscUtils"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;;AACA,CAAC,UAAUA,QAAV,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAExC;AACJ;AACA;AACA;AACA;AACA;;AAGI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEIF,EAAAA,QAAQ,CAACG,MAAT,GAAkB,UAAUC,GAAV,EACVC,OADU,EAEVC,WAFU,EAGVC,OAHU,EAIVC,MAJU,EAKVC,qBALU,EAMVC,YANU,EAOVC,gBAPU,EAQVC,YARU,EASR;AAEN;AAEA,QAAIC,MAAM,GAAGN,OAAO,IAAIF,OAAO,CAACS,YAAhC;AACA,QAAIC,KAAK,GAAGP,MAAM,IAAIH,OAAO,CAACW,WAA9B;;AAEA,QAAIZ,GAAG,CAACa,WAAJ,KAAoB,IAAxB,EAA8B;AAE1B,UAAIC,MAAM,GAAGL,MAAM,GAAGT,GAAG,CAACa,WAA1B;;AAEA,UAAIC,MAAM,GAAGH,KAAb,EAAoB;AAEhBF,QAAAA,MAAM,GAAGM,IAAI,CAACC,KAAL,CAAWL,KAAK,GAAGX,GAAG,CAACa,WAAvB,CAAT;AAEH,OAJD,MAIO;AAEHF,QAAAA,KAAK,GAAGG,MAAR;AAEH;AAEJ;;AAED,QAAIG,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAApB;AAEAF,IAAAA,aAAa,CAACG,KAAd,CAAoBC,QAApB,GAA+B,UAA/B;AACAJ,IAAAA,aAAa,CAACG,KAAd,CAAoBT,KAApB,GAA4BA,KAAK,GAAG,IAApC;AACAM,IAAAA,aAAa,CAACG,KAAd,CAAoBX,MAApB,GAA6BA,MAAM,GAAG,IAAtC;AACAQ,IAAAA,aAAa,CAACG,KAAd,CAAoBE,MAApB,GAA6B,MAA7B;AACAL,IAAAA,aAAa,CAACG,KAAd,CAAoBG,GAApB,GAA0B,CAA1B;AACAN,IAAAA,aAAa,CAACG,KAAd,CAAoBI,MAApB,GAA6B,CAA7B;AACAP,IAAAA,aAAa,CAACG,KAAd,CAAoBK,IAApB,GAA2B,CAA3B;AACAR,IAAAA,aAAa,CAACG,KAAd,CAAoBM,KAApB,GAA4B,CAA5B;AACAT,IAAAA,aAAa,CAACG,KAAd,CAAoBO,MAApB,GAA6B,CAA7B;AAEA,QAAIC,OAAO,GAAG;AACVC,MAAAA,CAAC,EAAEpB,MADO;AAEVqB,MAAAA,CAAC,EAAEnB,KAFO;AAGVoB,MAAAA,OAAO,EAAE,IAHC;AAIVC,MAAAA,OAAO,EAAE,IAJC;AAKV9B,MAAAA,WAAW,EAAEA,WALH;AAMVG,MAAAA,qBAAqB,EAAEA,qBAAqB,IAAI,KANtC;AAOVL,MAAAA,GAAG,EAAEA,GAPK;AAQVM,MAAAA,YAAY,EAAEA,YARJ;AASVC,MAAAA,gBAAgB,EAAEA,gBATR;AAUVC,MAAAA,YAAY,EAAEA,YAAY,IAAI,KAVpB;AAWVyB,MAAAA,eAAe,EAAE,EAXP;AAYVC,MAAAA,GAAG,EAAE,IAZK;;AAYC;AACXC,MAAAA,EAAE,EAAE,IAbM;;AAaA;AACVC,MAAAA,GAAG,EAAE,IAdK;;AAcC;AACXC,MAAAA,GAAG,EAAE,IAfK;;AAeC;AACXC,MAAAA,GAAG,EAAE,IAhBK;;AAgBC;AACXC,MAAAA,IAAI,EAAE,IAjBI;;AAiBE;AACZC,MAAAA,YAAY,EAAE,IAlBJ;;AAkBU;AACpBC,MAAAA,WAAW,EAAE;AAAK;;AAnBR,KAAd;AAsBAxC,IAAAA,OAAO,CAACyC,WAAR,CAAoBzB,aAApB;;AAEA,SAAK,IAAI0B,CAAT,IAAc3C,GAAG,CAAC4C,QAAlB,EAA4B;AAExBC,MAAAA,cAAc,CAACjB,OAAD,EAAUX,aAAV,EAAyBjB,GAAG,CAAC4C,QAAJ,CAAaD,CAAb,CAAzB,EAA0C3C,GAA1C,CAAd;AAEH;;AAED,WAAO4B,OAAO,CAACK,eAAf;AAEH,GA5ED;;AA8EA,WAASY,cAAT,CAAwBjB,OAAxB,EAAiCkB,UAAjC,EAA6CC,WAA7C,EAA0DC,UAA1D,EAAsE;AAElE,QAAIC,CAAJ;;AAEA,QAAIF,WAAW,CAACG,IAAZ,KAAqB,QAAzB,EAAmC;AAE/BD,MAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAJ;AACA8B,MAAAA,CAAC,CAAC7B,KAAF,CAAQC,QAAR,GAAmB,UAAnB;AAEH,KALD,MAKO,IAAI0B,WAAW,CAACG,IAAZ,KAAqB,MAAzB,EAAiC;AAEpCD,MAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAJ;AAEH,KAJM,MAIA,IAAI4B,WAAW,CAACG,IAAZ,KAAqB,KAAzB,EAAgC;AAEnCD,MAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAJ;AAEH,KAJM,MAIA,IAAI4B,WAAW,CAACG,IAAZ,KAAqB,OAAzB,EAAkC;AAErCD,MAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAJ;;AAEA,UAAIS,OAAO,CAAC1B,WAAR,KAAwB,IAAxB,IAAgC6C,WAAW,CAACI,GAAZ,KAAoB,IAAxD,EAA8D;AAE1D,YAAIC,GAAG,GAAGxB,OAAO,CAAC1B,WAAR,CAAoB6C,WAAW,CAACI,GAAhC,EAAqCF,CAArC,CAAV;AAEA,YAAIG,GAAJ,EACIH,CAAC,CAACE,GAAF,GAAQC,GAAR;AAEJH,QAAAA,CAAC,CAACxC,MAAF,GAAWmB,OAAO,CAACG,OAAnB;AACAkB,QAAAA,CAAC,CAACtC,KAAF,GAAUiB,OAAO,CAACI,OAAlB;AAEH;AAEJ,KAhBM,MAgBA,IAAIe,WAAW,CAACG,IAAZ,KAAqB,GAAzB,EAA8B;AAEjCD,MAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAJ;AAEH,KAJM,MAIA,IAAI4B,WAAW,CAACG,IAAZ,KAAqB,MAAzB,EAAiC;AAEpC,UAAIH,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBf,IAAlB,CAAuBgB,KAA9C,MAAyD,WAA7D,EAA0E;AAEtEN,QAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAJ;AAEAS,QAAAA,OAAO,CAACW,IAAR,GAAe,IAAf;AAEH,OAND,MAMO,IAAIQ,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBf,IAAlB,CAAuBgB,KAA9C,MAAyD,MAA7D,EAAqE;AAExEN,QAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAJ;AAEH,OAJM,MAIA,IAAI4B,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBf,IAAlB,CAAuBgB,KAA9C,MAAyD,MAA7D,EAAqE;AAExEN,QAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAJ;AAGH,OALM,MAKA,IAAI4B,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBf,IAAlB,CAAuBgB,KAA9C,MAAyD,eAA7D,EAA8E;AAEjFN,QAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAJ;AAGH,OALM,MAKA,IAAI4B,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBf,IAAlB,CAAuBgB,KAA9C,MAAyD,eAA7D,EAA8E;AAEjFN,QAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAJ;AAGH,OALM,MAKA,IAAI4B,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBf,IAAlB,CAAuBgB,KAA9C,MAAyD,WAA7D,EAA0E;AAE7E;AAEA;AAEH,OANM,MAMA;AAEHN,QAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAJ;AAEH,OArCmC,CAuCpC;;AAEH,KAzCM,MAyCA,IAAI4B,WAAW,CAACG,IAAZ,KAAqB,IAAzB,EAA+B;AAElCD,MAAAA,CAAC,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAJ;AAEH;;AAED,QAAI,CAAC8B,CAAL,EAAQ;AAEJO,MAAAA,WAAW,CAAC5B,OAAO,CAACtB,YAAT,EAAuB,wCAAwCyC,WAAW,CAACG,IAA3E,CAAX;AAEA;AAEH;AAED;;;AAEA,QAAIH,WAAW,CAACU,IAAhB,EAAsB;AAElB,UAAIV,WAAW,CAACG,IAAZ,KAAqB,QAArB,IAAiCH,WAAW,CAACU,IAAZ,KAAqBT,UAAU,CAACS,IAArE,EAA2E;AACvER,QAAAA,CAAC,CAACQ,IAAF,GAASV,WAAW,CAACU,IAArB;AACH;AAEJ;AAED;;;AAEAX,IAAAA,UAAU,CAACJ,WAAX,CAAuBO,CAAvB;AAEA;;AACA;;AAEAA,IAAAA,CAAC,CAAC7B,KAAF,CAAQE,MAAR,GAAiB,GAAjB;AAEA;;AAEA,QAAIyB,WAAW,CAACG,IAAZ,KAAqB,QAAzB,EAAmC;AAE/B,UAAIQ,IAAI,GAAGX,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBK,WAAlB,CAA8BJ,KAArD,CAAX;;AAEA,UAAIG,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,IAAhC,EAAsC;AAElC9B,QAAAA,OAAO,CAACS,GAAR,GAAc,IAAd;AACAT,QAAAA,OAAO,CAACU,GAAR,GAAc,IAAd;AAEH,OALD,MAKO,IAAIoB,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,IAAhC,EAAsC;AAEzC9B,QAAAA,OAAO,CAACS,GAAR,GAAc,IAAd;AACAT,QAAAA,OAAO,CAACU,GAAR,GAAc,IAAd;AAEH,OALM,MAKA,IAAIoB,IAAI,KAAK,MAAb,EAAqB;AAExB9B,QAAAA,OAAO,CAACS,GAAR,GAAc,IAAd;AACAT,QAAAA,OAAO,CAACU,GAAR,GAAc,IAAd;AAEH,OALM,MAKA,IAAIoB,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,IAAhC,EAAsC;AAEzC9B,QAAAA,OAAO,CAACS,GAAR,GAAc,IAAd;AACAT,QAAAA,OAAO,CAACU,GAAR,GAAc,IAAd;AAEH;AAEJ,KA1BD,MA0BO,IAAIS,WAAW,CAACG,IAAZ,KAAqB,GAArB,IAA4BtB,OAAO,CAACU,GAAR,KAAgB,IAAhD,EAAsD;AAEzD,UAAIsB,IAAI,GAAGb,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBO,SAAlB,CAA4BN,KAAnD,CAAX;AAEA3B,MAAAA,OAAO,CAACS,GAAR,GAAcuB,IAAI,KAAK,KAAT,GAAiB,IAAjB,GAAwB,IAAtC;AAEH;AAED;;;AAEA,SAAK,IAAIjB,CAAT,IAAcmB,gBAAd,EAAgC;AAE5B,UAAIC,EAAE,GAAGD,gBAAgB,CAACnB,CAAD,CAAzB;AAEA,UAAIqB,IAAI,GAAGjB,WAAW,CAACM,UAAZ,CAAuBU,EAAE,CAACR,KAA1B,CAAX;;AAEA,UAAIS,IAAI,KAAKC,SAAT,IAAsBF,EAAE,CAACG,GAAH,KAAW,IAArC,EAA2C;AAEvCH,QAAAA,EAAE,CAACG,GAAH,CAAOtC,OAAP,EAAgBqB,CAAhB,EAAmBF,WAAnB,EAAgCiB,IAAhC;AAEH;AAEJ;;AAED,QAAIG,MAAM,GAAGlB,CAAb;AAEA;;AAEA,QAAId,EAAE,GAAGY,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBc,WAAlB,CAA8Bb,KAArD,CAAT;;AAEA,QAAIpB,EAAE,IAAK,CAAEA,EAAE,CAACkC,MAAH,EAAb,EAA2B;AAEvB,UAAIC,OAAO,GAAGnC,EAAE,CAACoC,YAAH,CAAgB3C,OAAO,CAACE,CAAxB,EAA2BF,OAAO,CAACC,CAAnC,CAAd;;AAGA,UAAIyC,OAAO,GAAG,CAAd,EAAiB;AAEb;AAEA,YAAIE,UAAU,GAAGzD,IAAI,CAAC0D,IAAL,CAAUH,OAAV,IAAqB,IAAtC;;AAEA,YAAI1C,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAEtB6B,UAAAA,MAAM,CAAC/C,KAAP,CAAasD,WAAb,GAA2BF,UAA3B;AACAL,UAAAA,MAAM,CAAC/C,KAAP,CAAauD,YAAb,GAA4BH,UAA5B;AAEH,SALD,MAKO;AAEHL,UAAAA,MAAM,CAAC/C,KAAP,CAAawD,UAAb,GAA0BJ,UAA1B;AACAL,UAAAA,MAAM,CAAC/C,KAAP,CAAayD,aAAb,GAA6BL,UAA7B;AAEH;;AAED5C,QAAAA,OAAO,CAACO,EAAR,GAAaA,EAAb;AACH;AACJ,KAlMiE,CAoMlE;;;AAEA,QAAIC,GAAG,GAAGW,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBwB,aAAlB,CAAgCvB,KAAvD,CAAV;;AAEA,QAAInB,GAAG,IAAIA,GAAG,KAAK,MAAnB,EAA2B;AAEvB;AAEA,UAAI2C,CAAC,GAAG7D,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAR;AAEA4D,MAAAA,CAAC,CAAC3D,KAAF,CAAQ4D,OAAR,GAAkB,cAAlB;AAEAD,MAAAA,CAAC,CAAC3D,KAAF,CAAQ6D,SAAR,GAAoB7C,GAApB;AAEAa,MAAAA,CAAC,CAACP,WAAF,CAAcqC,CAAd;AAEAZ,MAAAA,MAAM,GAAGY,CAAT;AAEAnD,MAAAA,OAAO,CAACQ,GAAR,GAAcA,GAAd;AAEH;AAED;;;AAEA,QAAI8C,EAAE,GAAGnC,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBb,WAAlB,CAA8Bc,KAArD,CAAT;;AAEA,QAAI2B,EAAE,IAAIA,EAAE,CAAC,CAAD,CAAF,KAAU,MAApB,EAA4B;AACxBtD,MAAAA,OAAO,CAACa,WAAR,GAAsByC,EAAtB;AACH;AAGD;;;AAEA,QAAInC,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkB6B,WAAlB,CAA8B5B,KAArD,CAAJ,EAAiE;AAC7D3B,MAAAA,OAAO,CAACM,GAAR,GAAc,IAAd;AACH;;AAGD,QAAIa,WAAW,CAACG,IAAZ,KAAqB,MAArB,IAA+BH,WAAW,CAACqC,IAA/C,EAAqD;AAEjD,UAAIC,EAAE,GAAGtC,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBd,YAAlB,CAA+Be,KAAtD,CAAT;;AAEA,UAAI8B,EAAE,IAAIA,EAAE,CAACjE,KAAH,KAAa,MAAvB,EAA+B;AAE3BQ,QAAAA,OAAO,CAACY,YAAR,GAAuB,IAAvB;AAEH;;AAED,UAAI1C,UAAU,CAACwD,MAAX,CAAkBgC,WAAlB,CAA8B/B,KAA9B,IAAuCR,WAAW,CAACM,UAAnD,IACIN,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBgC,WAAlB,CAA8B/B,KAArD,MAAgE,KADxE,EAC+E;AAE3E;AACAN,QAAAA,CAAC,CAACsC,WAAF,GAAgBxC,WAAW,CAACqC,IAA5B;;AAEA,YAAIC,EAAJ,EAAQ;AAEJG,UAAAA,iBAAiB,CAAC5D,OAAD,EAAUqB,CAAV,EAAaF,WAAb,EAA0BsC,EAA1B,CAAjB;AAEH;;AAAA;AAEJ,OAZD,MAYO;AAEH;AAEA,YAAII,IAAI,GAAG,EAAX;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3C,WAAW,CAACqC,IAAZ,CAAiBO,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAE9CD,UAAAA,IAAI,IAAI1C,WAAW,CAACqC,IAAZ,CAAiBQ,MAAjB,CAAwBF,CAAxB,CAAR;AAEA,cAAIG,EAAE,GAAG9C,WAAW,CAACqC,IAAZ,CAAiBU,UAAjB,CAA4BJ,CAA5B,CAAT;;AAEA,cAAIG,EAAE,GAAG,MAAL,IAAeA,EAAE,GAAG,MAApB,IAA8BH,CAAC,KAAK3C,WAAW,CAACqC,IAAZ,CAAiBO,MAAzD,EAAiE;AAE7D;AAEA,gBAAII,IAAI,GAAG7E,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AAEA4E,YAAAA,IAAI,CAACR,WAAL,GAAmBE,IAAnB;AAEA;;AAEA,gBAAIJ,EAAJ,EAAQ;AAEJG,cAAAA,iBAAiB,CAAC5D,OAAD,EAAUmE,IAAV,EAAgBhD,WAAhB,EAA6BsC,EAA7B,CAAjB;AAEH;;AAAA;AAEDpC,YAAAA,CAAC,CAACP,WAAF,CAAcqD,IAAd;AAEAN,YAAAA,IAAI,GAAG,EAAP;AAEH;AAEJ;AAEJ;AACJ;AAED;;;AAEA,SAAK,IAAIO,CAAT,IAAcjD,WAAW,CAACH,QAA1B,EAAoC;AAEhCC,MAAAA,cAAc,CAACjB,OAAD,EAAUuC,MAAV,EAAkBpB,WAAW,CAACH,QAAZ,CAAqBoD,CAArB,CAAlB,EAA2CjD,WAA3C,CAAd;AAEH;AAED;;;AAEA,QAAIkD,QAAQ,GAAG,EAAf;AAGA;;AACA;;AAEA,QAAI,CAACrE,OAAO,CAACO,EAAR,IAAcP,OAAO,CAACQ,GAAtB,IAA6BR,OAAO,CAACM,GAArC,IAA4CN,OAAO,CAACW,IAApD,IAA4DX,OAAO,CAACY,YAApE,IAAoFZ,OAAO,CAACa,WAA7F,KACIM,WAAW,CAACG,IAAZ,KAAqB,GAD7B,EACkC;AAE9BgD,MAAAA,iBAAiB,CAACtE,OAAD,EAAUuC,MAAV,EAAkB8B,QAAlB,EAA4B,IAA5B,CAAjB;AAEA;;AAEA,UAAIrE,OAAO,CAACa,WAAZ,EAAyB;AAErB0D,QAAAA,gBAAgB,CAACF,QAAD,EAAWrE,OAAX,CAAhB;AAEAA,QAAAA,OAAO,CAACa,WAAR,GAAsB,IAAtB;AAEH;AAED;;;AAEA,UAAIb,OAAO,CAACW,IAAR,IAAgBX,OAAO,CAACa,WAA5B,EAAyC;AAErC2D,QAAAA,iBAAiB,CAACH,QAAD,EAAWrE,OAAX,CAAjB;AAEAA,QAAAA,OAAO,CAACW,IAAR,GAAe,IAAf;AAEH;AAED;;;AAEA,UAAIX,OAAO,CAACY,YAAZ,EAA0B;AAEtB6D,QAAAA,wBAAwB,CAACJ,QAAD,EAAWrE,OAAX,CAAxB;AAEAA,QAAAA,OAAO,CAACY,YAAR,GAAuB,IAAvB;AAEH;AAED;;;AAEA,UAAIZ,OAAO,CAACQ,GAAZ,EAAiB;AAEbkE,QAAAA,kBAAkB,CAACL,QAAD,CAAlB;AAEArE,QAAAA,OAAO,CAACQ,GAAR,GAAc,IAAd;AAEH;AAED;;;AAEA,UAAIR,OAAO,CAACO,EAAZ,EAAgB;AAEZoE,QAAAA,gBAAgB,CAACN,QAAD,EAAWrE,OAAO,CAACO,EAAR,CAAWoC,YAAX,CAAwB3C,OAAO,CAACE,CAAhC,EAAmCF,OAAO,CAACC,CAA3C,CAAX,EAA0DD,OAA1D,CAAhB;AAEAA,QAAAA,OAAO,CAACO,EAAR,GAAa,IAAb;AAEH;AAED;;;AAEA,UAAIP,OAAO,CAACM,GAAZ,EAAiB;AAEb,YAAIsE,SAAS,GAAGC,UAAU,CAACtC,MAAM,CAACuC,qBAAP,EAAD,EAAiC9E,OAAjC,CAA1B;AAEA+E,QAAAA,gBAAgB,CAACV,QAAD,EAAWO,SAAS,CAACI,MAArB,EAA6BJ,SAAS,CAACK,KAAvC,EAA8CjF,OAA9C,CAAhB;AAEAA,QAAAA,OAAO,CAACM,GAAR,GAAc,IAAd;AAEH;AAEJ;AAGD;;;AAEA,QAAIa,WAAW,CAACG,IAAZ,KAAqB,QAAzB,EAAmC;AAE/B;AAEAgD,MAAAA,iBAAiB,CAACtE,OAAD,EAAUuC,MAAV,EAAkB8B,QAAlB,CAAjB;AAEA;;AAEA,UAAKrE,OAAO,CAACU,GAAR,KAAgB,IAAjB,IACIV,OAAO,CAACpB,YADZ,IAEIuC,WAAW,CAACH,QAAZ,CAAqB+C,MAArB,GAA8B,CAFlC,IAGI5C,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBwD,YAAlB,CAA+BvD,KAAtD,MAAiE,OAHzE,EAGkF;AAE9E;AAEA,YAAIwD,GAAG,GAAGhE,WAAW,CAACiE,EAAZ,KAAmB,EAAnB,GAAwB,GAAxB,GAA8BjE,WAAW,CAACiE,EAApD;AAEA,YAAIC,EAAE,GAAG,IAAIC,aAAJ,CAAkBH,GAAlB,EAAuBd,QAAvB,CAAT;AAEArE,QAAAA,OAAO,CAACK,eAAR,CAAwBgF,EAAE,CAACD,EAA3B,IAAiCC,EAAjC;;AAEA,YAAIrF,OAAO,CAACrB,gBAAR,IACI0G,EAAE,CAACD,EAAH,IAASpF,OAAO,CAACrB,gBADrB,IAEIqB,OAAO,CAACrB,gBAAR,CAAyB0G,EAAE,CAACD,EAA5B,EAAgCG,KAAhC,CAAsCxB,MAAtC,GAA+C,CAFnD,IAGIsB,EAAE,CAACE,KAAH,CAASxB,MAAT,GAAkB,CAHtB,IAIIsB,EAAE,CAACE,KAAH,CAASF,EAAE,CAACE,KAAH,CAASxB,MAAT,GAAkB,CAA3B,EAA8BP,IAA9B,KACAxD,OAAO,CAACrB,gBAAR,CAAyB0G,EAAE,CAACD,EAA5B,EAAgCG,KAAhC,CAAsCvF,OAAO,CAACrB,gBAAR,CAAyB0G,EAAE,CAACD,EAA5B,EAAgCG,KAAhC,CAAsCxB,MAAtC,GAA+C,CAArF,EAAwFP,IALhG,EAKsG;AAElG,cAAIgC,SAAS,GAAGnE,CAAC,CAACoE,iBAAlB;AAEA,cAAIxF,CAAC,GAAGoF,EAAE,CAACE,KAAH,CAASF,EAAE,CAACE,KAAH,CAASxB,MAAT,GAAkB,CAA3B,EAA8BkB,KAA9B,GAAsCI,EAAE,CAACE,KAAH,CAASF,EAAE,CAACE,KAAH,CAASxB,MAAT,GAAkB,CAA3B,EAA8BiB,MAA5E;AAEAQ,UAAAA,SAAS,CAAChG,KAAV,CAAgBI,MAAhB,GAAyB,MAAMK,CAAN,GAAU,IAAnC;AACAuF,UAAAA,SAAS,CAAChG,KAAV,CAAgBkG,UAAhB,GAA6B,gBAA7B;AACAF,UAAAA,SAAS,CAAChG,KAAV,CAAgBC,QAAhB,GAA2B,UAA3B;AACA+F,UAAAA,SAAS,CAAChG,KAAV,CAAgBmG,SAAhB,GAA4B,iBAAiB1F,CAAjB,GAAqB,KAAjD;AAEH;AAEJ;AAED;;AAEH;AACJ;;AAED,WAAS0E,gBAAT,CAA0BiB,QAA1B,EAAoCrF,EAApC,EAAwCP,OAAxC,EAAiD;AAE7C,SAAK,IAAIe,CAAT,IAAc6E,QAAd,EAAwB;AAEpB,UAAIC,CAAC,GAAGD,QAAQ,CAAC7E,CAAD,CAAR,CAAY+E,QAAZ,CAAqB/B,MAA7B;AAEA,UAAIgC,EAAE,GAAGH,QAAQ,CAAC7E,CAAD,CAAR,CAAY+E,QAAZ,CAAqBF,QAAQ,CAAC7E,CAAD,CAAR,CAAYiF,UAAjC,CAAT;AAEA,UAAIC,EAAE,GAAGL,QAAQ,CAAC7E,CAAD,CAAR,CAAY+E,QAAZ,CAAqBF,QAAQ,CAAC7E,CAAD,CAAR,CAAYmF,QAAjC,CAAT;AAEA,UAAIC,WAAW,GAAGhH,IAAI,CAAC0D,IAAL,CAAUtC,EAAV,IAAgB,IAAlC;AAEA,UAAI6F,WAAW,GAAG,MAAMjH,IAAI,CAAC0D,IAAL,CAAUtC,EAAV,CAAN,GAAsB,IAAxC;;AAEA,UAAIsF,CAAC,KAAK,CAAV,EAAa;AAET,YAAI7F,OAAO,CAACS,GAAR,KAAgB,IAApB,EAA0B;AAEtBsF,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAc8G,eAAd,GAAgCP,EAAE,CAACQ,OAAH,IAAc,WAA9C;AACAR,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAcgH,eAAd,GAAgC,OAAhC;AACAT,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAciH,eAAd,GAAgCN,WAAhC;AACAJ,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAckH,UAAd,GAA2BN,WAA3B;AAEH,SAPD,MAOO,IAAIpG,OAAO,CAACS,GAAR,KAAgB,IAApB,EAA0B;AAE7BsF,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAcmH,gBAAd,GAAiCZ,EAAE,CAACQ,OAAH,IAAc,WAA/C;AACAR,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAcoH,gBAAd,GAAiC,OAAjC;AACAb,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAcqH,gBAAd,GAAiCV,WAAjC;AACAJ,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAcsH,WAAd,GAA4BV,WAA5B;AAEH,SAPM,MAOA,IAAIpG,OAAO,CAACS,GAAR,KAAgB,IAApB,EAA0B;AAE7BsF,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAcuH,cAAd,GAA+BhB,EAAE,CAACQ,OAAH,IAAc,WAA7C;AACAR,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAcwH,cAAd,GAA+B,OAA/B;AACAjB,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAcyH,cAAd,GAA+Bd,WAA/B;AACAJ,UAAAA,EAAE,CAACM,IAAH,CAAQ7G,KAAR,CAAc0H,SAAd,GAA0Bd,WAA1B;AAEH;;AAED,YAAIpG,OAAO,CAACS,GAAR,KAAgB,IAApB,EAA0B;AAEtBwF,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAcmH,gBAAd,GAAiCV,EAAE,CAACM,OAAH,IAAe,WAAhD;AACAN,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAcoH,gBAAd,GAAiC,OAAjC;AACAX,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAcqH,gBAAd,GAAiCV,WAAjC;AACAF,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAcsH,WAAd,GAA4BV,WAA5B;AAEH,SAPD,MAOO,IAAIpG,OAAO,CAACS,GAAR,KAAgB,IAApB,EAA0B;AAE7BwF,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAc8G,eAAd,GAAgCL,EAAE,CAACM,OAAH,IAAc,WAA9C;AACAN,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAcgH,eAAd,GAAgC,OAAhC;AACAP,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAciH,eAAd,GAAgCN,WAAhC;AACAF,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAckH,UAAd,GAA2BN,WAA3B;AAEH,SAPM,MAOA,IAAIpG,OAAO,CAACS,GAAR,KAAgB,IAApB,EAA0B;AAE7BwF,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAc2H,iBAAd,GAAkClB,EAAE,CAACM,OAAH,IAAc,WAAhD;AACAN,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAc4H,iBAAd,GAAkC,OAAlC;AACAnB,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAc6H,iBAAd,GAAkClB,WAAlC;AACAF,UAAAA,EAAE,CAACI,IAAH,CAAQ7G,KAAR,CAAc8H,YAAd,GAA6BlB,WAA7B;AAEH;AAEJ;AAEJ;AAEJ;;AAED,WAAS1B,kBAAT,CAA4BkB,QAA5B,EAAsC;AAElC;AAEA,SAAK,IAAI7E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6E,QAAQ,CAAC7B,MAAT,GAAkB,CAAtC,EAAyChD,CAAC,EAA1C,EAA8C;AAE1C,UAAI8E,CAAC,GAAGD,QAAQ,CAAC7E,CAAD,CAAR,CAAY+E,QAAZ,CAAqB/B,MAA7B;;AAEA,UAAI8B,CAAC,KAAK,CAAN,IAAWD,QAAQ,CAAC7E,CAAD,CAAR,CAAYwG,EAAZ,KAAmB,KAAlC,EAAyC;AACrC,YAAIA,EAAE,GAAGjI,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAT;AAEA,YAAIiI,QAAQ,GAAG5B,QAAQ,CAAC7E,CAAD,CAAR,CAAY+E,QAAZ,CAAqBD,CAAC,GAAG,CAAzB,EAA4BQ,IAA3C;AAEAmB,QAAAA,QAAQ,CAACC,aAAT,CAAuBC,YAAvB,CAAoCH,EAApC,EAAwCC,QAAQ,CAACG,WAAjD;AACH;AAEJ;AAEJ;;AAED,WAASlD,wBAAT,CAAkCmB,QAAlC,EAA4C5F,OAA5C,EAAqD;AAEjD;AAEA,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6E,QAAQ,CAAC7B,MAA7B,EAAqChD,CAAC,EAAtC,EAA0C;AAEtC,WAAK,IAAI+C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,QAAQ,CAAC7E,CAAD,CAAR,CAAY0C,EAAZ,CAAeM,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAE5C;AAEA,YAAI8B,QAAQ,CAAC7E,CAAD,CAAR,CAAY0C,EAAZ,CAAeK,CAAf,EAAkBtE,KAAlB,CAAwBoI,yBAAxB,KACAhC,QAAQ,CAAC7E,CAAD,CAAR,CAAY0C,EAAZ,CAAeK,CAAf,EAAkBtE,KAAlB,CAAwBoI,yBAAxB,MAAuD,MAD3D,EAEI;AAEJ,YAAIC,GAAJ;;AAEA,YAAI7H,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAEtBmH,UAAAA,GAAG,GAAI9G,CAAC,KAAK,CAAP,GAAY,WAAZ,GAA0B,YAAhC;AAGH,SALD,MAKO;AAEH,cAAIf,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAEtBmH,YAAAA,GAAG,GAAI9G,CAAC,KAAK,CAAP,GAAY,aAAZ,GAA4B,YAAlC;AAEH,WAJD,MAIO;AAEH8G,YAAAA,GAAG,GAAI9G,CAAC,KAAK,CAAP,GAAY,YAAZ,GAA2B,aAAjC;AAEH;AAEJ;;AAED6E,QAAAA,QAAQ,CAAC7E,CAAD,CAAR,CAAY0C,EAAZ,CAAeK,CAAf,EAAkBtE,KAAlB,CAAwBoI,yBAAxB,IAAqDC,GAArD;AAEH;AAEJ;AAEJ;;AAED,WAASrD,iBAAT,CAA2BoB,QAA3B,EAAqC5F,OAArC,EAA8C;AAE1C,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6E,QAAQ,CAAC7B,MAA7B,EAAqChD,CAAC,EAAtC,EAA0C;AAEtC,WAAK,IAAI+C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,QAAQ,CAAC7E,CAAD,CAAR,CAAY+G,GAAZ,CAAgB/D,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAE7C;AAEA,YAAI8B,QAAQ,CAAC7E,CAAD,CAAR,CAAY+G,GAAZ,CAAgBhE,CAAhB,EAAmBtE,KAAnB,CAAyBuI,iBAAzB,CAAJ,EACI;AAEJ,YAAIF,GAAJ;;AAEA,YAAIG,iBAAJ,EAAuB;AAEnB;AAEAH,UAAAA,GAAG,GAAI9G,CAAC,KAAK,CAAP,GAAY,QAAZ,GAAuB,OAA7B;AAEH,SAND,MAMO,IAAIf,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAE7BmH,UAAAA,GAAG,GAAI9G,CAAC,KAAK,CAAP,GAAY,MAAZ,GAAqB,OAA3B;AAGH,SALM,MAKA;AAEH,cAAIf,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAEtBmH,YAAAA,GAAG,GAAI9G,CAAC,KAAK,CAAP,GAAY,MAAZ,GAAqB,OAA3B;AAEH,WAJD,MAIO;AAEH8G,YAAAA,GAAG,GAAI9G,CAAC,KAAK,CAAP,GAAY,OAAZ,GAAsB,MAA5B;AAEH;AAEJ;;AAED6E,QAAAA,QAAQ,CAAC7E,CAAD,CAAR,CAAY+G,GAAZ,CAAgBhE,CAAhB,EAAmBtE,KAAnB,CAAyBuI,iBAAzB,IAA8CF,GAA9C;AAEH;AAEJ;AAEJ;;AAED,WAAStD,gBAAT,CAA0BqB,QAA1B,EAAoC5F,OAApC,EAA6C;AAEzC,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6E,QAAQ,CAAC7B,MAA7B,EAAqChD,CAAC,EAAtC,EAA0C;AAEtC,UAAIJ,IAAI,GAAGrB,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AAEA,UAAI8F,EAAE,GAAG/F,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAT;AACA8F,MAAAA,EAAE,CAAC1B,WAAH,GAAiB,QAAjB;AAEAhD,MAAAA,IAAI,CAACG,WAAL,CAAiBuE,EAAjB;AAEA,UAAI4C,GAAJ;AACA,UAAIC,GAAJ;AAEA,UAAIC,EAAE,GAAGnI,OAAO,CAACa,WAAR,CAAoB,CAApB,EAAuB8B,YAAvB,CAAoC3C,OAAO,CAACE,CAA5C,EAA+CF,OAAO,CAACC,CAAvD,IAA4D,IAArE;;AAEA,UAAID,OAAO,CAACa,WAAR,CAAoB,CAApB,MAA2B,MAA3B,IAAsCb,OAAO,CAACa,WAAR,CAAoB,CAApB,MAA2B,SAA3B,IAAwC+E,QAAQ,CAAC7B,MAAT,IAAmB,CAArG,EAAyG;AAErGkE,QAAAA,GAAG,GAAG3I,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAN;AACA0I,QAAAA,GAAG,CAACzI,KAAJ,CAAUuI,iBAAV,IAA+BC,iBAAiB,GAAG,OAAH,GAAa,OAA7D;AACAC,QAAAA,GAAG,CAACtE,WAAJ,GAAkB,QAAlB;AACAsE,QAAAA,GAAG,CAACzI,KAAJ,CAAU4I,QAAV,GAAqBD,EAArB;AAEAD,QAAAA,GAAG,GAAG5I,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAN;AACA2I,QAAAA,GAAG,CAAC1I,KAAJ,CAAUuI,iBAAV,IAA+BC,iBAAiB,GAAG,QAAH,GAAc,MAA9D;AACAE,QAAAA,GAAG,CAACvE,WAAJ,GAAkB,QAAlB;AACAuE,QAAAA,GAAG,CAAC1I,KAAJ,CAAU4I,QAAV,GAAqBD,EAArB;AAEAxH,QAAAA,IAAI,CAACG,WAAL,CAAiBmH,GAAjB;AACAtH,QAAAA,IAAI,CAACG,WAAL,CAAiBoH,GAAjB;AAEH,OAfD,MAeO;AAEHD,QAAAA,GAAG,GAAG3I,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAN;AACA0I,QAAAA,GAAG,CAACtE,WAAJ,GAAkB,QAAlB;AACAsE,QAAAA,GAAG,CAACzI,KAAJ,CAAU4I,QAAV,GAAqBD,EAArB;AAEA,YAAIN,GAAJ;;AAEA,YAAI7H,OAAO,CAACa,WAAR,CAAoB,CAApB,MAA2B,OAA3B,IAAuCb,OAAO,CAACa,WAAR,CAAoB,CAApB,MAA2B,SAA3B,IAAwCE,CAAC,GAAG,CAAvF,EAA2F;AAEvF8G,UAAAA,GAAG,GAAGG,iBAAiB,GAAG,OAAH,GAAehI,OAAO,CAACU,GAAR,KAAgB,IAAhB,IAAwBV,OAAO,CAACU,GAAR,KAAgB,IAAzC,GAAiD,OAAjD,GAA2D,MAAhG;AAEH,SAJD,MAIO;AAEHmH,UAAAA,GAAG,GAAGG,iBAAiB,GAAG,QAAH,GAAgBhI,OAAO,CAACU,GAAR,KAAgB,IAAhB,IAAwBV,OAAO,CAACU,GAAR,KAAgB,IAAzC,GAAiD,MAAjD,GAA0D,OAAhG;AAEH;;AAEDuH,QAAAA,GAAG,CAACzI,KAAJ,CAAUuI,iBAAV,IAA+BF,GAA/B;AAEAlH,QAAAA,IAAI,CAACG,WAAL,CAAiBmH,GAAjB;AAEH;AAED;;;AAEA,UAAII,GAAG,GAAG,IAAV;;AAEA,WAAK,IAAIvE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,QAAQ,CAAC7E,CAAD,CAAR,CAAY+G,GAAZ,CAAgB/D,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAE7C,YAAI8B,QAAQ,CAAC7E,CAAD,CAAR,CAAY+G,GAAZ,CAAgBhE,CAAhB,EAAmBwE,SAAnB,KAAiC,MAArC,EAA6C;AAEzCD,UAAAA,GAAG,GAAGzC,QAAQ,CAAC7E,CAAD,CAAR,CAAY+G,GAAZ,CAAgBhE,CAAhB,CAAN;AAEA;;AAEA,eAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGiE,GAAG,CAAC7I,KAAJ,CAAUuE,MAA7B,EAAqCK,CAAC,EAAtC,EAA0C;AAEtCzD,YAAAA,IAAI,CAACnB,KAAL,CAAW+I,WAAX,CAAuBF,GAAG,CAAC7I,KAAJ,CAAUgJ,IAAV,CAAepE,CAAf,CAAvB,EAA0CiE,GAAG,CAAC7I,KAAJ,CAAUiJ,gBAAV,CAA2BJ,GAAG,CAAC7I,KAAJ,CAAUgJ,IAAV,CAAepE,CAAf,CAA3B,CAA1C;AAEH;;AAED;AACH;AAEJ;AAED;;;AAEAiE,MAAAA,GAAG,GAAGA,GAAG,IAAIzC,QAAQ,CAAC7E,CAAD,CAAR,CAAY+E,QAAZ,CAAqB,CAArB,EAAwBO,IAArC;AAEAgC,MAAAA,GAAG,CAACZ,aAAJ,CAAkBC,YAAlB,CAA+B/G,IAA/B,EAAqC0H,GAArC;AAEH;AAEJ;;AAED,WAAStD,gBAAT,CAA0Ba,QAA1B,EAAoC8C,UAApC,EAAgDC,SAAhD,EAA2D3I,OAA3D,EAAoE;AAEhE;AACA,QAAImD,CAAC,GAAGhE,IAAI,CAACyJ,IAAL,CAAUD,SAAS,GAAGD,UAAtB,CAAR;;AAEA,SAAK,IAAI3H,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI6E,QAAQ,CAAC7B,MAA9B,EAAsChD,CAAC,EAAvC,EAA2C;AAEvC;AAEA,UAAI8H,QAAJ;;AAEA,UAAI9H,CAAC,KAAK,CAAV,EAAa;AAET8H,QAAAA,QAAQ,GAAGH,UAAX;AAEH,OAJD,MAIO,IAAI3H,CAAC,KAAK6E,QAAQ,CAAC7B,MAAnB,EAA2B;AAE9B8E,QAAAA,QAAQ,GAAGF,SAAX;AAEH,OAJM,MAIA;AAEHE,QAAAA,QAAQ,GAAG,CAACjD,QAAQ,CAAC7E,CAAD,CAAR,CAAYiE,MAAZ,GAAqBY,QAAQ,CAAC7E,CAAC,GAAG,CAAL,CAAR,CAAgBkE,KAAtC,IAA+C,CAA1D;AAEH;AAED;;;AAEA,UAAI6D,GAAJ;AAEA;;AAEA,UAAIzH,CAAJ;AAEA;;AAEA,UAAIN,CAAC,GAAG,CAAR,EAAW;AAEP,aAAK,IAAI+C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,QAAQ,CAAC7E,CAAC,GAAG,CAAL,CAAR,CAAgB+E,QAAhB,CAAyB/B,MAA7C,EAAqDD,CAAC,EAAtD,EAA0D;AAEtD,cAAI8B,QAAQ,CAAC7E,CAAC,GAAG,CAAL,CAAR,CAAgB+E,QAAhB,CAAyBhC,CAAzB,EAA4ByC,OAA5B,KAAwC,IAA5C,EACI;AAEJlF,UAAAA,CAAC,GAAGuE,QAAQ,CAAC7E,CAAC,GAAG,CAAL,CAAR,CAAgB+E,QAAhB,CAAyBhC,CAAzB,CAAJ;;AAEA,cAAIX,CAAC,IAAI9B,CAAC,CAAC4D,KAAF,GAAU4D,QAAd,CAAD,GAA2B,CAA/B,EAAkC;AAE9BC,YAAAA,GAAG,GAAG3J,IAAI,CAAC0D,IAAL,CAAU1D,IAAI,CAAC4J,GAAL,CAASF,QAAQ,GAAGxH,CAAC,CAAC4D,KAAtB,CAAV,IAA0C,IAAhD;AAEA5D,YAAAA,CAAC,CAACgF,IAAF,CAAO7G,KAAP,CAAawJ,eAAb,GAA+B3H,CAAC,CAACkF,OAAjC;;AAEA,gBAAIvG,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAEtBW,cAAAA,CAAC,CAACgF,IAAF,CAAO7G,KAAP,CAAauD,YAAb,GAA4B+F,GAA5B;AAGH,aALD,MAKO,IAAI9I,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAE7BW,cAAAA,CAAC,CAACgF,IAAF,CAAO7G,KAAP,CAAasD,WAAb,GAA2BgG,GAA3B;AAEH,aAJM,MAIA,IAAI9I,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAE7BW,cAAAA,CAAC,CAACgF,IAAF,CAAO7G,KAAP,CAAayD,aAAb,GAA6B6F,GAA7B;AAEH;AAEJ;AAEJ;AAEJ;AAED;;;AAEA,UAAI/H,CAAC,GAAG6E,QAAQ,CAAC7B,MAAjB,EAAyB;AAErB,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwB,QAAQ,CAAC7E,CAAD,CAAR,CAAY+E,QAAZ,CAAqB/B,MAAzC,EAAiDK,CAAC,EAAlD,EAAsD;AAElD/C,UAAAA,CAAC,GAAGuE,QAAQ,CAAC7E,CAAD,CAAR,CAAY+E,QAAZ,CAAqB1B,CAArB,CAAJ;AAEA,cAAI/C,CAAC,CAACkF,OAAF,KAAc,IAAlB,EACI;;AAEJ,cAAIpD,CAAC,IAAI9B,CAAC,CAAC2D,MAAF,GAAW6D,QAAf,CAAD,GAA4B,CAAhC,EAAmC;AAE/BC,YAAAA,GAAG,GAAG3J,IAAI,CAAC0D,IAAL,CAAU1D,IAAI,CAAC4J,GAAL,CAAS1H,CAAC,CAAC2D,MAAF,GAAW6D,QAApB,CAAV,IAA2C,IAAjD;AAEAxH,YAAAA,CAAC,CAACgF,IAAF,CAAO7G,KAAP,CAAawJ,eAAb,GAA+B3H,CAAC,CAACkF,OAAjC;;AAEA,gBAAIvG,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAEtBW,cAAAA,CAAC,CAACgF,IAAF,CAAO7G,KAAP,CAAasD,WAAb,GAA2BgG,GAA3B;AAGH,aALD,MAKO,IAAI9I,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAE7BW,cAAAA,CAAC,CAACgF,IAAF,CAAO7G,KAAP,CAAauD,YAAb,GAA4B+F,GAA5B;AAGH,aALM,MAKA,IAAI9I,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAE7BW,cAAAA,CAAC,CAACgF,IAAF,CAAO7G,KAAP,CAAawD,UAAb,GAA0B8F,GAA1B;AAEH;AAEJ;AAEJ;AAEJ;AAEJ;AAEJ;;AAED,WAASxD,aAAT,CAAuBF,EAAvB,EAA2BQ,QAA3B,EAAqC;AAEjC,SAAKR,EAAL,GAAUA,EAAV;AAEA,SAAKG,KAAL,GAAaK,QAAb;AAEH;;AAED,WAASf,UAAT,CAAoBoE,IAApB,EAA0BjJ,OAA1B,EAAmC;AAE/B,QAAIkJ,KAAK,GAAG;AAAClE,MAAAA,MAAM,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE,IAAtB;AAA4BkE,MAAAA,KAAK,EAAE,IAAnC;AAAyCC,MAAAA,GAAG,EAAE;AAA9C,KAAZ;;AAEA,QAAIpJ,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAEtBwI,MAAAA,KAAK,CAAClE,MAAN,GAAeiE,IAAI,CAACtJ,GAApB;AACAuJ,MAAAA,KAAK,CAACjE,KAAN,GAAcgE,IAAI,CAACrJ,MAAnB;;AAEA,UAAII,OAAO,CAACS,GAAR,KAAgB,IAApB,EAA0B;AAEtByI,QAAAA,KAAK,CAACC,KAAN,GAAcF,IAAI,CAACpJ,IAAnB;AACAqJ,QAAAA,KAAK,CAACE,GAAN,GAAYH,IAAI,CAACnJ,KAAjB;AAEH,OALD,MAKO;AAEHoJ,QAAAA,KAAK,CAACC,KAAN,GAAcF,IAAI,CAACnJ,KAAnB;AACAoJ,QAAAA,KAAK,CAACE,GAAN,GAAYH,IAAI,CAACpJ,IAAjB;AACH;AAEJ,KAhBD,MAgBO,IAAIG,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAE7BwI,MAAAA,KAAK,CAAClE,MAAN,GAAeiE,IAAI,CAACpJ,IAApB;AACAqJ,MAAAA,KAAK,CAACjE,KAAN,GAAcgE,IAAI,CAACnJ,KAAnB;AACAoJ,MAAAA,KAAK,CAACC,KAAN,GAAcF,IAAI,CAACtJ,GAAnB;AACAuJ,MAAAA,KAAK,CAACE,GAAN,GAAYH,IAAI,CAACrJ,MAAjB;AAEH,KAPM,MAOA,IAAII,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAE7BwI,MAAAA,KAAK,CAAClE,MAAN,GAAeiE,IAAI,CAACnJ,KAApB;AACAoJ,MAAAA,KAAK,CAACjE,KAAN,GAAcgE,IAAI,CAACpJ,IAAnB;AACAqJ,MAAAA,KAAK,CAACC,KAAN,GAAcF,IAAI,CAACtJ,GAAnB;AACAuJ,MAAAA,KAAK,CAACE,GAAN,GAAYH,IAAI,CAACrJ,MAAjB;AAEH;;AAED,WAAOsJ,KAAP;AAEH;;AAED,WAAS5E,iBAAT,CAA2BtE,OAA3B,EAAoC3B,OAApC,EAA6CgL,KAA7C,EAAoD9C,OAApD,EAA6D;AAEzD,QAAIlI,OAAO,CAACiK,SAAR,KAAsB,IAAtB,IAA8BjK,OAAO,CAACiK,SAAR,KAAsB,KAAxD,EAA+D;AAE3D;AAEA;AAEH;;AAED,QAAIgB,UAAU,GAAGjL,OAAO,CAACmB,KAAR,CAAcwJ,eAAd,IAAiCzC,OAAlD;;AAEA,QAAIlI,OAAO,CAACkL,iBAAR,KAA8B,CAAlC,EAAqC;AAEjC,UAAIlL,OAAO,CAACiK,SAAR,KAAsB,MAAtB,IAAgCjK,OAAO,CAACiK,SAAR,KAAsB,IAA1D,EAAgE;AAE5D,YAAIkB,CAAC,GAAGnL,OAAO,CAACyG,qBAAR,EAAR;AAEA;;AAEA,YAAI0E,CAAC,CAAC3K,MAAF,KAAa,CAAb,IAAkB2K,CAAC,CAACzK,KAAF,KAAY,CAAlC,EACI;AAEJ,YAAImK,KAAK,GAAGrE,UAAU,CAAC2E,CAAD,EAAIxJ,OAAJ,CAAtB;;AAEA,YAAIqJ,KAAK,CAACtF,MAAN,KAAiB,CAAjB,IACK,CAAC0F,UAAU,CAACP,KAAK,CAAClE,MAAP,EAAekE,KAAK,CAACjE,KAArB,EAA4BoE,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBiB,MAApD,EAA4DqE,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBkB,KAApF,CADpB,EAEU;AAENoE,UAAAA,KAAK,CAACK,IAAN,CAAW;AACP1E,YAAAA,MAAM,EAAEkE,KAAK,CAAClE,MADP;AAEPC,YAAAA,KAAK,EAAEiE,KAAK,CAACjE,KAFN;AAGPkE,YAAAA,KAAK,EAAED,KAAK,CAACC,KAHN;AAIPC,YAAAA,GAAG,EAAEF,KAAK,CAACE,GAJJ;AAKPpD,YAAAA,UAAU,EAAE,CALL;AAMPE,YAAAA,QAAQ,EAAE,CANH;AAOPJ,YAAAA,QAAQ,EAAE,EAPH;AAQPgC,YAAAA,GAAG,EAAE,EARE;AASPrE,YAAAA,EAAE,EAAE,EATG;AAUPD,YAAAA,IAAI,EAAE,EAVC;AAWP+D,YAAAA,EAAE,EAAE;AAXG,WAAX;AAcH,SAlBD,MAkBO;AAEH;AACA,cAAIoC,OAAO,GAAGxK,IAAI,CAACyJ,IAAL,CAAUM,KAAK,CAACjE,KAAN,GAAciE,KAAK,CAAClE,MAA9B,CAAd;AAEA;;AACA,cAAI4E,OAAO,GAAGzK,IAAI,CAACyJ,IAAL,CAAUM,KAAK,CAACE,GAAN,GAAYF,KAAK,CAACC,KAA5B,CAAd;AAEA;;AAEA,cAAIQ,OAAO,IAAIT,KAAK,CAAClE,MAAN,GAAeqE,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBiB,MAA3C,CAAP,GAA4D,CAAhE,EAAmE;AAC/DqE,YAAAA,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBiB,MAAxB,GAAiCkE,KAAK,CAAClE,MAAvC;AACH;;AAED,cAAI2E,OAAO,IAAIT,KAAK,CAACjE,KAAN,GAAcoE,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBkB,KAA1C,CAAP,GAA0D,CAA9D,EAAiE;AAC7DoE,YAAAA,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBkB,KAAxB,GAAgCiE,KAAK,CAACjE,KAAtC;AACH;;AAED,cAAI2E,OAAO,IAAIV,KAAK,CAACC,KAAN,GAAcE,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBoF,KAA1C,CAAP,GAA0D,CAA9D,EAAiE;AAC7DE,YAAAA,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBoF,KAAxB,GAAgCD,KAAK,CAACC,KAAtC;AACAE,YAAAA,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBiC,UAAxB,GAAqCqD,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwB+B,QAAxB,CAAiC/B,MAAtE;AACH;;AAED,cAAI6F,OAAO,IAAIV,KAAK,CAACE,GAAN,GAAYC,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBqF,GAAxC,CAAP,GAAsD,CAA1D,EAA6D;AACzDC,YAAAA,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBqF,GAAxB,GAA8BF,KAAK,CAACE,GAApC;AACAC,YAAAA,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBmC,QAAxB,GAAmCmD,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwB+B,QAAxB,CAAiC/B,MAApE;AACH;AAEJ;;AAEDsF,QAAAA,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBP,IAAxB,IAAgCnF,OAAO,CAACsF,WAAxC;AAEA0F,QAAAA,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwB+B,QAAxB,CAAiC4D,IAAjC,CACQ;AACIrD,UAAAA,IAAI,EAAEhI,OADV;AAEIkI,UAAAA,OAAO,EAAE+C,UAFb;AAGItE,UAAAA,MAAM,EAAEkE,KAAK,CAAClE,MAHlB;AAIIC,UAAAA,KAAK,EAAEiE,KAAK,CAACjE;AAJjB,SADR;AASH,OAtED,MAsEO,IAAI5G,OAAO,CAACiK,SAAR,KAAsB,IAAtB,IAA8Be,KAAK,CAACtF,MAAN,KAAiB,CAAnD,EAAsD;AAEzDsF,QAAAA,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBwD,EAAxB,GAA6B,IAA7B;AAEH;AAEJ,KA9ED,MA8EO;AAEH,UAAIsC,KAAK,GAAGxL,OAAO,CAACyL,UAApB;;AAEA,aAAOD,KAAP,EAAc;AAEV,YAAIA,KAAK,CAACE,QAAN,KAAmBC,IAAI,CAACC,YAA5B,EAA0C;AAEtC3F,UAAAA,iBAAiB,CAACtE,OAAD,EAAU6J,KAAV,EAAiBR,KAAjB,EAAwBC,UAAxB,CAAjB;;AAEA,cAAIO,KAAK,CAACvB,SAAN,KAAoB,MAApB,IAA8BuB,KAAK,CAACvB,SAAN,KAAoB,KAAtD,EAA6D;AAEzD;AAEA,gBAAIe,KAAK,CAACtF,MAAN,GAAe,CAAnB,EAAsB;AAElBsF,cAAAA,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwB+D,GAAxB,CAA4B4B,IAA5B,CAAiCG,KAAjC;AAEH;AAEJ,WAVD,MAUO,IAAIA,KAAK,CAACvB,SAAN,KAAoB,MAApB,IACHuB,KAAK,CAACrK,KAAN,CAAY0K,sBAAZ,CADG,IAEHL,KAAK,CAACrK,KAAN,CAAY0K,sBAAZ,MAAwC,MAFzC,EAEiD;AAEpD;AAEA,gBAAIb,KAAK,CAACtF,MAAN,GAAe,CAAnB,EAAsB;AAElBsF,cAAAA,KAAK,CAACA,KAAK,CAACtF,MAAN,GAAe,CAAhB,CAAL,CAAwBN,EAAxB,CAA2BiG,IAA3B,CAAgCG,KAAhC;AAEH;AAEJ;AAGJ;;AAEDA,QAAAA,KAAK,GAAGA,KAAK,CAAClC,WAAd;AACH;AACJ;AAEJ;;AAED,WAAS8B,UAAT,CAAoBU,OAApB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CC,MAA9C,EAAsD;AAElD,WAASF,MAAM,GAAGE,MAAV,IAAsBH,OAAO,GAAGE,OAAjC,IAAgDC,MAAM,IAAIF,MAAX,IAAuBC,OAAO,IAAIF,OAAxF;AAEH;;AAED,WAASvG,iBAAT,CAA2B5D,OAA3B,EAAoCuK,WAApC,EAAiDpJ,WAAjD,EAA8DiB,IAA9D,EAAoE;AAEhE;AAEA,QAAIA,IAAI,CAAC5C,KAAL,KAAe,MAAnB,EAA2B;AAEvB;AAEA;AAEH,KAND,MAMO,IAAI4C,IAAI,CAAC5C,KAAL,KAAe,MAAnB,EAA2B;AAE9B+K,MAAAA,WAAW,CAAC/K,KAAZ,CAAkB0K,sBAAlB,IAA4C,QAA5C;AAEH,KAJM,MAIA;AAEHK,MAAAA,WAAW,CAAC/K,KAAZ,CAAkB0K,sBAAlB,IAA6C9H,IAAI,CAAC5C,KAAL,GAAa,GAAb,GAAmB4C,IAAI,CAACoI,MAArE;AACH;AAED;;;AAEA,QAAIpI,IAAI,CAAC3C,QAAL,KAAkB,QAAlB,IAA8B2C,IAAI,CAAC3C,QAAL,KAAkB,OAApD,EAA6D;AAEzD,UAAIoI,GAAJ;;AAEA,UAAI7H,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAEtBmH,QAAAA,GAAG,GAAIzF,IAAI,CAAC3C,QAAL,KAAkB,QAAnB,GAA+B,WAA/B,GAA6C,YAAnD;AAGH,OALD,MAKO;AAEH,YAAIO,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAEtBmH,UAAAA,GAAG,GAAIzF,IAAI,CAAC3C,QAAL,KAAkB,QAAnB,GAA+B,aAA/B,GAA+C,YAArD;AAEH,SAJD,MAIO;AAEHoI,UAAAA,GAAG,GAAIzF,IAAI,CAAC3C,QAAL,KAAkB,QAAnB,GAA+B,YAA/B,GAA8C,aAApD;AAEH;AAEJ;;AAED8K,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBoI,yBAAlB,IAA+CC,GAA/C;AACH;AACJ;;AAED,WAAS4C,wBAAT,CAAkCC,KAAlC,EAAyCC,OAAzC,EAAkD;AAC9C,SAAKhJ,KAAL,GAAa+I,KAAb;AACA,SAAKpI,GAAL,GAAWqI,OAAX;AACH;;AAED,MAAIzI,gBAAgB,GAAG,CAEnB,IAAIuI,wBAAJ,CACQ,mDADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C;AACA,QAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAhB,EACI;AAEJmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBwJ,eAAlB,GAAoC,UAC5B5G,IAAI,CAAC,CAAD,CAAJ,CAAQwI,QAAR,EAD4B,GACP,GADO,GAE5BxI,IAAI,CAAC,CAAD,CAAJ,CAAQwI,QAAR,EAF4B,GAEP,GAFO,GAG5BxI,IAAI,CAAC,CAAD,CAAJ,CAAQwI,QAAR,EAH4B,GAGP,GAHO,GAI5B,CAACxI,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAX,EAAgBwI,QAAhB,EAJ4B,GAK5B,GALR;AAMH,GAdT,CAFmB,EAkBnB,IAAIH,wBAAJ,CACQ,yCADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBqL,KAAlB,GAA0B,UAClBzI,IAAI,CAAC,CAAD,CAAJ,CAAQwI,QAAR,EADkB,GACG,GADH,GAElBxI,IAAI,CAAC,CAAD,CAAJ,CAAQwI,QAAR,EAFkB,GAEG,GAFH,GAGlBxI,IAAI,CAAC,CAAD,CAAJ,CAAQwI,QAAR,EAHkB,GAGG,GAHH,GAIlB,CAACxI,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAX,EAAgBwI,QAAhB,EAJkB,GAKlB,GALR;AAMH,GATT,CAlBmB,EA6BnB,IAAIH,wBAAJ,CACQ,6CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkByC,SAAlB,GAA8BG,IAA9B;AAEH,GANT,CA7BmB,EAqCnB,IAAIqI,wBAAJ,CACQ,2CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD,CAAE,CAF7D,CArCmB,EAyCnB,IAAIqI,wBAAJ,CACQ,gDADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C;;AAEA;AAEAmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkB4D,OAAlB,GAA4B,MAA5B;AACAmH,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBsL,aAAlB,GAAkC,QAAlC;;AAGA,QAAI1I,IAAI,KAAK,QAAb,EAAuB;AAEnBmI,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBuL,cAAlB,GAAmC,YAAnC;AAEH,KAJD,MAIO,IAAI3I,IAAI,KAAK,QAAb,EAAuB;AAE1BmI,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBuL,cAAlB,GAAmC,QAAnC;AAEH,KAJM,MAIA,IAAI3I,IAAI,KAAK,OAAb,EAAsB;AAEzBmI,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBuL,cAAlB,GAAmC,UAAnC;AACH;AAEJ,GAzBT,CAzCmB,EAoEnB,IAAIN,wBAAJ,CACQ,0CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/C;AAEApC,IAAAA,OAAO,CAACG,OAAR,GAAkBiC,IAAI,CAACnC,CAAL,CAAO0C,YAAP,CAAoB3C,OAAO,CAACE,CAA5B,EAA+BF,OAAO,CAACC,CAAvC,CAAlB;AACAD,IAAAA,OAAO,CAACI,OAAR,GAAkBgC,IAAI,CAAClC,CAAL,CAAOyC,YAAP,CAAoB3C,OAAO,CAACE,CAA5B,EAA+BF,OAAO,CAACC,CAAvC,CAAlB;AAEA;AACpB;AACA;AACA;;AAEoB,QAAI+K,MAAM,GAAG,CAAb;AACA,QAAIC,MAAM,GAAG,CAAb;AAEA,QAAIC,CAAC,GAAG/J,WAAW,CAACM,UAAZ,CAAuB,2CAAvB,CAAR;;AAEA,QAAI,CAACyJ,CAAL,EAAQ;AAEJ;AAEH,KAJD,MAIO;AAEHF,MAAAA,MAAM,GAAGE,CAAC,CAAC,CAAD,CAAD,CAAKvI,YAAL,CAAkB3C,OAAO,CAACE,CAA1B,EAA6BF,OAAO,CAACC,CAArC,IAA0CiL,CAAC,CAAC,CAAD,CAAD,CAAKvI,YAAL,CAAkB3C,OAAO,CAACE,CAA1B,EAA6BF,OAAO,CAACC,CAArC,CAAnD;AACAgL,MAAAA,MAAM,GAAGC,CAAC,CAAC,CAAD,CAAD,CAAKvI,YAAL,CAAkB3C,OAAO,CAACE,CAA1B,EAA6BF,OAAO,CAACC,CAArC,IAA0CiL,CAAC,CAAC,CAAD,CAAD,CAAKvI,YAAL,CAAkB3C,OAAO,CAACE,CAA1B,EAA6BF,OAAO,CAACC,CAArC,CAAnD;AAEH;;AAEDsK,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBX,MAAlB,GAA4BmB,OAAO,CAACG,OAAR,GAAkB6K,MAAnB,GAA6B,IAAxD;AACAT,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBT,KAAlB,GAA2BiB,OAAO,CAACI,OAAR,GAAkB6K,MAAnB,GAA6B,IAAvD;AAEH,GAhCT,CApEmB,EAsGnB,IAAIR,wBAAJ,CACQ,8CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C,QAAI+I,IAAI,GAAG,EAAX;AAEA;;AAEA,SAAK,IAAIpK,CAAT,IAAcqB,IAAd,EAAoB;AAEhB,UAAIA,IAAI,CAACrB,CAAD,CAAJ,KAAY,gBAAhB,EAAkC;AAE9BoK,QAAAA,IAAI,CAACzB,IAAL,CAAU,aAAV;AACAyB,QAAAA,IAAI,CAACzB,IAAL,CAAU,mBAAV;AACAyB,QAAAA,IAAI,CAACzB,IAAL,CAAU,SAAV;AACAyB,QAAAA,IAAI,CAACzB,IAAL,CAAU,WAAV;AAEH,OAPD,MAOO,IAAItH,IAAI,CAACrB,CAAD,CAAJ,KAAY,uBAAhB,EAAyC;AAE5CoK,QAAAA,IAAI,CAACzB,IAAL,CAAU,OAAV;AACAyB,QAAAA,IAAI,CAACzB,IAAL,CAAU,WAAV;AACAyB,QAAAA,IAAI,CAACzB,IAAL,CAAU,mBAAV;AACAyB,QAAAA,IAAI,CAACzB,IAAL,CAAU,YAAV;AAEH,OAPM,MAOA,IAAItH,IAAI,CAACrB,CAAD,CAAJ,KAAY,WAAhB,EAA6B;AAEhCoK,QAAAA,IAAI,CAACzB,IAAL,CAAU,WAAV;AAEH,OAJM,MAIA,IAAItH,IAAI,CAACrB,CAAD,CAAJ,KAAY,WAAhB,EAA6B;AAEhCoK,QAAAA,IAAI,CAACzB,IAAL,CAAU,YAAV;AAEH,OAJM,MAIA,IAAItH,IAAI,CAACrB,CAAD,CAAJ,KAAY,OAAhB,EAAyB;AAE5BoK,QAAAA,IAAI,CAACzB,IAAL,CAAU,OAAV;AAEH,OAJM,MAIA,IAAItH,IAAI,CAACrB,CAAD,CAAJ,KAAY,oBAAhB,EAAsC;AAEzCoK,QAAAA,IAAI,CAACzB,IAAL,CAAU,UAAV;AACAyB,QAAAA,IAAI,CAACzB,IAAL,CAAU,WAAV;AAEH,OALM,MAKA,IAAItH,IAAI,CAACrB,CAAD,CAAJ,KAAY,mBAAhB,EAAqC;AAExCoK,QAAAA,IAAI,CAACzB,IAAL,CAAU,OAAV;AAEH,OAJM,MAIA;AAEHyB,QAAAA,IAAI,CAACzB,IAAL,CAAUtH,IAAI,CAACrB,CAAD,CAAd;AAEH;AAEJ;;AAEDwJ,IAAAA,WAAW,CAAC/K,KAAZ,CAAkB4L,UAAlB,GAA+BD,IAAI,CAACE,IAAL,CAAU,GAAV,CAA/B;AACH,GAtDT,CAtGmB,EA+JnB,IAAIZ,wBAAJ,CACQ,yCADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C;AAEA,QAAIA,IAAI,KAAK,CAAb,EACI;AAEJ,QAAIkJ,KAAK,GAAGlJ,IAAI,GAAG,CAAC,GAApB;AAEA;;AAEA,QAAIpC,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAEtB6J,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBmG,SAAlB,GAA8B,WAAW2F,KAAX,GAAmB,MAAjD;AAEH,KAJD,MAIO;AAEHf,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBmG,SAAlB,GAA8B,WAAW2F,KAAX,GAAmB,MAAjD;AAEH;AAEJ,GAvBT,CA/JmB,EAyLnB,IAAIb,wBAAJ,CACQ,4CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkB4I,QAAlB,GAA6BhG,IAAI,CAACO,YAAL,CAAkB3C,OAAO,CAACE,CAA1B,EAA6BF,OAAO,CAACC,CAArC,IAA0C,IAAvE;AACH,GAJT,CAzLmB,EAgMnB,IAAIwK,wBAAJ,CACQ,6CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkB+L,SAAlB,GAA8BnJ,IAA9B;AACH,GAJT,CAhMmB,EAsMnB,IAAIqI,wBAAJ,CACQ,8CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBgM,UAAlB,GAA+BpJ,IAA/B;AACH,GAJT,CAtMmB,EA4MnB,IAAIqI,wBAAJ,CACQ,8CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/C,QAAIA,IAAI,KAAK,QAAb,EAAuB;AAEnBmI,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBiM,UAAlB,GAA+B,QAA/B;AAEH,KAJD,MAIO;AAEHlB,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBiM,UAAlB,GAA+BrJ,IAAI,CAACO,YAAL,CAAkB3C,OAAO,CAACE,CAA1B,EAA6BF,OAAO,CAACC,CAArC,IAA0C,IAAzE;AACH;AACJ,GAXT,CA5MmB,EAyNnB,IAAIwK,wBAAJ,CACQ,2CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBkM,OAAlB,GAA4BtJ,IAA5B;AACH,GAJT,CAzNmB,EA+NnB,IAAIqI,wBAAJ,CACQ,0CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBG,GAAlB,GAAwByC,IAAI,CAACnC,CAAL,CAAO0C,YAAP,CAAoB3C,OAAO,CAACE,CAA5B,EAA+BF,OAAO,CAACC,CAAvC,IAA4C,IAApE;AACAsK,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBK,IAAlB,GAAyBuC,IAAI,CAAClC,CAAL,CAAOyC,YAAP,CAAoB3C,OAAO,CAACE,CAA5B,EAA+BF,OAAO,CAACC,CAAvC,IAA4C,IAArE;AACH,GALT,CA/NmB,EAsOnB,IAAIwK,wBAAJ,CACQ,4CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBmM,QAAlB,GAA6BvJ,IAA7B;AACH,GAJT,CAtOmB,EA4OnB,IAAIqI,wBAAJ,CACQ,2CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C;;AAEA;AAEA,QAAI+I,IAAI,GAAG,EAAX;AAEAA,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU/I,IAAI,CAAC,CAAD,CAAJ,CAAQO,YAAR,CAAqB3C,OAAO,CAACE,CAA7B,EAAgCF,OAAO,CAACC,CAAxC,IAA6C,IAAvD;AACAkL,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU/I,IAAI,CAAC,CAAD,CAAJ,CAAQO,YAAR,CAAqB3C,OAAO,CAACE,CAA7B,EAAgCF,OAAO,CAACC,CAAxC,IAA6C,IAAvD;AACAkL,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU/I,IAAI,CAAC,CAAD,CAAJ,CAAQO,YAAR,CAAqB3C,OAAO,CAACE,CAA7B,EAAgCF,OAAO,CAACC,CAAxC,IAA6C,IAAvD;AACAkL,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU/I,IAAI,CAAC,CAAD,CAAJ,CAAQO,YAAR,CAAqB3C,OAAO,CAACE,CAA7B,EAAgCF,OAAO,CAACC,CAAxC,IAA6C,IAAvD;AAEAsK,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBoM,OAAlB,GAA4BT,IAAI,CAACE,IAAL,CAAU,GAAV,CAA5B;AACH,GAhBT,CA5OmB,EA8PnB,IAAIZ,wBAAJ,CACQ,4CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBG,GAAlB,GAAwByC,IAAI,CAACnC,CAAL,CAAO0C,YAAP,CAAoB3C,OAAO,CAACE,CAA5B,EAA+BF,OAAO,CAACC,CAAvC,IAA4C,IAApE;AACAsK,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBK,IAAlB,GAAyBuC,IAAI,CAAClC,CAAL,CAAOyC,YAAP,CAAoB3C,OAAO,CAACE,CAA5B,EAA+BF,OAAO,CAACC,CAAvC,IAA4C,IAArE;AACH,GALT,CA9PmB,EAqQnB,IAAIwK,wBAAJ,CACQ,6CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBqM,SAAlB,GAA8BzJ,IAAI,KAAK,aAAT,GAAyB,cAAzB,GAA0C,QAAxE;AACH,GAJT,CArQmB,EA2QnB,IAAIqI,wBAAJ,CACQ,gDADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C;AAEA,QAAIA,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,OAAlC,EAA2C;AAEvC,UAAIyF,GAAJ;;AAEA,UAAIG,iBAAJ,EAAuB;AAEnB;AAEAH,QAAAA,GAAG,GAAGzF,IAAN;AAEH,OAND,MAMO,IAAIpC,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAE7BmH,QAAAA,GAAG,GAAIzF,IAAI,KAAK,QAAV,GAAsB,MAAtB,GAA+B,OAArC;AAGH,OALM,MAKA;AAEH,YAAIpC,OAAO,CAACU,GAAR,KAAgB,IAApB,EAA0B;AAEtBmH,UAAAA,GAAG,GAAIzF,IAAI,KAAK,QAAV,GAAsB,MAAtB,GAA+B,OAArC;AAEH,SAJD,MAIO;AAEHyF,UAAAA,GAAG,GAAIzF,IAAI,KAAK,QAAV,GAAsB,OAAtB,GAAgC,MAAtC;AAEH;AAEJ;AAED;;;AAEAmI,MAAAA,WAAW,CAAC9C,aAAZ,CAA0BjI,KAA1B,CAAgCuI,iBAAhC,IAAqDF,GAArD;AACH;AACJ,GAvCT,CA3QmB,EAoTnB,IAAI4C,wBAAJ,CACQ,kDADR,EAEQ,IAFR,CApTmB,EAwTnB,IAAIA,wBAAJ,CACQ,6CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C,QAAI0J,EAAJ;AAEA;;AAEA,QAAI1J,IAAI,KAAK,OAAb,EAAsB;AAElB0J,MAAAA,EAAE,GAAI9L,OAAO,CAACS,GAAR,KAAgB,IAAjB,GAAyB,OAAzB,GAAmC,MAAxC;AAEH,KAJD,MAIO,IAAI2B,IAAI,KAAK,KAAb,EAAoB;AAEvB0J,MAAAA,EAAE,GAAI9L,OAAO,CAACS,GAAR,KAAgB,IAAjB,GAAyB,MAAzB,GAAkC,OAAvC;AAEH,KAJM,MAIA;AAEHqL,MAAAA,EAAE,GAAG1J,IAAL;AAEH;;AAEDmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkB6D,SAAlB,GAA8ByI,EAA9B;AAEH,GAxBT,CAxTmB,EAkVnB,IAAIrB,wBAAJ,CACQ,kDADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBuM,cAAlB,GAAmC3J,IAAI,CAACiJ,IAAL,CAAU,GAAV,EAAeW,OAAf,CAAuB,aAAvB,EAAsC,cAAtC,CAAnC;AACH,GAJT,CAlVmB,EAwVnB,IAAIvB,wBAAJ,CACQ,+CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C;AACH,GALT,CAxVmB,EA+VnB,IAAIqI,wBAAJ,CACQ,8CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C,QAAI6J,IAAI,GAAG9K,WAAW,CAACM,UAAZ,CAAuBvD,UAAU,CAACwD,MAAX,CAAkBwK,WAAlB,CAA8BvK,KAArD,CAAX;;AAEA,QAAIS,IAAI,KAAK,MAAT,IAAmB6J,IAAI,KAAK,MAAhC,EAAwC;AAEpC1B,MAAAA,WAAW,CAAC/K,KAAZ,CAAkB2M,UAAlB,GAA+B,EAA/B;AAEH,KAJD,MAIO;AAEH,UAAIhJ,CAAC,GAAG,EAAR;;AAEA,UAAI8I,IAAI,KAAK,MAAb,EAAqB;AAEjB;AAEA,YAAIG,QAAQ,GAAG,UACKH,IAAI,CAACpB,KAAL,CAAW,CAAX,EAAcD,QAAd,EADL,GACgC,GADhC,GAEKqB,IAAI,CAACpB,KAAL,CAAW,CAAX,EAAcD,QAAd,EAFL,GAEgC,GAFhC,GAGKqB,IAAI,CAACpB,KAAL,CAAW,CAAX,EAAcD,QAAd,EAHL,GAGgC,GAHhC,GAIK,CAACqB,IAAI,CAACpB,KAAL,CAAW,CAAX,IAAgB,GAAjB,EAAsBD,QAAtB,EAJL,GAKK,GALpB;AAOAzH,QAAAA,CAAC,CAACuG,IAAF,CAAS,iBAAiB0C,QAA1B;AACAjJ,QAAAA,CAAC,CAACuG,IAAF,CAAS,kBAAkB0C,QAA3B;AACAjJ,QAAAA,CAAC,CAACuG,IAAF,CAAS,kBAAkB0C,QAA3B;AACAjJ,QAAAA,CAAC,CAACuG,IAAF,CAAS,mBAAmB0C,QAA5B;AAEH;AAED;;;AAEA,UAAIhK,IAAI,KAAK,MAAb,EAAqB;AAEjB,aAAK,IAAIrB,CAAT,IAAcqB,IAAd,EAAoB;AAGhBe,UAAAA,CAAC,CAACuG,IAAF,CAAOtH,IAAI,CAACrB,CAAD,CAAJ,CAAQsL,KAAR,CAAc1J,YAAd,CAA2B3C,OAAO,CAACE,CAAnC,EAAsCF,OAAO,CAACC,CAA9C,IAAmD,KAAnD,GACCmC,IAAI,CAACrB,CAAD,CAAJ,CAAQuL,KAAR,CAAc3J,YAAd,CAA2B3C,OAAO,CAACE,CAAnC,EAAsCF,OAAO,CAACC,CAA9C,CADD,GACoD,KADpD,GAECmC,IAAI,CAACrB,CAAD,CAAJ,CAAQwL,QAAR,CAAiB5J,YAAjB,CAA8B3C,OAAO,CAACE,CAAtC,EAAyCF,OAAO,CAACC,CAAjD,CAFD,GAEuD,KAFvD,GAGC,OAHD,GAICmC,IAAI,CAACrB,CAAD,CAAJ,CAAQ8J,KAAR,CAAc,CAAd,EAAiBD,QAAjB,EAJD,GAI+B,GAJ/B,GAKCxI,IAAI,CAACrB,CAAD,CAAJ,CAAQ8J,KAAR,CAAc,CAAd,EAAiBD,QAAjB,EALD,GAK+B,GAL/B,GAMCxI,IAAI,CAACrB,CAAD,CAAJ,CAAQ8J,KAAR,CAAc,CAAd,EAAiBD,QAAjB,EAND,GAM+B,GAN/B,GAOC,CAACxI,IAAI,CAACrB,CAAD,CAAJ,CAAQ8J,KAAR,CAAc,CAAd,IAAmB,GAApB,EAAyBD,QAAzB,EAPD,GAQC,GARR;AAWH;AAEJ;;AAEDL,MAAAA,WAAW,CAAC/K,KAAZ,CAAkB2M,UAAlB,GAA+BhJ,CAAC,CAACkI,IAAF,CAAO,GAAP,CAA/B;AAEH;AACJ,GAzDT,CA/VmB,EA0ZnB,IAAIZ,wBAAJ,CACQ,+CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBgN,kBAAlB,GAAuCpK,IAAvC;AAEH,GANT,CA1ZmB,EAkanB,IAAIqI,wBAAJ,CACQ,gDADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C;AAEH,GANT,CAlamB,EA0anB,IAAIqI,wBAAJ,CACQ,+CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C,QAAIqK,EAAJ;;AAEA,QAAIrK,IAAI,KAAK,cAAb,EAA6B;AACzBqK,MAAAA,EAAE,GAAG,eAAL;AACH,KAFD,MAEO;AACHA,MAAAA,EAAE,GAAGrK,IAAL;AACH;;AAEDmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBkN,WAAlB,GAAgCD,EAAhC;AACH,GAbT,CA1amB,EAybnB,IAAIhC,wBAAJ,CACQ,8CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBmN,UAAlB,GAA+BvK,IAA/B;AACH,GAJT,CAzbmB,EA+bnB,IAAIqI,wBAAJ,CACQ,8CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C,QAAIA,IAAI,KAAK,MAAb,EAAqB;AAEjB,UAAIjB,WAAW,CAACyL,KAAZ,KAAsB,UAA1B,EAAsC;AAClCrC,QAAAA,WAAW,CAAC/K,KAAZ,CAAkBqN,UAAlB,GAA+B,UAA/B;AACH,OAFD,MAEO;AACHtC,QAAAA,WAAW,CAAC/K,KAAZ,CAAkBqN,UAAlB,GAA+B,QAA/B;AACH;AAEJ,KARD,MAQO;AAEH,UAAI1L,WAAW,CAACyL,KAAZ,KAAsB,UAA1B,EAAsC;AAElCrC,QAAAA,WAAW,CAAC/K,KAAZ,CAAkBqN,UAAlB,GAA+B,KAA/B;AAEH,OAJD,MAIO;AACHtC,QAAAA,WAAW,CAAC/K,KAAZ,CAAkBqN,UAAlB,GAA+B,QAA/B;AACH;AAEJ;AAEJ,GAxBT,CA/bmB,EAydnB,IAAIpC,wBAAJ,CACQ,+CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C,QAAI0K,EAAJ;;AAEA,QAAI1K,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,IAAhC,EAAsC;AAElCmI,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBuC,WAAlB,GAAgC,eAAhC;AAEH,KAJD,MAIO,IAAIK,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,IAAhC,EAAsC;AAEzCmI,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBuC,WAAlB,GAAgC,eAAhC;AAEH,KAJM,MAIA,IAAIK,IAAI,KAAK,MAAb,EAAqB;AAExBmI,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBuC,WAAlB,GAAgC,aAAhC;AAEH,KAJM,MAIA,IAAIK,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,IAAhC,EAAsC;AAEzCmI,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBuC,WAAlB,GAAgC,aAAhC;AAEH;AAEJ,GAxBT,CAzdmB,EAmfnB,IAAI0I,wBAAJ,CACQ,0CADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAC/CmI,IAAAA,WAAW,CAAC/K,KAAZ,CAAkBO,MAAlB,GAA2BqC,IAA3B;AACH,GAJT,CAnfmB,EAyfnB,IAAIqI,wBAAJ,CACQ,+DADR,EAEQ,UAAUzK,OAAV,EAAmBuK,WAAnB,EAAgCpJ,WAAhC,EAA6CiB,IAA7C,EAAmD;AAE/C,QAAIpC,OAAO,CAACvB,qBAAR,IAAiC2D,IAAI,KAAK,KAA9C,EAAqD;AACjDmI,MAAAA,WAAW,CAAC/K,KAAZ,CAAkBmN,UAAlB,GAA+B,QAA/B;AACH;AAEJ,GART,CAzfmB,CAAvB;AAqgBA,MAAII,gBAAgB,GAAG,EAAvB;;AAEA,OAAK,IAAIhM,CAAT,IAAcmB,gBAAd,EAAgC;AAE5B6K,IAAAA,gBAAgB,CAAC7K,gBAAgB,CAACnB,CAAD,CAAhB,CAAoBY,KAArB,CAAhB,GAA8CO,gBAAgB,CAACnB,CAAD,CAA9D;AACH;AAED;;;AAEA,MAAIiH,iBAAiB,IAAG,wBAAwBgF,MAAM,CAACC,gBAAP,CAAwB3N,QAAQ,CAAC4N,eAAjC,CAA3B,CAArB;AAEA,MAAInF,iBAAiB,GAAGC,iBAAiB,GAAG,oBAAH,GAA0B,cAAnE;AAEA,MAAIkC,sBAAsB,GAAG,6BAA6B8C,MAAM,CAACC,gBAAP,CAAwB3N,QAAQ,CAAC4N,eAAjC,CAA7B,GAAiF,yBAAjF,GAA6G,mBAA1I;AAEA,MAAItF,yBAAyB,GAAG,gCAAgCoF,MAAM,CAACC,gBAAP,CAAwB3N,QAAQ,CAAC4N,eAAjC,CAAhC,GAAoF,4BAApF,GAAmH,sBAAnJ;AAEA;;AAEA,WAAStL,WAAT,CAAqBlD,YAArB,EAAmCyO,GAAnC,EAAwC;AAEpC,QAAIzO,YAAY,IAAIA,YAAY,CAAC0O,KAA7B,IAAsC1O,YAAY,CAAC0O,KAAb,CAAmBD,GAAnB,CAA1C,EACI,MAAMA,GAAN;AAEP;AAEJ,CA9qDD,EA8qDG,OAAOE,OAAP,KAAmB,WAAnB,GAAiC,KAAKrP,QAAL,GAAgB,EAAjD,GAAsDqP,OA9qDzD,EA+qDQ,OAAOpP,SAAP,KAAqB,WAArB,GAAmCqP,OAAO,CAAC,SAAD,CAA1C,GAAwDrP,SA/qDhE,EAgrDQ,OAAOC,UAAP,KAAsB,WAAtB,GAAoCoP,OAAO,CAAC,UAAD,CAA3C,GAA0DpP,UAhrDlE,EAirDQ,OAAOqP,SAAP,KAAqB,WAArB,GAAmCD,OAAO,CAAC,SAAD,CAA1C,GAAwDC,SAjrDhE","sourcesContent":["/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscHTML\r\n */\r\n\r\n;\r\n(function (imscHTML, imscNames, imscStyles) {\r\n\r\n    /**\r\n     * Function that maps <pre>smpte:background</pre> URIs to URLs resolving to image resource\r\n     * @callback IMGResolver\r\n     * @param {string} <pre>smpte:background</pre> URI\r\n     * @return {string} PNG resource URL\r\n     */\r\n\r\n\r\n    /**\r\n     * Renders an ISD object (returned by <pre>generateISD()</pre>) into a \r\n     * parent element, that must be attached to the DOM. The ISD will be rendered\r\n     * into a child <pre>div</pre>\r\n     * with heigh and width equal to the clientHeight and clientWidth of the element,\r\n     * unless explicitly specified otherwise by the caller. Images URIs specified \r\n     * by <pre>smpte:background</pre> attributes are mapped to image resource URLs\r\n     * by an <pre>imgResolver</pre> function. The latter takes the value of <code>smpte:background</code>\r\n     * attribute and an <code>img</code> DOM element as input, and is expected to\r\n     * set the <code>src</code> attribute of the <code>img</code> to the absolute URI of the image.\r\n     * <pre>displayForcedOnlyMode</pre> sets the (boolean)\r\n     * value of the IMSC1 displayForcedOnlyMode parameter. The function returns\r\n     * an opaque object that should passed in <code>previousISDState</code> when this function\r\n     * is called for the next ISD, otherwise <code>previousISDState</code> should be set to \r\n     * <code>null</code>.\r\n     * \r\n     * @param {Object} isd ISD to be rendered\r\n     * @param {Object} element Element into which the ISD is rendered\r\n     * @param {?IMGResolver} imgResolver Resolve <pre>smpte:background</pre> URIs into URLs.\r\n     * @param {?number} eheight Height (in pixel) of the child <div>div</div> or null \r\n     *                  to use clientHeight of the parent element\r\n     * @param {?number} ewidth Width (in pixel) of the child <div>div</div> or null\r\n     *                  to use clientWidth of the parent element\r\n     * @param {?boolean} displayForcedOnlyMode Value of the IMSC1 displayForcedOnlyMode parameter,\r\n     *                   or false if null         \r\n     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback\r\n     * @param {Object} previousISDState State saved during processing of the previous ISD, or null if initial call\r\n     * @param {?boolean} enableRollUp Enables roll-up animations (see CEA 708)\r\n     * @return {Object} ISD state to be provided when this funtion is called for the next ISD\r\n     */\r\n\r\n    imscHTML.render = function (isd,\r\n            element,\r\n            imgResolver,\r\n            eheight,\r\n            ewidth,\r\n            displayForcedOnlyMode,\r\n            errorHandler,\r\n            previousISDState,\r\n            enableRollUp\r\n            ) {\r\n\r\n        /* maintain aspect ratio if specified */\r\n\r\n        var height = eheight || element.clientHeight;\r\n        var width = ewidth || element.clientWidth;\r\n\r\n        if (isd.aspectRatio !== null) {\r\n\r\n            var twidth = height * isd.aspectRatio;\r\n\r\n            if (twidth > width) {\r\n\r\n                height = Math.round(width / isd.aspectRatio);\r\n\r\n            } else {\r\n\r\n                width = twidth;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var rootcontainer = document.createElement(\"div\");\r\n\r\n        rootcontainer.style.position = \"relative\";\r\n        rootcontainer.style.width = width + \"px\";\r\n        rootcontainer.style.height = height + \"px\";\r\n        rootcontainer.style.margin = \"auto\";\r\n        rootcontainer.style.top = 0;\r\n        rootcontainer.style.bottom = 0;\r\n        rootcontainer.style.left = 0;\r\n        rootcontainer.style.right = 0;\r\n        rootcontainer.style.zIndex = 0;\r\n\r\n        var context = {\r\n            h: height,\r\n            w: width,\r\n            regionH: null,\r\n            regionW: null,\r\n            imgResolver: imgResolver,\r\n            displayForcedOnlyMode: displayForcedOnlyMode || false,\r\n            isd: isd,\r\n            errorHandler: errorHandler,\r\n            previousISDState: previousISDState,\r\n            enableRollUp: enableRollUp || false,\r\n            currentISDState: {},\r\n            flg: null, /* current fillLineGap value if active, null otherwise */\r\n            lp: null, /* current linePadding value if active, null otherwise */\r\n            mra: null, /* current multiRowAlign value if active, null otherwise */\r\n            ipd: null, /* inline progression direction (lr, rl, tb) */\r\n            bpd: null, /* block progression direction (lr, rl, tb) */\r\n            ruby: null, /* is ruby present in a <p> */\r\n            textEmphasis: null, /* is textEmphasis present in a <p> */\r\n            rubyReserve: null /* is rubyReserve applicable to a <p> */\r\n        };\r\n\r\n        element.appendChild(rootcontainer);\r\n\r\n        for (var i in isd.contents) {\r\n\r\n            processElement(context, rootcontainer, isd.contents[i], isd);\r\n\r\n        }\r\n\r\n        return context.currentISDState;\r\n\r\n    };\r\n\r\n    function processElement(context, dom_parent, isd_element, isd_parent) {\r\n\r\n        var e;\r\n\r\n        if (isd_element.kind === 'region') {\r\n\r\n            e = document.createElement(\"div\");\r\n            e.style.position = \"absolute\";\r\n\r\n        } else if (isd_element.kind === 'body') {\r\n\r\n            e = document.createElement(\"div\");\r\n\r\n        } else if (isd_element.kind === 'div') {\r\n\r\n            e = document.createElement(\"div\");\r\n\r\n        } else if (isd_element.kind === 'image') {\r\n\r\n            e = document.createElement(\"img\");\r\n\r\n            if (context.imgResolver !== null && isd_element.src !== null) {\r\n\r\n                var uri = context.imgResolver(isd_element.src, e);\r\n\r\n                if (uri)\r\n                    e.src = uri;\r\n\r\n                e.height = context.regionH;\r\n                e.width = context.regionW;\r\n\r\n            }\r\n\r\n        } else if (isd_element.kind === 'p') {\r\n\r\n            e = document.createElement(\"p\");\r\n\r\n        } else if (isd_element.kind === 'span') {\r\n\r\n            if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"container\") {\r\n\r\n                e = document.createElement(\"ruby\");\r\n\r\n                context.ruby = true;\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"base\") {\r\n\r\n                e = document.createElement(\"rb\");\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"text\") {\r\n\r\n                e = document.createElement(\"rt\");\r\n\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"baseContainer\") {\r\n\r\n                e = document.createElement(\"rbc\");\r\n\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"textContainer\") {\r\n\r\n                e = document.createElement(\"rtc\");\r\n\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"delimiter\") {\r\n\r\n                /* ignore rp */\r\n\r\n                return;\r\n\r\n            } else {\r\n\r\n                e = document.createElement(\"span\");\r\n\r\n            }\r\n\r\n            //e.textContent = isd_element.text;\r\n\r\n        } else if (isd_element.kind === 'br') {\r\n\r\n            e = document.createElement(\"br\");\r\n\r\n        }\r\n\r\n        if (!e) {\r\n\r\n            reportError(context.errorHandler, \"Error processing ISD element kind: \" + isd_element.kind);\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        /* set language */\r\n\r\n        if (isd_element.lang) {\r\n\r\n            if (isd_element.kind === 'region' || isd_element.lang !== isd_parent.lang) {\r\n                e.lang = isd_element.lang;\r\n            }\r\n\r\n        }\r\n\r\n        /* add to parent */\r\n\r\n        dom_parent.appendChild(e);\r\n\r\n        /* override UA default margin */\r\n        /* TODO: should apply to <p> only */\r\n\r\n        e.style.margin = \"0\";\r\n\r\n        /* determine ipd and bpd */\r\n\r\n        if (isd_element.kind === \"region\") {\r\n\r\n            var wdir = isd_element.styleAttrs[imscStyles.byName.writingMode.qname];\r\n\r\n            if (wdir === \"lrtb\" || wdir === \"lr\") {\r\n\r\n                context.ipd = \"lr\";\r\n                context.bpd = \"tb\";\r\n\r\n            } else if (wdir === \"rltb\" || wdir === \"rl\") {\r\n\r\n                context.ipd = \"rl\";\r\n                context.bpd = \"tb\";\r\n\r\n            } else if (wdir === \"tblr\") {\r\n\r\n                context.ipd = \"tb\";\r\n                context.bpd = \"lr\";\r\n\r\n            } else if (wdir === \"tbrl\" || wdir === \"tb\") {\r\n\r\n                context.ipd = \"tb\";\r\n                context.bpd = \"rl\";\r\n\r\n            }\r\n \r\n        } else if (isd_element.kind === \"p\" && context.bpd === \"tb\") {\r\n\r\n            var pdir = isd_element.styleAttrs[imscStyles.byName.direction.qname];\r\n\r\n            context.ipd = pdir === \"ltr\" ? \"lr\" : \"rl\"; \r\n \r\n        }\r\n\r\n        /* tranform TTML styles to CSS styles */\r\n\r\n        for (var i in STYLING_MAP_DEFS) {\r\n\r\n            var sm = STYLING_MAP_DEFS[i];\r\n\r\n            var attr = isd_element.styleAttrs[sm.qname];\r\n\r\n            if (attr !== undefined && sm.map !== null) {\r\n\r\n                sm.map(context, e, isd_element, attr);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var proc_e = e;\r\n\r\n        /* do we have linePadding ? */\r\n\r\n        var lp = isd_element.styleAttrs[imscStyles.byName.linePadding.qname];\r\n\r\n        if (lp && (! lp.isZero())) {\r\n\r\n            var plength = lp.toUsedLength(context.w, context.h);\r\n\r\n\r\n            if (plength > 0) {\r\n                \r\n                /* apply padding to the <p> so that line padding does not cause line wraps */\r\n\r\n                var padmeasure = Math.ceil(plength) + \"px\";\r\n\r\n                if (context.bpd === \"tb\") {\r\n\r\n                    proc_e.style.paddingLeft = padmeasure;\r\n                    proc_e.style.paddingRight = padmeasure;\r\n\r\n                } else {\r\n\r\n                    proc_e.style.paddingTop = padmeasure;\r\n                    proc_e.style.paddingBottom = padmeasure;\r\n\r\n                }\r\n\r\n                context.lp = lp;\r\n            }\r\n        }\r\n\r\n        // do we have multiRowAlign?\r\n\r\n        var mra = isd_element.styleAttrs[imscStyles.byName.multiRowAlign.qname];\r\n\r\n        if (mra && mra !== \"auto\") {\r\n\r\n            /* create inline block to handle multirowAlign */\r\n\r\n            var s = document.createElement(\"span\");\r\n\r\n            s.style.display = \"inline-block\";\r\n\r\n            s.style.textAlign = mra;\r\n\r\n            e.appendChild(s);\r\n\r\n            proc_e = s;\r\n\r\n            context.mra = mra;\r\n\r\n        }\r\n\r\n        /* do we have rubyReserve? */\r\n\r\n        var rr = isd_element.styleAttrs[imscStyles.byName.rubyReserve.qname];\r\n\r\n        if (rr && rr[0] !== \"none\") {\r\n            context.rubyReserve = rr;\r\n        }\r\n\r\n\r\n        /* remember we are filling line gaps */\r\n\r\n        if (isd_element.styleAttrs[imscStyles.byName.fillLineGap.qname]) {\r\n            context.flg = true;\r\n        }\r\n\r\n\r\n        if (isd_element.kind === \"span\" && isd_element.text) {\r\n\r\n            var te = isd_element.styleAttrs[imscStyles.byName.textEmphasis.qname];\r\n\r\n            if (te && te.style !== \"none\") {\r\n\r\n                context.textEmphasis = true;\r\n\r\n            }\r\n\r\n            if (imscStyles.byName.textCombine.qname in isd_element.styleAttrs &&\r\n                    isd_element.styleAttrs[imscStyles.byName.textCombine.qname] === \"all\") {\r\n\r\n                /* ignore tate-chu-yoku since line break cannot happen within */\r\n                e.textContent = isd_element.text;\r\n\r\n                if (te) {\r\n\r\n                    applyTextEmphasis(context, e, isd_element, te);\r\n\r\n                };\r\n\r\n            } else {\r\n\r\n                // wrap characters in spans to find the line wrap locations\r\n\r\n                var cbuf = '';\r\n\r\n                for (var j = 0; j < isd_element.text.length; j++) {\r\n\r\n                    cbuf += isd_element.text.charAt(j);\r\n\r\n                    var cc = isd_element.text.charCodeAt(j);\r\n\r\n                    if (cc < 0xD800 || cc > 0xDBFF || j === isd_element.text.length) {\r\n\r\n                        /* wrap the character(s) in a span unless it is a high surrogate */\r\n\r\n                        var span = document.createElement(\"span\");\r\n\r\n                        span.textContent = cbuf;\r\n\r\n                        /* apply textEmphasis */\r\n                        \r\n                        if (te) {\r\n\r\n                            applyTextEmphasis(context, span, isd_element, te);\r\n\r\n                        };\r\n    \r\n                        e.appendChild(span);\r\n\r\n                        cbuf = '';\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        /* process the children of the ISD element */\r\n\r\n        for (var k in isd_element.contents) {\r\n\r\n            processElement(context, proc_e, isd_element.contents[k], isd_element);\r\n\r\n        }\r\n\r\n        /* list of lines */\r\n\r\n        var linelist = [];\r\n\r\n\r\n        /* paragraph processing */\r\n        /* TODO: linePadding only supported for horizontal scripts */\r\n\r\n        if ((context.lp || context.mra || context.flg || context.ruby || context.textEmphasis || context.rubyReserve) &&\r\n                isd_element.kind === \"p\") {\r\n\r\n            constructLineList(context, proc_e, linelist, null);\r\n\r\n            /* apply rubyReserve */\r\n\r\n            if (context.rubyReserve) {\r\n\r\n                applyRubyReserve(linelist, context);\r\n\r\n                context.rubyReserve = null;\r\n\r\n            }\r\n\r\n            /* apply tts:rubyPosition=\"outside\" */\r\n\r\n            if (context.ruby || context.rubyReserve) {\r\n\r\n                applyRubyPosition(linelist, context);\r\n\r\n                context.ruby = null;\r\n\r\n            }\r\n\r\n            /* apply text emphasis \"outside\" position */\r\n\r\n            if (context.textEmphasis) {\r\n\r\n                applyTextEmphasisOutside(linelist, context);\r\n\r\n                context.textEmphasis = null;\r\n\r\n            }\r\n\r\n            /* insert line breaks for multirowalign */\r\n\r\n            if (context.mra) {\r\n\r\n                applyMultiRowAlign(linelist);\r\n\r\n                context.mra = null;\r\n\r\n            }\r\n\r\n            /* add linepadding */\r\n\r\n            if (context.lp) {\r\n\r\n                applyLinePadding(linelist, context.lp.toUsedLength(context.w, context.h), context);\r\n\r\n                context.lp = null;\r\n\r\n            }\r\n\r\n            /* fill line gaps linepadding */\r\n\r\n            if (context.flg) {\r\n\r\n                var par_edges = rect2edges(proc_e.getBoundingClientRect(), context);\r\n\r\n                applyFillLineGap(linelist, par_edges.before, par_edges.after, context);\r\n\r\n                context.flg = null;\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        /* region processing */\r\n\r\n        if (isd_element.kind === \"region\") {\r\n\r\n            /* build line list */\r\n\r\n            constructLineList(context, proc_e, linelist);\r\n\r\n            /* perform roll up if needed */\r\n\r\n            if ((context.bpd === \"tb\") &&\r\n                    context.enableRollUp &&\r\n                    isd_element.contents.length > 0 &&\r\n                    isd_element.styleAttrs[imscStyles.byName.displayAlign.qname] === 'after') {\r\n\r\n                /* horrible hack, perhaps default region id should be underscore everywhere? */\r\n\r\n                var rid = isd_element.id === '' ? '_' : isd_element.id;\r\n\r\n                var rb = new RegionPBuffer(rid, linelist);\r\n\r\n                context.currentISDState[rb.id] = rb;\r\n\r\n                if (context.previousISDState &&\r\n                        rb.id in context.previousISDState &&\r\n                        context.previousISDState[rb.id].plist.length > 0 &&\r\n                        rb.plist.length > 1 &&\r\n                        rb.plist[rb.plist.length - 2].text ===\r\n                        context.previousISDState[rb.id].plist[context.previousISDState[rb.id].plist.length - 1].text) {\r\n\r\n                    var body_elem = e.firstElementChild;\r\n\r\n                    var h = rb.plist[rb.plist.length - 1].after - rb.plist[rb.plist.length - 1].before;\r\n\r\n                    body_elem.style.bottom = \"-\" + h + \"px\";\r\n                    body_elem.style.transition = \"transform 0.4s\";\r\n                    body_elem.style.position = \"relative\";\r\n                    body_elem.style.transform = \"translateY(-\" + h + \"px)\";\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* TODO: clean-up the spans ? */\r\n\r\n        }\r\n    }\r\n\r\n    function applyLinePadding(lineList, lp, context) {\r\n\r\n        for (var i in lineList) {\r\n\r\n            var l = lineList[i].elements.length;\r\n\r\n            var se = lineList[i].elements[lineList[i].start_elem];\r\n\r\n            var ee = lineList[i].elements[lineList[i].end_elem];\r\n\r\n            var pospadpxlen = Math.ceil(lp) + \"px\";\r\n\r\n            var negpadpxlen = \"-\" + Math.ceil(lp) + \"px\";\r\n\r\n            if (l !== 0) {\r\n\r\n                if (context.ipd === \"lr\") {\r\n\r\n                    se.node.style.borderLeftColor = se.bgcolor || \"#00000000\";\r\n                    se.node.style.borderLeftStyle = \"solid\";\r\n                    se.node.style.borderLeftWidth = pospadpxlen;\r\n                    se.node.style.marginLeft = negpadpxlen;\r\n\r\n                } else if (context.ipd === \"rl\") {\r\n\r\n                    se.node.style.borderRightColor = se.bgcolor || \"#00000000\";\r\n                    se.node.style.borderRightStyle = \"solid\";\r\n                    se.node.style.borderRightWidth = pospadpxlen;\r\n                    se.node.style.marginRight = negpadpxlen;\r\n\r\n                } else if (context.ipd === \"tb\") {\r\n\r\n                    se.node.style.borderTopColor = se.bgcolor || \"#00000000\";\r\n                    se.node.style.borderTopStyle = \"solid\";\r\n                    se.node.style.borderTopWidth = pospadpxlen;\r\n                    se.node.style.marginTop = negpadpxlen;\r\n\r\n                }\r\n\r\n                if (context.ipd === \"lr\") {\r\n\r\n                    ee.node.style.borderRightColor = ee.bgcolor  || \"#00000000\";\r\n                    ee.node.style.borderRightStyle = \"solid\";\r\n                    ee.node.style.borderRightWidth = pospadpxlen;\r\n                    ee.node.style.marginRight = negpadpxlen;\r\n\r\n                } else if (context.ipd === \"rl\") {\r\n\r\n                    ee.node.style.borderLeftColor = ee.bgcolor || \"#00000000\";\r\n                    ee.node.style.borderLeftStyle = \"solid\";\r\n                    ee.node.style.borderLeftWidth = pospadpxlen;\r\n                    ee.node.style.marginLeft = negpadpxlen;\r\n\r\n                } else if (context.ipd === \"tb\") {\r\n\r\n                    ee.node.style.borderBottomColor = ee.bgcolor || \"#00000000\";\r\n                    ee.node.style.borderBottomStyle = \"solid\";\r\n                    ee.node.style.borderBottomWidth = pospadpxlen;\r\n                    ee.node.style.marginBottom = negpadpxlen;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyMultiRowAlign(lineList) {\r\n\r\n        /* apply an explicit br to all but the last line */\r\n\r\n        for (var i = 0; i < lineList.length - 1; i++) {\r\n\r\n            var l = lineList[i].elements.length;\r\n\r\n            if (l !== 0 && lineList[i].br === false) {\r\n                var br = document.createElement(\"br\");\r\n\r\n                var lastnode = lineList[i].elements[l - 1].node;\r\n\r\n                lastnode.parentElement.insertBefore(br, lastnode.nextSibling);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyTextEmphasisOutside(lineList, context) {\r\n\r\n        /* supports \"outside\" only */\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            for (var j = 0; j < lineList[i].te.length; j++) {\r\n\r\n                /* skip if position already set */\r\n\r\n                if (lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] &&\r\n                    lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] !== \"none\")\r\n                    continue;\r\n\r\n                var pos;\r\n\r\n                if (context.bpd === \"tb\") {\r\n\r\n                    pos = (i === 0) ? \"left over\" : \"left under\";\r\n\r\n\r\n                } else {\r\n\r\n                    if (context.bpd === \"rl\") {\r\n\r\n                        pos = (i === 0) ? \"right under\" : \"left under\";\r\n\r\n                    } else {\r\n\r\n                        pos = (i === 0) ? \"left under\" : \"right under\";\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] = pos;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyRubyPosition(lineList, context) {\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            for (var j = 0; j < lineList[i].rbc.length; j++) {\r\n\r\n                /* skip if ruby-position already set */\r\n\r\n                if (lineList[i].rbc[j].style[RUBYPOSITION_PROP])\r\n                    continue;\r\n\r\n                var pos;\r\n\r\n                if (RUBYPOSITION_ISWK) {\r\n\r\n                    /* WebKit exception */\r\n\r\n                    pos = (i === 0) ? \"before\" : \"after\";\r\n\r\n                } else if (context.bpd === \"tb\") {\r\n\r\n                    pos = (i === 0) ? \"over\" : \"under\";\r\n\r\n\r\n                } else {\r\n\r\n                    if (context.bpd === \"rl\") {\r\n\r\n                        pos = (i === 0) ? \"over\" : \"under\";\r\n\r\n                    } else {\r\n\r\n                        pos = (i === 0) ? \"under\" : \"over\";\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                lineList[i].rbc[j].style[RUBYPOSITION_PROP] = pos;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyRubyReserve(lineList, context) {\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            var ruby = document.createElement(\"ruby\");\r\n\r\n            var rb = document.createElement(\"rb\");\r\n            rb.textContent = \"\\u200B\";\r\n\r\n            ruby.appendChild(rb);\r\n\r\n            var rt1;\r\n            var rt2;\r\n\r\n            var fs = context.rubyReserve[1].toUsedLength(context.w, context.h) + \"px\";\r\n\r\n            if (context.rubyReserve[0] === \"both\" || (context.rubyReserve[0] === \"outside\" && lineList.length == 1)) {\r\n\r\n                rt1 = document.createElement(\"rtc\");\r\n                rt1.style[RUBYPOSITION_PROP] = RUBYPOSITION_ISWK ? \"after\" : \"under\";\r\n                rt1.textContent = \"\\u200B\";\r\n                rt1.style.fontSize = fs;\r\n\r\n                rt2 = document.createElement(\"rtc\");\r\n                rt2.style[RUBYPOSITION_PROP] = RUBYPOSITION_ISWK ? \"before\" : \"over\";\r\n                rt2.textContent = \"\\u200B\";\r\n                rt2.style.fontSize = fs;\r\n\r\n                ruby.appendChild(rt1);\r\n                ruby.appendChild(rt2);\r\n\r\n            } else {\r\n\r\n                rt1 = document.createElement(\"rtc\");\r\n                rt1.textContent = \"\\u200B\";\r\n                rt1.style.fontSize = fs;\r\n\r\n                var pos;\r\n\r\n                if (context.rubyReserve[0] === \"after\" || (context.rubyReserve[0] === \"outside\" && i > 0)) {\r\n\r\n                    pos = RUBYPOSITION_ISWK ? \"after\" : ((context.bpd === \"tb\" || context.bpd === \"rl\") ? \"under\" : \"over\");\r\n\r\n                } else {\r\n\r\n                    pos = RUBYPOSITION_ISWK ? \"before\" : ((context.bpd === \"tb\" || context.bpd === \"rl\") ? \"over\" : \"under\");\r\n\r\n                }\r\n\r\n                rt1.style[RUBYPOSITION_PROP] = pos;\r\n\r\n                ruby.appendChild(rt1);\r\n\r\n            }\r\n\r\n            /* add in front of the first ruby element of the line, if it exists */\r\n\r\n            var sib = null;\r\n\r\n            for (var j = 0; j < lineList[i].rbc.length; j++) {\r\n\r\n                if (lineList[i].rbc[j].localName === 'ruby') {\r\n\r\n                    sib = lineList[i].rbc[j];\r\n\r\n                    /* copy specified style properties from the sibling ruby container */\r\n                    \r\n                    for(var k = 0; k < sib.style.length; k++) {\r\n\r\n                        ruby.style.setProperty(sib.style.item(k), sib.style.getPropertyValue(sib.style.item(k)));\r\n\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n            /* otherwise add before first span */\r\n\r\n            sib = sib || lineList[i].elements[0].node;\r\n\r\n            sib.parentElement.insertBefore(ruby, sib);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyFillLineGap(lineList, par_before, par_after, context) {\r\n\r\n        /* positive for BPD = lr and tb, negative for BPD = rl */\r\n        var s = Math.sign(par_after - par_before);\r\n\r\n        for (var i = 0; i <= lineList.length; i++) {\r\n\r\n            /* compute frontier between lines */\r\n\r\n            var frontier;\r\n\r\n            if (i === 0) {\r\n\r\n                frontier = par_before;\r\n\r\n            } else if (i === lineList.length) {\r\n\r\n                frontier = par_after;\r\n\r\n            } else {\r\n\r\n                frontier = (lineList[i].before + lineList[i - 1].after) / 2;\r\n\r\n            }\r\n\r\n            /* padding amount */\r\n\r\n            var pad;\r\n\r\n            /* current element */\r\n\r\n            var e;\r\n\r\n            /* before line */\r\n\r\n            if (i > 0) {\r\n\r\n                for (var j = 0; j < lineList[i - 1].elements.length; j++) {\r\n\r\n                    if (lineList[i - 1].elements[j].bgcolor === null)\r\n                        continue;\r\n\r\n                    e = lineList[i - 1].elements[j];\r\n\r\n                    if (s * (e.after - frontier) < 0) {\r\n\r\n                        pad = Math.ceil(Math.abs(frontier - e.after)) + \"px\";\r\n\r\n                        e.node.style.backgroundColor = e.bgcolor;\r\n\r\n                        if (context.bpd === \"lr\") {\r\n\r\n                            e.node.style.paddingRight = pad;\r\n\r\n\r\n                        } else if (context.bpd === \"rl\") {\r\n\r\n                            e.node.style.paddingLeft = pad;\r\n\r\n                        } else if (context.bpd === \"tb\") {\r\n\r\n                            e.node.style.paddingBottom = pad;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* after line */\r\n\r\n            if (i < lineList.length) {\r\n\r\n                for (var k = 0; k < lineList[i].elements.length; k++) {\r\n\r\n                    e = lineList[i].elements[k];\r\n\r\n                    if (e.bgcolor === null)\r\n                        continue;\r\n\r\n                    if (s * (e.before - frontier) > 0) {\r\n\r\n                        pad = Math.ceil(Math.abs(e.before - frontier)) + \"px\";\r\n\r\n                        e.node.style.backgroundColor = e.bgcolor;\r\n\r\n                        if (context.bpd === \"lr\") {\r\n\r\n                            e.node.style.paddingLeft = pad;\r\n\r\n\r\n                        } else if (context.bpd === \"rl\") {\r\n\r\n                            e.node.style.paddingRight = pad;\r\n\r\n\r\n                        } else if (context.bpd === \"tb\") {\r\n\r\n                            e.node.style.paddingTop = pad;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function RegionPBuffer(id, lineList) {\r\n\r\n        this.id = id;\r\n\r\n        this.plist = lineList;\r\n\r\n    }\r\n\r\n    function rect2edges(rect, context) {\r\n\r\n        var edges = {before: null, after: null, start: null, end: null};\r\n\r\n        if (context.bpd === \"tb\") {\r\n\r\n            edges.before = rect.top;\r\n            edges.after = rect.bottom;\r\n\r\n            if (context.ipd === \"lr\") {\r\n\r\n                edges.start = rect.left;\r\n                edges.end = rect.right;\r\n\r\n            } else {\r\n\r\n                edges.start = rect.right;\r\n                edges.end = rect.left;\r\n            }\r\n\r\n        } else if (context.bpd === \"lr\") {\r\n\r\n            edges.before = rect.left;\r\n            edges.after = rect.right;\r\n            edges.start = rect.top;\r\n            edges.end = rect.bottom;\r\n\r\n        } else if (context.bpd === \"rl\") {\r\n\r\n            edges.before = rect.right;\r\n            edges.after = rect.left;\r\n            edges.start = rect.top;\r\n            edges.end = rect.bottom;\r\n\r\n        }\r\n\r\n        return edges;\r\n\r\n    }\r\n\r\n    function constructLineList(context, element, llist, bgcolor) {\r\n\r\n        if (element.localName === \"rt\" || element.localName === \"rtc\") {\r\n\r\n            /* skip ruby annotations */\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        var curbgcolor = element.style.backgroundColor || bgcolor;\r\n\r\n        if (element.childElementCount === 0) {\r\n\r\n            if (element.localName === 'span' || element.localName === 'rb') {\r\n\r\n                var r = element.getBoundingClientRect();\r\n\r\n                /* skip if span is not displayed */\r\n\r\n                if (r.height === 0 || r.width === 0)\r\n                    return;\r\n\r\n                var edges = rect2edges(r, context);\r\n\r\n                if (llist.length === 0 ||\r\n                        (!isSameLine(edges.before, edges.after, llist[llist.length - 1].before, llist[llist.length - 1].after))\r\n                        ) {\r\n\r\n                    llist.push({\r\n                        before: edges.before,\r\n                        after: edges.after,\r\n                        start: edges.start,\r\n                        end: edges.end,\r\n                        start_elem: 0,\r\n                        end_elem: 0,\r\n                        elements: [],\r\n                        rbc: [],\r\n                        te: [],\r\n                        text: \"\",\r\n                        br: false\r\n                    });\r\n\r\n                } else {\r\n\r\n                    /* positive for BPD = lr and tb, negative for BPD = rl */\r\n                    var bpd_dir = Math.sign(edges.after - edges.before);\r\n\r\n                    /* positive for IPD = lr and tb, negative for IPD = rl */\r\n                    var ipd_dir = Math.sign(edges.end - edges.start);\r\n\r\n                    /* check if the line height has increased */\r\n\r\n                    if (bpd_dir * (edges.before - llist[llist.length - 1].before) < 0) {\r\n                        llist[llist.length - 1].before = edges.before;\r\n                    }\r\n\r\n                    if (bpd_dir * (edges.after - llist[llist.length - 1].after) > 0) {\r\n                        llist[llist.length - 1].after = edges.after;\r\n                    }\r\n\r\n                    if (ipd_dir * (edges.start - llist[llist.length - 1].start) < 0) {\r\n                        llist[llist.length - 1].start = edges.start;\r\n                        llist[llist.length - 1].start_elem = llist[llist.length - 1].elements.length;\r\n                    }\r\n\r\n                    if (ipd_dir * (edges.end - llist[llist.length - 1].end) > 0) {\r\n                        llist[llist.length - 1].end = edges.end;\r\n                        llist[llist.length - 1].end_elem = llist[llist.length - 1].elements.length;\r\n                    }\r\n\r\n                }\r\n\r\n                llist[llist.length - 1].text += element.textContent;\r\n\r\n                llist[llist.length - 1].elements.push(\r\n                        {\r\n                            node: element,\r\n                            bgcolor: curbgcolor,\r\n                            before: edges.before,\r\n                            after: edges.after\r\n                        }\r\n                );\r\n\r\n            } else if (element.localName === 'br' && llist.length !== 0) {\r\n\r\n                llist[llist.length - 1].br = true;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            var child = element.firstChild;\r\n\r\n            while (child) {\r\n\r\n                if (child.nodeType === Node.ELEMENT_NODE) {\r\n\r\n                    constructLineList(context, child, llist, curbgcolor);\r\n\r\n                    if (child.localName === 'ruby' || child.localName === 'rtc') {\r\n\r\n                        /* remember non-empty ruby and rtc elements so that tts:rubyPosition can be applied */\r\n\r\n                        if (llist.length > 0) {\r\n\r\n                            llist[llist.length - 1].rbc.push(child);\r\n\r\n                        }\r\n\r\n                    } else if (child.localName === 'span' &&\r\n                            child.style[TEXTEMPHASISSTYLE_PROP] &&\r\n                            child.style[TEXTEMPHASISSTYLE_PROP] !== \"none\") {\r\n\r\n                        /* remember non-empty span elements with textEmphasis */\r\n\r\n                        if (llist.length > 0) {\r\n\r\n                            llist[llist.length - 1].te.push(child);\r\n\r\n                        }\r\n\r\n                    }\r\n                    \r\n\r\n                }\r\n\r\n                child = child.nextSibling;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function isSameLine(before1, after1, before2, after2) {\r\n\r\n        return ((after1 < after2) && (before1 > before2)) || ((after2 <= after1) && (before2 >= before1));\r\n\r\n    }\r\n\r\n    function applyTextEmphasis(context, dom_element, isd_element, attr) {\r\n\r\n        /* ignore color (not used in IMSC 1.1) */\r\n\r\n        if (attr.style === \"none\") {\r\n\r\n            /* text-emphasis is not inherited and the default is none, so nothing to do */\r\n            \r\n            return;\r\n        \r\n        } else if (attr.style === \"auto\") {\r\n\r\n            dom_element.style[TEXTEMPHASISSTYLE_PROP] = \"filled\";\r\n        \r\n        } else {\r\n\r\n            dom_element.style[TEXTEMPHASISSTYLE_PROP] =  attr.style + \" \" + attr.symbol;\r\n        }\r\n\r\n        /* ignore \"outside\" position (set in postprocessing) */\r\n\r\n        if (attr.position === \"before\" || attr.position === \"after\") {\r\n\r\n            var pos;\r\n\r\n            if (context.bpd === \"tb\") {\r\n\r\n                pos = (attr.position === \"before\") ? \"left over\" : \"left under\";\r\n\r\n\r\n            } else {\r\n\r\n                if (context.bpd === \"rl\") {\r\n\r\n                    pos = (attr.position === \"before\") ? \"right under\" : \"left under\";\r\n\r\n                } else {\r\n\r\n                    pos = (attr.position === \"before\") ? \"left under\" : \"right under\";\r\n\r\n                }\r\n\r\n            }\r\n\r\n            dom_element.style[TEXTEMPHASISPOSITION_PROP] = pos;\r\n        }\r\n    }\r\n\r\n    function HTMLStylingMapDefinition(qName, mapFunc) {\r\n        this.qname = qName;\r\n        this.map = mapFunc;\r\n    }\r\n\r\n    var STYLING_MAP_DEFS = [\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling backgroundColor\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* skip if transparent */\r\n                    if (attr[3] === 0)\r\n                        return;\r\n\r\n                    dom_element.style.backgroundColor = \"rgba(\" +\r\n                            attr[0].toString() + \",\" +\r\n                            attr[1].toString() + \",\" +\r\n                            attr[2].toString() + \",\" +\r\n                            (attr[3] / 255).toString() +\r\n                            \")\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling color\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.color = \"rgba(\" +\r\n                            attr[0].toString() + \",\" +\r\n                            attr[1].toString() + \",\" +\r\n                            attr[2].toString() + \",\" +\r\n                            (attr[3] / 255).toString() +\r\n                            \")\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling direction\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    dom_element.style.direction = attr;\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling display\",\r\n                function (context, dom_element, isd_element, attr) {}\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling displayAlign\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* see https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */\r\n\r\n                    /* TODO: is this affected by writing direction? */\r\n\r\n                    dom_element.style.display = \"flex\";\r\n                    dom_element.style.flexDirection = \"column\";\r\n\r\n\r\n                    if (attr === \"before\") {\r\n\r\n                        dom_element.style.justifyContent = \"flex-start\";\r\n\r\n                    } else if (attr === \"center\") {\r\n\r\n                        dom_element.style.justifyContent = \"center\";\r\n\r\n                    } else if (attr === \"after\") {\r\n\r\n                        dom_element.style.justifyContent = \"flex-end\";\r\n                    }\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling extent\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    /* TODO: this is super ugly */\r\n\r\n                    context.regionH = attr.h.toUsedLength(context.w, context.h);\r\n                    context.regionW = attr.w.toUsedLength(context.w, context.h);\r\n\r\n                    /* \r\n                     * CSS height/width are measured against the content rectangle,\r\n                     * whereas TTML height/width include padding\r\n                     */\r\n\r\n                    var hdelta = 0;\r\n                    var wdelta = 0;\r\n\r\n                    var p = isd_element.styleAttrs[\"http://www.w3.org/ns/ttml#styling padding\"];\r\n\r\n                    if (!p) {\r\n\r\n                        /* error */\r\n\r\n                    } else {\r\n\r\n                        hdelta = p[0].toUsedLength(context.w, context.h) + p[2].toUsedLength(context.w, context.h);\r\n                        wdelta = p[1].toUsedLength(context.w, context.h) + p[3].toUsedLength(context.w, context.h);\r\n\r\n                    }\r\n\r\n                    dom_element.style.height = (context.regionH - hdelta) + \"px\";\r\n                    dom_element.style.width = (context.regionW - wdelta) + \"px\";\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontFamily\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var rslt = [];\r\n\r\n                    /* per IMSC1 */\r\n\r\n                    for (var i in attr) {\r\n\r\n                        if (attr[i] === \"monospaceSerif\") {\r\n\r\n                            rslt.push(\"Courier New\");\r\n                            rslt.push('\"Liberation Mono\"');\r\n                            rslt.push(\"Courier\");\r\n                            rslt.push(\"monospace\");\r\n\r\n                        } else if (attr[i] === \"proportionalSansSerif\") {\r\n\r\n                            rslt.push(\"Arial\");\r\n                            rslt.push(\"Helvetica\");\r\n                            rslt.push('\"Liberation Sans\"');\r\n                            rslt.push(\"sans-serif\");\r\n\r\n                        } else if (attr[i] === \"monospace\") {\r\n\r\n                            rslt.push(\"monospace\");\r\n\r\n                        } else if (attr[i] === \"sansSerif\") {\r\n\r\n                            rslt.push(\"sans-serif\");\r\n\r\n                        } else if (attr[i] === \"serif\") {\r\n\r\n                            rslt.push(\"serif\");\r\n\r\n                        } else if (attr[i] === \"monospaceSansSerif\") {\r\n\r\n                            rslt.push(\"Consolas\");\r\n                            rslt.push(\"monospace\");\r\n\r\n                        } else if (attr[i] === \"proportionalSerif\") {\r\n\r\n                            rslt.push(\"serif\");\r\n\r\n                        } else {\r\n\r\n                            rslt.push(attr[i]);\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    dom_element.style.fontFamily = rslt.join(\",\");\r\n                }\r\n        ),\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling shear\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* return immediately if tts:shear is 0% since CSS transforms are not inherited*/\r\n\r\n                    if (attr === 0)\r\n                        return;\r\n\r\n                    var angle = attr * -0.9;\r\n\r\n                    /* context.bpd is needed since writing mode is not inherited and sets the inline progression */\r\n\r\n                    if (context.bpd === \"tb\") {\r\n\r\n                        dom_element.style.transform = \"skewX(\" + angle + \"deg)\";\r\n\r\n                    } else {\r\n\r\n                        dom_element.style.transform = \"skewY(\" + angle + \"deg)\";\r\n\r\n                    }\r\n\r\n                }\r\n        ),\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontSize\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.fontSize = attr.toUsedLength(context.w, context.h) + \"px\";\r\n                }\r\n        ),\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontStyle\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.fontStyle = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontWeight\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.fontWeight = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling lineHeight\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    if (attr === \"normal\") {\r\n\r\n                        dom_element.style.lineHeight = \"normal\";\r\n\r\n                    } else {\r\n\r\n                        dom_element.style.lineHeight = attr.toUsedLength(context.w, context.h) + \"px\";\r\n                    }\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling opacity\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.opacity = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling origin\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.top = attr.h.toUsedLength(context.w, context.h) + \"px\";\r\n                    dom_element.style.left = attr.w.toUsedLength(context.w, context.h) + \"px\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling overflow\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.overflow = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling padding\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* attr: top,left,bottom,right*/\r\n\r\n                    /* style: top right bottom left*/\r\n\r\n                    var rslt = [];\r\n\r\n                    rslt[0] = attr[0].toUsedLength(context.w, context.h) + \"px\";\r\n                    rslt[1] = attr[3].toUsedLength(context.w, context.h) + \"px\";\r\n                    rslt[2] = attr[2].toUsedLength(context.w, context.h) + \"px\";\r\n                    rslt[3] = attr[1].toUsedLength(context.w, context.h) + \"px\";\r\n\r\n                    dom_element.style.padding = rslt.join(\" \");\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling position\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.top = attr.h.toUsedLength(context.w, context.h) + \"px\";\r\n                    dom_element.style.left = attr.w.toUsedLength(context.w, context.h) + \"px\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling rubyAlign\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.rubyAlign = attr === \"spaceAround\" ? \"space-around\" : \"center\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling rubyPosition\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* skip if \"outside\", which is handled by applyRubyPosition() */\r\n\r\n                    if (attr === \"before\" || attr === \"after\") {\r\n\r\n                        var pos;\r\n\r\n                        if (RUBYPOSITION_ISWK) {\r\n\r\n                            /* WebKit exception */\r\n        \r\n                            pos = attr;\r\n        \r\n                        } else if (context.bpd === \"tb\") {\r\n\r\n                            pos = (attr === \"before\") ? \"over\" : \"under\";\r\n\r\n\r\n                        } else {\r\n\r\n                            if (context.bpd === \"rl\") {\r\n\r\n                                pos = (attr === \"before\") ? \"over\" : \"under\";\r\n\r\n                            } else {\r\n\r\n                                pos = (attr === \"before\") ? \"under\" : \"over\";\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        /* apply position to the parent dom_element, i.e. ruby or rtc */\r\n\r\n                        dom_element.parentElement.style[RUBYPOSITION_PROP] = pos;\r\n                    }\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling showBackground\",\r\n                null\r\n                ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textAlign\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var ta;\r\n\r\n                    /* handle UAs that do not understand start or end */\r\n\r\n                    if (attr === \"start\") {\r\n\r\n                        ta = (context.ipd === \"rl\") ? \"right\" : \"left\";\r\n\r\n                    } else if (attr === \"end\") {\r\n\r\n                        ta = (context.ipd === \"rl\") ? \"left\" : \"right\";\r\n\r\n                    } else {\r\n\r\n                        ta = attr;\r\n\r\n                    }\r\n\r\n                    dom_element.style.textAlign = ta;\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textDecoration\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.textDecoration = attr.join(\" \").replace(\"lineThrough\", \"line-through\");\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textOutline\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* defer to tts:textShadow */\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textShadow\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var txto = isd_element.styleAttrs[imscStyles.byName.textOutline.qname];\r\n\r\n                    if (attr === \"none\" && txto === \"none\") {\r\n\r\n                        dom_element.style.textShadow = \"\";\r\n\r\n                    } else {\r\n\r\n                        var s = [];\r\n\r\n                        if (txto !== \"none\") {\r\n\r\n                            /* emulate text outline */\r\n\r\n                            var to_color = \"rgba(\" +\r\n                                                txto.color[0].toString() + \",\" +\r\n                                                txto.color[1].toString() + \",\" +\r\n                                                txto.color[2].toString() + \",\" +\r\n                                                (txto.color[3] / 255).toString() +\r\n                                                \")\";\r\n\r\n                            s.push(  \"1px 1px 1px \" + to_color);\r\n                            s.push(  \"-1px 1px 1px \" + to_color);\r\n                            s.push(  \"1px -1px 1px \" + to_color);\r\n                            s.push(  \"-1px -1px 1px \" + to_color);\r\n\r\n                        }\r\n\r\n                        /* add text shadow */\r\n\r\n                        if (attr !== \"none\") {\r\n\r\n                            for (var i in attr) {\r\n\r\n\r\n                                s.push(attr[i].x_off.toUsedLength(context.w, context.h) + \"px \" +\r\n                                        attr[i].y_off.toUsedLength(context.w, context.h) + \"px \" +\r\n                                        attr[i].b_radius.toUsedLength(context.w, context.h) + \"px \" +\r\n                                        \"rgba(\" +\r\n                                        attr[i].color[0].toString() + \",\" +\r\n                                        attr[i].color[1].toString() + \",\" +\r\n                                        attr[i].color[2].toString() + \",\" +\r\n                                        (attr[i].color[3] / 255).toString() +\r\n                                        \")\"\r\n                                        );\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        dom_element.style.textShadow = s.join(\",\");\r\n\r\n                    }\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textCombine\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    dom_element.style.textCombineUpright = attr;\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textEmphasis\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* applied as part of HTML document construction */\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling unicodeBidi\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var ub;\r\n\r\n                    if (attr === 'bidiOverride') {\r\n                        ub = \"bidi-override\";\r\n                    } else {\r\n                        ub = attr;\r\n                    }\r\n\r\n                    dom_element.style.unicodeBidi = ub;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling visibility\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.visibility = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling wrapOption\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    if (attr === \"wrap\") {\r\n\r\n                        if (isd_element.space === \"preserve\") {\r\n                            dom_element.style.whiteSpace = \"pre-wrap\";\r\n                        } else {\r\n                            dom_element.style.whiteSpace = \"normal\";\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (isd_element.space === \"preserve\") {\r\n\r\n                            dom_element.style.whiteSpace = \"pre\";\r\n\r\n                        } else {\r\n                            dom_element.style.whiteSpace = \"noWrap\";\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling writingMode\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var wm;\r\n\r\n                    if (attr === \"lrtb\" || attr === \"lr\") {\r\n\r\n                        dom_element.style.writingMode = \"horizontal-tb\";\r\n\r\n                    } else if (attr === \"rltb\" || attr === \"rl\") {\r\n\r\n                        dom_element.style.writingMode = \"horizontal-tb\";\r\n\r\n                    } else if (attr === \"tblr\") {\r\n\r\n                        dom_element.style.writingMode = \"vertical-lr\";\r\n\r\n                    } else if (attr === \"tbrl\" || attr === \"tb\") {\r\n\r\n                        dom_element.style.writingMode = \"vertical-rl\";\r\n\r\n                    }\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling zIndex\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.zIndex = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml/profile/imsc1#styling forcedDisplay\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    if (context.displayForcedOnlyMode && attr === false) {\r\n                        dom_element.style.visibility = \"hidden\";\r\n                    }\r\n\r\n                }\r\n        )\r\n    ];\r\n\r\n    var STYLMAP_BY_QNAME = {};\r\n\r\n    for (var i in STYLING_MAP_DEFS) {\r\n\r\n        STYLMAP_BY_QNAME[STYLING_MAP_DEFS[i].qname] = STYLING_MAP_DEFS[i];\r\n    }\r\n\r\n    /* CSS property names */\r\n\r\n    var RUBYPOSITION_ISWK = \"webkitRubyPosition\" in window.getComputedStyle(document.documentElement);\r\n\r\n    var RUBYPOSITION_PROP = RUBYPOSITION_ISWK ? \"webkitRubyPosition\" : \"rubyPosition\";\r\n\r\n    var TEXTEMPHASISSTYLE_PROP = \"webkitTextEmphasisStyle\" in window.getComputedStyle(document.documentElement) ? \"webkitTextEmphasisStyle\" : \"textEmphasisStyle\";\r\n\r\n    var TEXTEMPHASISPOSITION_PROP = \"webkitTextEmphasisPosition\" in window.getComputedStyle(document.documentElement) ? \"webkitTextEmphasisPosition\" : \"textEmphasisPosition\";\r\n\r\n    /* error utilities */\r\n\r\n    function reportError(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.error && errorHandler.error(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n})(typeof exports === 'undefined' ? this.imscHTML = {} : exports,\r\n        typeof imscNames === 'undefined' ? require(\"./names\") : imscNames,\r\n        typeof imscStyles === 'undefined' ? require(\"./styles\") : imscStyles,\r\n        typeof imscUtils === 'undefined' ? require(\"./utils\") : imscUtils);"]},"metadata":{},"sourceType":"script"}