{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _BaseMatcher2 = require('./BaseMatcher');\n\nvar _BaseMatcher3 = _interopRequireDefault(_BaseMatcher2);\n\nvar _Constants = require('../../../streaming/constants/Constants');\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nvar _DashConstants = require('../../constants/DashConstants');\n\nvar _DashConstants2 = _interopRequireDefault(_DashConstants);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* @classdesc matches and converts xs:duration to seconds\n*/\n\n\nvar durationRegex = /^([-])?P(([\\d.]*)Y)?(([\\d.]*)M)?(([\\d.]*)D)?T?(([\\d.]*)H)?(([\\d.]*)M)?(([\\d.]*)S)?/;\nvar SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\nvar SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\nvar SECONDS_IN_DAY = 24 * 60 * 60;\nvar SECONDS_IN_HOUR = 60 * 60;\nvar SECONDS_IN_MIN = 60;\n\nvar DurationMatcher = function (_BaseMatcher) {\n  _inherits(DurationMatcher, _BaseMatcher);\n\n  function DurationMatcher() {\n    _classCallCheck(this, DurationMatcher);\n\n    return _possibleConstructorReturn(this, (DurationMatcher.__proto__ || Object.getPrototypeOf(DurationMatcher)).call(this, function (attr) {\n      var attributeList = [_DashConstants2.default.MIN_BUFFER_TIME, _DashConstants2.default.MEDIA_PRESENTATION_DURATION, _DashConstants2.default.MINIMUM_UPDATE_PERIOD, _DashConstants2.default.TIMESHIFT_BUFFER_DEPTH, _DashConstants2.default.MAX_SEGMENT_DURATION, _DashConstants2.default.MAX_SUBSEGMENT_DURATION, _DashConstants2.default.SUGGESTED_PRESENTATION_DELAY, _DashConstants2.default.START, _Constants2.default.START_TIME, _DashConstants2.default.DURATION];\n      var len = attributeList.length;\n\n      for (var i = 0; i < len; i++) {\n        if (attr.nodeName === attributeList[i]) {\n          return durationRegex.test(attr.value);\n        }\n      }\n\n      return false;\n    }, function (str) {\n      //str = \"P10Y10M10DT10H10M10.1S\";\n      var match = durationRegex.exec(str);\n      var result = parseFloat(match[3] || 0) * SECONDS_IN_YEAR + parseFloat(match[5] || 0) * SECONDS_IN_MONTH + parseFloat(match[7] || 0) * SECONDS_IN_DAY + parseFloat(match[9] || 0) * SECONDS_IN_HOUR + parseFloat(match[11] || 0) * SECONDS_IN_MIN + parseFloat(match[13] || 0);\n\n      if (match[1] !== undefined) {\n        result = -result;\n      }\n\n      return result;\n    }));\n  }\n\n  return DurationMatcher;\n}(_BaseMatcher3.default);\n\nexports.default = DurationMatcher;","map":{"version":3,"sources":["../../../../../../src/dash/parser/matchers/DurationMatcher.js"],"names":["durationRegex","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","DurationMatcher","BaseMatcher","attributeList","DashConstants","Constants","len","i","attr","match","result","parseFloat"],"mappings":"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","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc matches and converts xs:duration to seconds\n */\nimport BaseMatcher from './BaseMatcher';\nimport Constants from '../../../streaming/constants/Constants';\nimport DashConstants from '../../constants/DashConstants';\n\nconst durationRegex = /^([-])?P(([\\d.]*)Y)?(([\\d.]*)M)?(([\\d.]*)D)?T?(([\\d.]*)H)?(([\\d.]*)M)?(([\\d.]*)S)?/;\n\nconst SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\nconst SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\nconst SECONDS_IN_DAY = 24 * 60 * 60;\nconst SECONDS_IN_HOUR = 60 * 60;\nconst SECONDS_IN_MIN = 60;\n\nclass DurationMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => {\n                const attributeList = [\n                    DashConstants.MIN_BUFFER_TIME, DashConstants.MEDIA_PRESENTATION_DURATION,\n                    DashConstants.MINIMUM_UPDATE_PERIOD, DashConstants.TIMESHIFT_BUFFER_DEPTH, DashConstants.MAX_SEGMENT_DURATION,\n                    DashConstants.MAX_SUBSEGMENT_DURATION, DashConstants.SUGGESTED_PRESENTATION_DELAY, DashConstants.START,\n                    Constants.START_TIME, DashConstants.DURATION\n                ];\n                const len = attributeList.length;\n\n                for (let i = 0; i < len; i++) {\n                    if (attr.nodeName === attributeList[i]) {\n                        return durationRegex.test(attr.value);\n                    }\n                }\n\n                return false;\n            },\n            str => {\n                //str = \"P10Y10M10DT10H10M10.1S\";\n                const match = durationRegex.exec(str);\n                let result = (parseFloat(match[3] || 0) * SECONDS_IN_YEAR +\n                    parseFloat(match[5] || 0) * SECONDS_IN_MONTH +\n                    parseFloat(match[7] || 0) * SECONDS_IN_DAY +\n                    parseFloat(match[9] || 0) * SECONDS_IN_HOUR +\n                    parseFloat(match[11] || 0) * SECONDS_IN_MIN +\n                    parseFloat(match[13] || 0));\n\n                if (match[1] !== undefined) {\n                    result = -result;\n                }\n\n                return result;\n            }\n        );\n    }\n}\n\nexport default DurationMatcher;\n"]},"metadata":{},"sourceType":"script"}